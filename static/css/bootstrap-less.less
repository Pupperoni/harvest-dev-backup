/*!
 * Bootstrap v2.3.1
 *
 * Copyright 2012 Twitter, Inc
 * Licensed under the Apache License v2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 * Designed and built with all the love in the world @twitter by @mdo and @fat.
 *
 * This portion of Bootstrap has been modified
 */

// Core variables and mixins
//
// Variables
// --------------------------------------------------------

// Global values
// --------------------------
//
// VARIABLES
// --------------------------------------------------

// Color palette values
// -------------------------------------

// Grays
// -------------------------
@black:                 #000;
@grayDarker:            #222;
@grayDark:              #333;
@gray:                  #666;
@grayLight:             #999;
@grayLighter:           #eee;
@white:                 #fff;

// Accent colors
// -------------------------
@blue:                  #0088dd;
@blue-dark:             #0022ee;
@green:                 #008800;
@red:                   #e62d2d;
@yellow:                #ECBE33;
@orange:                #ff8800;
@pink:                  #c3325f;
@purple:                #7a43b6;



// SCAFFOLDING
// --------------------------------------------------

@bodyBackground:        @white;
@textColor:             @grayDarker;

// Links
// -------------------------
@linkColor:             @blue;
@linkColorHover:        @red;



// BASIC
// --------------------------------------------------

// Typography
// -------------------------------------

// Font size
// -------------------------
@fontSize12:            12px;
@fontSize13:            13px;
@fontSize14:            14px;
@fontSize15:            15px;
@fontSize16:            16px;
@fontSize18:            18px;
@fontSize21:            21px;
@fontSize27:            27px;
@fontSize32:            32px;
@fontSize36:            36px;
@fontSize44:            44px;

@h1FontSize:            @fontSize44;
@h2FontSize:            @fontSize36;
@h3FontSize:            @fontSize32;
@h4FontSize:            @fontSize27;
@h5FontSize:            @fontSize21;
@h6FontSize:            @fontSize18;

@h1LightHeight:         50px;
@h2LightHeight:         40px;
@h3LightHeight:         36px;
@h4LightHeight:         30px;
@h5LightHeight:         26px;
@h6LightHeight:         22px;

// Customed font family: interstate-light
// -------------------------
@font-face {
  font-family:          "Interstate-Light";  
  font-weight:          400;
  font-style:           normal;
	src: url("../font/Interstate-Light-webfont.eot");
	src: url("../font/Interstate-Light-webfont.eot?#iefix") format("embedded-opentype"),
       url("../font/Interstate-Light-webfont.woff") format("woff"), 
       url("../font/Interstate-Light-webfont.ttf") format("truetype"), 
       url("../font/Interstate-Light-webfont.svg#InterstateLight") format("svg");
}

// Customed font family: interstate-extral-light
// -------------------------
@font-face {
  font-family:          "Interstate-ExtraLight";  
  font-weight:          400;
  font-style:           normal;
  src: url("../font/Interstate-ExtraLight-webfont.eot");
	src: url("../font/Interstate-ExtraLight-webfont.eot?#iefix") format("embedded-opentype"),
       url("../font/Interstate-ExtraLight-webfont.woff") format("woff"),
       url("../font/Interstate-ExtraLight-webfont.ttf") format("truetype"), 
       url("../font/Interstate-ExtraLight-webfont.svg#InterstateExtraLight") format("svg");
}

// Customed font family: interstate-regular
// -------------------------
@font-face {
  font-family:          "Interstate-Regular";  
  font-weight:          400;
  font-style:           normal;
  src: url("../font/Interstate-Regular.eot");
	src: url("../font/Interstate-Regular-webfont.eot?#iefix") format("embedded-opentype"),
       url("../font/Interstate-Regular-webfont.ttf") format("truetype"), 
       url("../font/Interstate-Regular-webfont.svg#InterstateExtraLight") format("svg");
}

// Font family
// -------------------------
@sansFontFamily:        Arial, "Helvetica Neue", Helvetica, sans-serif;
@serifFontFamily:       Georgia, "Times New Roman", Times, serif;
@monoFontFamily:        Monaco, Menlo, Consolas, "Courier New", monospace;
@interstateLight:       "Interstate-Light", Arial, "Helvetica Neue", Helvetica, sans-serif;
@interstateExtraLight:  "Interstate-ExtraLight", Arial, "Helvetica Neue", Helvetica, sans-serif;
@interstateRegular:     "Interstate-Regular", Arial, "Helvetica Neue", Helvetica, sans-serif;

// Font style
// -------------------------
@baseFontSize:          @fontSize12;
@baseFontFamily:        @sansFontFamily;
@baseLineHeight:        20px;

@altFontFamily:         @serifFontFamily;

@headingsFontFamily:    inherit; // empty to use BS default, @baseFontFamily
@headingsFontWeight:    bold;
@headingsColor:         @textColor; // inherit; empty to use BS default, @textColor


// Form states and alerts
// -------------------------------------

// Warning
// -------------------------
@warningText:           @orange;
@warningBackground:     #ffffdc;
@warningIconPath:     	"../img/icon-warning-s.png";
@warningBorder:         #f5de99;

// Error
// -------------------------
@errorText:             @red;
@errorBackground:       #fff3f3;
@errorIconPath:   	    "../img/icon-error-s.png";
@errorBorder:           #fac8c8;

// Success
// -------------------------
@successText:           @green;
@successBackground:     #ebfaeb;
@successIconPath:      	"../img/icon-success-s.png";
@successBorder:         #bee3be;

// Info
// -------------------------
@infoText:              @blue;
@infoBackground:        #e6f0fa;
@infoIconPath:   	    "../img/icon-info-s.png";
@infoBorder:            #aac8f0;



// COMPONENT VARIABLES
// --------------------------------------------------

// Component font style
// -------------------------------------
// Based on 12px font-size and 20px line-height

// Font size
// -------------------------
@fontSizeLarge:         @fontSize16;
@fontSizeSmall:         @baseFontSize;

// padding size
// -------------------------
@paddingLarge:          11px;
@paddingSmall:          0px;

// line-height size
// -------------------------
@lineHeightLarge:       22px;
@lineHeightSmall:       18px; 

// border radius size
// -------------------------
@borderRadius:          3px;
@borderRadiusLarge:     @borderRadius;
@borderRadiusSmall:     @borderRadius;

// Z-index master list
// -------------------------
// Used for a bird's eye view of components dependent on the z-axis
// Try to avoid customizing these :)

@zindexDropdown:        1000;
@zindexPopover:         1010;
@zindexTooltip:         1020;
@zindexSplitBar:        1030;
@zindexFixedNavbar:     1040;
@zindexModalBackdrop:   1050;
@zindexModal:           1060;


// Sprite icons path
// -------------------------
@iconSpritePath:        "../img/glyphicons-halflings.png";
@iconWhiteSpritePath:   "../img/glyphicons-halflings-white.png";

// Input placeholder text color
// -------------------------
@placeholderText:       @grayLight;

// Hr border color
// -------------------------
@hrBorder:              #ccc;

// Horizontal forms & lists
// -------------------------
@horizontalComponentOffset:       180px;


// Wells
// -------------------------
@wellBackground:        #f5f5f5;


// Forms
// --------------------------
//
// Variables
// --------------------------------------------------------

// Forms
// --------------------------

// Input elements
// --------------------------
@inputBackgroundColor:          @white;
@inputWidth:                    220 - (@inputHorizontalPadding * 2);
@inputHeight:                   @baseLineHeight + 10px; // base line-height + 8px vertical padding + 2px top/bottom border
@inputVerticalPadding:          ((@inputHeight - @baseLineHeight) / 2) - 1;
@inputHorizontalPadding:        6px;
@inputBorderColor:              #bbb;
@inputBorderColorHover:         #bbb;
@inputBorderRadius:             @borderRadius;

@inputCheckboxHeight:           13px;
@inputSelctWidth:               @inputWidth + (@inputHorizontalPadding * 2) + 2;

@inputMiniWidth:                60px;
@inputSmallWidth:               90px;
@inputMediumWidth:              150px;
@inputLargeWidth:               210px;
@inputXlargeWidth:              280px;
@inputXXlargeWidth:             350px;

// Disabled state
@inputBackgroundColorDisabled:  @grayLighter;
@inputColorDisabled:            #bbb;


// Error state
@errorHelpTextIconPath:			    "../img/icon_error_for_help_text.png";


//Lend
@legendMarginBottom:            12px;
@legendPaddinBottom:            12px;
@legendBorderColorBottom:       #ddd;


//Group
@inputAppendPrependBorderColor: @btnBorderColor;


//Block
@formActionsBackgroundColor:    @grayLighter;
@formActionsBorderTopColor:     #ccc;



// COMPONENT VARIABLES
// --------------------------------------------------------

// Tables
// --------------------------
//
// Variables
// --------------------------------------------------

// Tables
// -------------------------

@tableBackground:                   transparent; // overall background-color
@tableBackgroundAccent:             #f9f9f9; // for striping
@tableBackgroundHover:              #f5f5f5; // for hover
@tableBorder:                       #dcdcdc; //@org: #ddd; // table and cell border


// Buttons
// --------------------------
//
// Variables
// --------------------------------------------------

// Buttons
// ----------------------------
 
@btnMinWidth:                         80px;
@btnBaseHeight:                       30px;
@btnHerizontalPadding:                16px - 2; //need to exclude text selfs' padding.
@btnOpacityDisabled:                  50;
@btnLightenDisabledIE7:               60%;

// Background & Background state
// -----------------------------
@btnBackgroundTop:                    @white;
@btnBackgroundBottom:                 #e8e8e8;
@btnBackgroundHover:                  #f5f5f5;
@btnBackgroundHoverBottom:            #e8e8e8;
@btnBackgroundDisabledIE7:            #f1f1f1;
@btnBackgroundActiveIE7:              #ccc;
@btnBackgroundHoverIE7:               #ddd;
@btnBackgroundPressTop:               @btnBackgroundBottom; //#dcdcdc;
@btnBackgroundPressBottom:            @btnBackgroundTop; //#fdfdfd;

// Border & Border state
// ----------------------------
@btnBorderColor:                      #bbbbbb;
@btnBorderColorHover:                 #999999;
@btnBorderColorFocused:               #0099ff;

// Shadow
// ----------------------------
@btnInsetShadowFocused:               #0099ff;

// Text color
// ----------------------------
@btnTextColorDisabled:                #cccccc;
@btnAlternateTextColor:               @white;

// Buttons gutter
@btnHorizontalGutter:                 5px;
@btnHorizontalGutterButtonIE7:        8px;
@btnInlineHorizontalGutter:           5px;
@btnBlockVerticalGutter:              5px;

// Split button dropdowns
// ----------------------------
@btnDropdownTogglePadding:            8px;
@btnDropdownTogglePaddingLeft:        @btnDropdownTogglePadding;
@btnDropdownTogglePaddingRight:       @btnDropdownTogglePadding;
@btnDropdownTogglePaddingVerticalIE7: 6px;

//Dropdowns caret
@btnDropdownCaretBorderWidth:         4px;
@btnDropdownCaretMarginLeft:          4px;
@btnLargeDropdownCaretMarginLeft:     8px;
@btnLargeDropdownCaretBorderWidth:    5px;

// Alternate buttons
// ----------------------------
@btnAlternateTextColorDisabled:       #ddd;

// Primary appear as deep blue
// ----------------------------
@btnPrimaryBackgroundTop:             #328cdc; //2585db
@btnPrimaryBackgroundBottom:          #0267cd;
@btnPrimaryBackgroundHover:           #328cdc;
@btnPrimaryBackgroundActiveTop:       #0163c3;
@btnPrimaryBackgroundActiveBottom:    #328cdc;
@btnPrimaryBorderColor:               #0066cb;
@btnPrimaryBorderColorBottom:         darken(@btnPrimaryBorderColor, 10%);
@btnPrimaryBorderColorHover:          @btnPrimaryBorderColorBottom;
@btnPrimaryBorderColorFocused:        #0099ff;

// Danger and error appear as red
// -------------------------------
@btnDangerBackgroundTop:              #ED4B4E;
@btnDangerBackgroundBottom:           #D43034;
@btnDangerBackgroundHover:            #e62d2d;
@btnDangerBackgroundActiveTop:        @btnDangerBackgroundBottom; //#bf0000;
@btnDangerBackgroundActiveBottom:     @btnDangerBackgroundTop; //#e42828;
@btnDangerBorderColor:                #C92F33;
@btnDangerBorderColorBottom:          @btnDangerBorderColor; //darken(@btnDangerBorderColor, 10%);
@btnDangerBorderColorHover:           @btnDangerBorderColorBottom;
@btnDangerBorderColorFocused:         #ff9999;

// Inverse appears as dark gray
// ----------------------------
@btnInverseBackgroundTop:             #666666;
@btnInverseBackgroundBottom:          @grayDarker;
@btnInverseBackgroundHover:           #666666;
@btnInverseBackgroundActiveTop:       #242424;
@btnInverseBackgroundActiveBottom:    #414141;
@btnInverseBorderColor:               #303030;
@btnInverseBorderColorBottom:         darken(@btnInverseBorderColor, 10%);
@btnInverseBorderColorHover:          @btnInverseBorderColorBottom;
@btnInverseBorderColorFocused:        #ccc;


// Nav
// --------------------------
//
// Variables
// --------------------------------------------------

// Nav
// -------------------------
@navHeaderFontSize:           11px;
@navHeaderTextColor:          @black;


// Dropdowns
// --------------------------
//
// Variables
// --------------------------------------------------

// Dropdown
// -------------------------

// Dropdown width
@dropdownMinWidth:                160px;

// Dropdown padding
@dropdownPaddingVertical:         5px;
@dropdownPaddingHorizontal:       0;
@dropdownPaddingTop:              @dropdownPaddingVertical;
@dropdownPaddingRight:            @dropdownPaddingHorizontal;
@dropdownPaddingBottom:           @dropdownPaddingVertical;
@dropdownPaddingLeft:             @dropdownPaddingHorizontal;

// Dropdown background color
@dropdownBackgroundColor:         #fff;

// Dropdown border color
@dropdownBorderColor:             #bbb;

// Dropdown radius
@dropdownRadius:                  @borderRadius;
@dropdownRadiusTopLeft:           @dropdownRadius;
@dropdownRadiusTopRight:          @dropdownRadius;
@dropdownRadiusBottomLeft:        @dropdownRadius;
@dropdownRadiusBottomRight:       @dropdownRadius;

// Dropdown divider color
@dropdownDividerColorTop:         #ddd;
@dropdownDividerColorBottom:      @white;

// Link
// -------------------------

// Link font style
@dropdownLinkFontSize:            @baseFontSize;
@dropdownLinkFontWeight:          normal;
@dropdownLinkLineHeight:          @baseLineHeight;

// Link text color
@dropdownLinkColor:               @textColor;
@dropdownLinkColorHover:          @textColor;
@dropdownLinkColorActive:         @textColor;
@dropdownLinkColorDisabled:       #bbb;

// Link background color
@dropdownLinkBackgroundHover:     #e8e8e8;
@dropdownLinkBackgroundActive:    @dropdownLinkBackgroundHover;

// Link padding
@dropdownLinkPaddingVertical:     3px;
@dropdownLinkPaddingHorizontal:   18px;
@dropdownLinkPaddingTop:          @dropdownLinkPaddingVertical;
@dropdownLinkPaddingRight:        @dropdownLinkPaddingHorizontal; 
@dropdownLinkPaddingBottom:       @dropdownLinkPaddingVertical;
@dropdownLinkPaddingLeft:         @dropdownLinkPaddingHorizontal;

// Caret
@dropdownCaretSize:               5px;



// Navbar
// --------------------------
//
// Variables
// --------------------------------------------------

// Navbar
// -------------------------

@navbarBannerHeight:                60px;
@navbarBannerLogoHeight:            40px;
@navbarBannerProductNameFontSize:   24px;
@navbarBannerProductNameLineHeight: 36px;
@navbarCollapseWidth:               767px;
@navbarCollapseDesktopWidth:        @navbarCollapseWidth + 1;

@navbarHeight:                      36px;
@navbarBackgroundHighlight:         #e62b2b; //@org: #ffffff;
@navbarBackground:                  #cc1818; //darken(@navbarBackgroundHighlight, 42%); //@org: darken(@navbarBackgroundHighlight, 5%);
@navbarBorderTop:                   #be0000; //@black; //@org: darken(@navbarBackground, 12%);
@navbarBorderBottom:                #990000;
@navbarDividerVertical:             #ff6666;
@navbarInnerBrandWidth:             30px;
@navbarInnerBrandHeight:            30px;

@navbarText:                        @white; //org: #777;
@navbarTextSize:                    13px;
@navbarLinkColor:                   @navbarText; //@org: #777;
@navbarLinkColorHover:              @navbarText; //@org: @grayDark;
@navbarLinkColorActive:             @navbarText; //@org: @gray;
@navbarLinkColorShadow:             #780000;
@navbarLinkBackgroundHover:         #be0000;  //darken(@navbarBackgroundHighlight, 40%); //@org: transparent;

@navbarLinkMobileHeaderTextColor:   @gray;
@navbarLinkMobileTextColorActive:   @red;
@navbarLinkMobileBackground:        @white;
@navbarLinkMobileBackgroundHover:   #f0f0f0;
@navbarLinkMobileBackgroundHighlight: lighten(@grayLight, 10%);
@navbarLinkMobileBackgroundActive:  @navbarLinkMobileBackground;
@navbarLinkMobileBorderActive:      darken(@grayLight, 10%);
@navbarLinkMobileDropdownToggleTextColorOpen:  @white;
@navbarLinkMobileDropdownToggleBackgroundOpen: #bbb;
@navbarLinkMobileNavHeaderPaddingHerizontal: 15px;
@navbarLinkMobileNavHeaderPaddingVertical: 8px;


@navbarLinkBackgroundActive:           #9c0000;  //@navbarBackground; //@org: darken(@navbarBackground, 5%);
@navbarLinkBackgroundActiveHighlight:  #9c0000;
@navbarLinkBorderActive:               #9c0000;
@navbarLinkPadding:                    15px;
@navbarLinkBorderBottom:               #ddd;
@navbarCollapseBorderBottom:           #999;



@navbarBrandColor:                     @white; //@org: @navbarLinkColor;

@navbarPaddingLeft:                    @gridGutterWidth;
@navbarPaddingRight:                   @gridGutterWidth;

@navbarCollapseBtnPadding:             8px;
@navbarCollapseBtnMarginLeft:          5px;
@navbarCollapseBtnMarginRight:         5px;




// Nav-tabs, Nav-pills
// --------------------------
//
// Variables
// --------------------------------------------------

// Common style
// -------------------------
@navTabsPillsPadding:                   16px;
@navTabsPillsPaddingLeft:               @navTabsPillsPadding;
@navTabsPillsPaddingRight:              @navTabsPillsPadding;
@navTabsPillsMargin:                    -1px;

@navTabsPillsCaretColor:                @textColor;
@navTabsPillsCaretColorHover:           @textColor;
@navTabsPillsCaretColorActive:          @textColor;
@navTabsPillsCaretColorDisabled:        @navTabsTextDisabled;

// Nav-tabs
// -------------------------
@navTabsTextColor:                      @textColor;
@navTabsTextHover:                      @textColor;
@navTabsTextActive:                     @textColor;
@navTabsTextDisabled:                   #bbb;
@navTabsBorder:                         #bbb;
@navTabsBorderActive:										#ed1c24;	
@navTabsBorderWidthActive:							2px;	
@navTabsBorderDisabled:                 #ddd;
@navTabsBackgroundHighlight:            #f5f5f5;
@navTabsBackground: 			              #ebebeb; 
@navTabsBackgroundHighlightHover:       @white;
@navTabsBackgroundHover: 			          #f6f6f6; 
@navTabsBackgroundHighlightDisabled:    @navTabsBackgroundHighlight;
@navTabsBackgroundDisabled: 			      @navTabsBackground;
@navTabsLineHeiight: 			              @baseLineHeight;
@navTabsPaddingTop:                     5px;  
@navTabsPaddingBottom:                  @navTabsPaddingTop; 
@navTabsBorderRadius:                   0;

@navTabsContentMargin:              	  10px;

// Nav-tabs cover
// -------------------------
@navCoverTabsBorder:                    #b2b2b2;
@navCoverTabsBackgroundHighLight:       #fafafa;
@navCoverTabsBackground:                #e5e5e5;

// Nav-tabs Stacked
// -------------------------
@navTabsStackedBorderRadius:            @navTabsBorderRadius;

// Nav-pills
// -------------------------
@navPillsTextActive:                    @white;
@navPillsLineHeiight: 			            @baseLineHeight - 6;
@navPillsBackgroundActive:              @linkColor;
@navPillsMargin:                        3px;  
@navPillsMarginTop:                     @navPillsMargin;  
@navPillsMarginBottom:                  @navPillsMargin;  
@navPillsPaddingBottom:                 @navPillsPaddingTop; 
@navPillsPaddingTop:                    8px;  
@navPillsPaddingBottom:                 @navPillsPaddingTop; 
@navPillsBorderRadius:                  5px;

// Nav-list
// -------------------------
@navListPaddingLeft:                    9px;
@navListPaddingRight:                   9px;
@navListLineHeight:                     28px;
@navListColor:                          @textColor;
@navListColorActived:                   #e62d2d;
@navListBorderColor:                    #dcdcdc;
@navListBorderColorActived:             #ed1c24;
@navListBorderLeftWidthActived:         4px;
@navListBackgroundHover:                #f6f6f6;
@navListBackgroundActived:              @white;

@navListNestedOutterBorderColor:        #b1b1b1;
@navListNestedOutterBorderWidth:        1px;
@navListNestedListBorderColor:          #fff;
@navListNestedListBorderWidth:          1px;
@navListNestedListParentBackground:     #f0f0f0;
@navListNestedListParentBackgroundHover:#e6e6e6;
@navListNestedListCaretWidth:           5px;
@navListNestedListCaretColor:           @textColor;
@navListNestedListCaretArrowWidth:      1px;



// Breadcrumbs
// --------------------------
//
// Variables
// --------------------------------------------------------

// Breadcrumbs
// --------------------------
@breadcrumbBackground:				transparent;
@breadcrumbTextColor:				  @textColor;
@breadcrumbFontSize:				  @fontSize16;
@breadcrumbLineHeight:        20px;
@breadcrumbBorderBottom:      1px #bbb solid;
@breadcrumbPaddingBottom:     4px;
@breadcrumbMarginTop:         10px;
@breadcrumbMarginBottom:      10px;

// Link
@breadcrumbLinkColor:				  #888;
@breadcrumbTargetLinkColor:   @textColor;

// Hover
@breadcrumbHoverColor:				#ee0000;

// Rightward Arrow
@breadcrumbArrowColor:				@breadcrumbLinkColor;
@breadcrumbArrowSize:				  @fontSize18;

// Help Icon
@breadcrumbHelpIconSize:      22px;
@breadcrumbHelpIconWidth:     @breadcrumbHelpIconSize;
@breadcrumbHelpIconHeight:    @breadcrumbHelpIconSize;




// Pagination
// --------------------------
//
// Variables
// --------------------------------------------------------

// Pagination
// --------------------------
@paginationBorder:						      #ccc;
@paginationBorderRadius:				    @borderRadius;

// Link
@paginationLinkColor:					      @linkColor;
@paginationLinkBackgroundStart: 	  #fff;
@paginationLinkBackgroundEnd:	  	  #ececec;
  
// Ellipsis (...)
@paginationEllipsisColor:				    @textColor;
@paginationEllipsisBackgroundStart:	@bodyBackground;
@paginationEllipsisBackgroundEnd:		@bodyBackground;

// Hover
@paginationHoverColor:					    @linkColorHover;
@paginationHoverBackgroundStart:		#f5f5f5;
@paginationHoverBackgroundEnd:			#f5f5f5;
@paginationHoverBoxShadow:				  0 2px 0 0 #d9d9d9;
@paginationLargeHoverBoxShadow:			0 3px 0 0 #d9d9d9;

// Active
@paginationActiveFontWeight:		  	bold;
@paginationActiveColor:				    	@white;
@paginationActiveBackgroundStart:		#999;
@paginationActiveBackgroundEnd:			#999;

// Disabled
@paginationDisabledColor:			    	@grayLight;
@paginationDisabledBackgroundStart:	@bodyBackground;
@paginationDisabledBackgroundEnd:		@bodyBackground;

@paginationBorderDisabled:			  	#ccc;

@paginationLineHeight:				    	@baseLineHeight;



// Progress bars
// --------------------------
//
// Variables
// --------------------------------------------------------

// Progress bars
// --------------------------

// Default Progress variables
@progressBarHeight:                     10px;
@progressBarMinWidth:                   150px;
@progressBarMaxWidth:                   500px;
@progressBarDefaultWidth:               @progressBarMaxWidth;
@progressBackgroundTop:                 #f5f5f5;
@progressBackgroundBottom:              #f1f1f1;
@progressBackgroundShadow:              inset 0 1px 2px rgba(0,0,0,.1);
@progressLabelFontSize:                 13px;

// Default Progress bar
@progressBarBarBackgroundTop:           #ea3535;
@progressBarBarBackgroundBottom:        darken(@progressBarBarBackgroundTop, 18%);
@progressBarBarBorderColorTop:          #fb5757;
@progressBarBarBorderColorBottom:       #a10000;

// Progress striped
@ProgressStripedBarBackgroundSize:      30px;
@progressBarStripedBorderColorTop:      @progressBarBarBorderColorTop;
@progressBarStripedBorderColorBottom:   @progressBarBarBorderColorBottom;

// Progress striped actived
@ProgressStripedBarActiveSpeed:         2s;

// Progress Group Outter
@ProgressGroupOutterHeight:             @baseLineHeight;




// Alert @add
// --------------------------
//
// Variables
// --------------------------------------------------

// Alert @add
// -------------------------

@AlertMinHeight:            @baseLineHeight;
@AlertMarginBottom:         10px;
@AlertPadding:              4px;
@AlertPaddingTop:           @AlertPadding;
@AlertPaddingBottom:        @AlertPadding;
@AlertPaddingLeft:          @AlertPadding;
@AlertPaddingRight:         @AlertPadding;
@AlertRadius:               @borderRadius;
@AlertRadiusTopLeft:        @AlertRadius;
@AlertRadiusTopRight:       @AlertRadius;
@AlertRadiusBottomLeft:     @AlertRadius;
@AlertRadiusBottomRight:    @AlertRadius;
@AlertIconSize:             16px;
@AlertBorderWidth:          1px;
@AlertBorderStyle:          solid;
@AlertCloseBtnWidth:        12px;
@AlertBlockPadding:         10px;
@AlertBlockTop:             @AlertBlockPadding;
@AlertBlockBottom:          @AlertBlockPadding;
@AlertBlockParagraphGutter: 5px;

// Panel
// ---------------------------
//
// Variables
// --------------------------------------------------

// Panel
// -------------------------

@PanelHeaderFontSize: 13px;
@PanelBorderColor: #bbbbbb;
@PanelBorderStyle: solid;
@PanelBorderWidth: 1px;
@PanelContentPadding: 12px;
@PanelHeaderBackgroundColor: #f0f0f0;
@PanelHorizontalPadding: 12px;
@PanelVerticalPadding: 4px;
@PanelHeaderPadding:  @PanelVerticalPadding @PanelHorizontalPadding;
@PanelMarginBottom: 12px;



// Splitter
// ---------------------------
//
// Variables
// --------------------------------------------------

// Splitter @add
// -------------------------
@SplitterBorderWidth:                     1px;
@SplitterBorderColor:                     #bbbbbb;
@SplitterDefaultHeight:                   300px;

// Splitter bar
@SplitterBarWidth:                        6px;
@SplitterBarBorderColor:                  @SplitterBorderColor;
@SplitterBarBorderWidth:                  1px;
@SplitterBarBackgroundColor:              #f0f0f0;
@SplitterBarHandlerBorderColor:           @SplitterBorderColor;
@SplitterBarHandlerWidth:                 20px;

// Splitter Bar Zombie
@SplitterBarZombieBackgroundColor:        #0088dd;
@SplitterBarZombieReachedBackgroundColor: #ed1c24;


// Hero unit
// --------------------------
//
// Variables
// --------------------------------------------------

// Hero unit
// -------------------------

@heroUnitBackground:              @grayLighter;
@heroUnitHeadingColor:            inherit;
@heroUnitLeadColor:               inherit;


// Tooltips
// --------------------------
//
// Variables
// --------------------------------------------------

// Tooltips
// -------------------------

@tooltipColor:            #fff;
@tooltipBackground:       #333;
@tooltipArrowWidth:       5px;
@tooltipArrowColor:       @tooltipBackground;

// Toggler
// ----------------------------
//
// Variables
// --------------------------------------------------

// Toggler
// -------------------------

@backgroundColor: #ccc;
@backgroundColorOnHover: #bbb;
@backgroundColorOnState: #4cabe7;
@backgroundColorOnStateOnHover: #0088dd;

@borderColor: @backgroundColorOnHover;
@borderColorOnState: @backgroundColorOnStateOnHover;

@backdropBackgroundColor: @backgroundColorOnStateOnHover;

@handleColor: #fff;

@disabledOpacity: 50;

// Popovers
// --------------------------
//
// Variables
// --------------------------------------------------

// Popovers
// -------------------------

@popoverBackground:                 #fff;
@popoverBorderColor:                #bbb;
@popoverBorder:                     1px solid @popoverBorderColor;
@popoverRadius:                     @borderRadius;
@popoverTitleFontSize:              @fontSize15;
@popoverTitleLineHeight:            22px;
@popoverTitleBackground:            darken(@popoverBackground, 3.5%);
@popoverTitlePaddingVertical:       6px;
@popoverTitlePaddingHorizontal:     14px;

@popoverTitleBorderBottom:          1px solid darken(@popoverTitleBackground, 10%);
@popoverContentPadding:             14px;
@popoverContentPaddingVertical:     @popoverContentPadding;
@popoverContentPaddingHorizontal:   @popoverContentPadding;

@popoverArrowWidth:                 10px;
@popoverArrowColor:                 #fff;
@popoverBottomArrowColor:           @popoverTitleBackground;
// Special enhancement for popovers
@popoverArrowOuterWidth:            @popoverArrowWidth + 1;
@popoverArrowOuterColor:            @popoverBorderColor;


// Lables & Badges
// --------------------------
//
// Variables
// --------------------------------------------------

// Lables
// ----------------------------
@LablesPaddingVertical:               1px;
@LablesPaddingHorizontal:             4px;
@LablesBackground:                    #bbb;
@LablesLineHeight:                    14px;
@LablesRadius:                        @borderRadius;


// Label Arrow
// -----------------------------
@LablesArrowBorderHorizontalTop:      3px;
@LablesArrowBorderHorizontalLeft:     7px;
@LablesArrowBorderVericaltop:         4px;
@LablesArrowBorderVericalleft:        4px;

// Label Background
// -----------------------------
@LablesSuccess:                       #00af00;
@LablesWarning:                       #ff9900;
@LablesError:                         #ed1c24;
@LablesInfo:                          #0088dd;
@LablesInverse:                       #444;

// Badges
// ----------------------------
@BadgesMinSize:                       18px;
@BadgesRadius:                        @BadgesMinSize / 2;
@BadgesPaddingVertical:               2px;
@BadgesPaddingHorizontal:             5px;




// Footer
// --------------------------
//
// Footer
// --------------------------------------------------
@footerHeight:                        40px;
@footerFontSize:                      12px; 
@footerBackground:                    #f5f5f5;
@footerBorderTopColor:                #ddd;
@footerCopyrightFontColor:            #666;
@footerLogoHeight:                    28px; 
@footerLinksGutter:                   20px;


// GRID
// --------------------------------------------------------
//
// Variables
// --------------------------------------------------

// GRID
// --------------------------------------------------

// Default
// for 980px and above screen (grid total 940px)
// -------------------------
@gridColumns:             12;
@gridColumnWidth:         60px;
@gridGutterWidth:         20px;
@gridRowWidth:            (@gridColumns * @gridColumnWidth) + (@gridGutterWidth * (@gridColumns - 1));

// for 1600px and above screen (grid total 1520px)
@gridColumnWidth1600:     90px;
@gridGutterWidth1600:     40px;
@gridRowWidth1600:        (@gridColumns * @gridColumnWidth1600) + (@gridGutterWidth1600 * (@gridColumns - 1));

// for 1350px and above screen (grid total 1290px)
@gridColumnWidth1350:     80px;
@gridGutterWidth1350:     30px;
@gridRowWidth1350:        (@gridColumns * @gridColumnWidth1350) + (@gridGutterWidth1350 * (@gridColumns - 1));

// for 1230px and above screen (grid total 1170px)
@gridColumnWidth1230:     70px;
@gridGutterWidth1230:     30px;
@gridRowWidth1230:        (@gridColumns * @gridColumnWidth1230) + (@gridGutterWidth1230 * (@gridColumns - 1));

// for 768px-979px screen (grid total 724px)
@gridColumnWidth768:      42px;
@gridGutterWidth768:      20px;
@gridRowWidth768:         (@gridColumns * @gridColumnWidth768) + (@gridGutterWidth768 * (@gridColumns - 1));


// Fluid grid
// -------------------------
@fluidGridColumnWidth:    percentage(@gridColumnWidth/@gridRowWidth);
@fluidGridGutterWidth:    percentage(@gridGutterWidth/@gridRowWidth);

// for 1600px and above screen (grid total 1520px)
@fluidGridColumnWidth1600:     percentage(@gridColumnWidth1600/@gridRowWidth1600);
@fluidGridGutterWidth1600:     percentage(@gridGutterWidth1600/@gridRowWidth1600);

// for 1350px and above screen (grid total 1290px)
@fluidGridColumnWidth1350:     percentage(@gridColumnWidth1350/@gridRowWidth1350);
@fluidGridGutterWidth1350:     percentage(@gridGutterWidth1350/@gridRowWidth1350);

// for 1230px and above screen (grid total 1170px)
@fluidGridColumnWidth1230:     percentage(@gridColumnWidth1230/@gridRowWidth1230);
@fluidGridGutterWidth1230:     percentage(@gridGutterWidth1230/@gridRowWidth1230);

// for 768px-979px screen (grid total 724px)
@fluidGridColumnWidth768:      percentage(@gridColumnWidth768/@gridRowWidth768);
@fluidGridGutterWidth768:      percentage(@gridGutterWidth768/@gridRowWidth768);


// JAVASCRIPT VARIABLES
// --------------------------------------------------------

// Modals
// --------------------------
//
// Variables
// --------------------------------------------------------

// Modals
// --------------------------
@modalWidth:                        480px;

@modalBackdropBackground:			@black;
@modalBackdropOpacity:              55;

@modalWrapperBorder: 				8px solid rgba(0, 0, 0, 0.2);
@modalWrapperBorderColor:			@gray;
@modalWrapperBackgroundColor:	    @grayDark;

@modalHeaderBorderTop:				2px solid #ed1c24;
@modalHeaderBackgroundColor:		@grayDark;
@modalHeaderTextColor:				@white;

@modalBodyBackgroundColor:			@white;
@modalBodyTextColor:				@textColor;
@modalBodyPadding:                  16px;

@modalFooterBorderTop:				1px solid #ccc;
@modalFooterBackgroundColor:		@grayLighter;


// Loading Notification
// --------------------------
@modalLoadingBackground: 			@white url("../img/icon-loading-32.gif") no-repeat 50% 38px;
@modalLoadingTextColor:				@textColor;


// Notifications
// --------------------------
@modalNotificationBackgroundColor:	@white;
@modalNotificationTextColor: 		@textColor;
@modalNotificationIconSize:         48px;

@modalNotificationInfoIconPath: 	"../img/icon-info-48.png";
@modalNotificationSuccessIconPath: 	"../img/icon-success-48.png";
@modalNotificationWarningIconPath: 	"../img/icon-warning-48.png";
@modalNotificationErrorIconPath: 	"../img/icon-error-48.png";



// Dialog
// --------------------------
//
// Variables
// --------------------------------------------------------

// Dialog
// --------------------------

// Overlay
@dialogOverlayBackground: 			none;
@dialogOverlayBackgroundColor: 		@black;
@dialogOverlayOpacity: 				0.55;

// Wrapper
@dialogWrapperBorderRadius: 		0;
@dialogWrapperBorder: 				8px solid rgba(0, 0, 0, 0.2);
@dialogWrapperBackground: 			none;
@dialogWrapperTextColor: 			@textColor;
@dialogWrapperFontFamily: 			@baseFontFamily;
@dialogWrapperFontSize: 			@baseFontSize;

// Header
@dialogHeaderBorder: 				1px solid #333;
@dialogHeaderBackground: 			none;
@dialogHeaderBackgroundColor: 		#333;
@dialogHeaderTextColor: 			@white;
@dialogHeaderFontSize: 				@fontSize14;
@dialogHeaderFontWeight: 			bold;

// Content
@dialogContentBorder: 				1px solid #333;
@dialogContentBackground: 			none;
@dialogContentBackgroundColor: 		@white;
@dialogContentTextColor: 			@textColor;

// Footer
@dialogFooterBorder: 				1px solid #333;
@dialogFooterBackground: 			none;
@dialogFooterBackgroundColor: 		#e6e6e6;


//
// Mixins
// --------------------------------------------------


// UTILITY MIXINS
// --------------------------------------------------

// Clearfix
// --------
// For clearing floats like a boss h5bp.com/q
.clearfix {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
    // Fixes Opera/contenteditable bug:
    // http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
    line-height: 0;
  }
  &:after {
    clear: both;
  }
}
.tab-set-style (@shadow: @btnInsetShadowFocused) {
  //CSS 3  
  .box-shadow(inset 0 0 2px 1px @shadow);
  
  @media all and (min-width:0px){
    .box-shadow(inset 0 0 3px 1px @shadow);
  } 
  @media screen and (-webkit-min-device-pixel-ratio:0){
    .box-shadow(inset 0 0 4px 1px @shadow);
  }
}

.tab-set-style (@shadow: @btnInsetShadowFocused) when (@shadow = @btnInsetShadowFocused){
  //CSS 3  
  .box-shadow(inset 0 0 2px @shadow);
  
  @media all and (min-width:0px){
    .box-shadow(inset 0 0 3px @shadow);
  } 
  @media screen and (-webkit-min-device-pixel-ratio:0){
    .box-shadow(inset 0 0 4px @shadow);
  }
}

/*
.tab-set-style (@shadow: @btnInsetShadowFocused) when (@shadow = @btnDangerBorderColorFocused) {
  
}*/


.tab-focus(@color: @btnBorderColorFocused, @shadow: @btnInsetShadowFocused) {
  // Default
  outline: 0;
  border-color: @color e("\9");
  .tab-set-style(@shadow);
}

// non-focused style
// ------------------
.non-focus(@color: @btnBorderColor) {
  outline: 0;
  border-color: @color e("\9");
  .box-shadow(none);
}

// Center-align a block level element
// ----------------------------------
.center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// IE7 inline-block
// ----------------
.ie7-inline-block() {
  *display: inline;
  *zoom: 1;
}

// IE7 likes to collapse whitespace on either side of the inline-block elements.
// Ems because we're attempting to match the width of a space character. Left
// version is for form buttons, which typically come after other elements, and
// right version is for icons, which come before. Applying both is ok, but it will
// mean that space between those elements will be .6em (~2 space characters) in IE7,
// instead of the 1 space in other browsers.
.ie7-restore-left-whitespace() {
  *margin-left: .3em;

  &:first-child {
    *margin-left: 0;
  }
}

.ie7-restore-right-whitespace() {
  *margin-right: .3em;
}

// Sizing shortcuts
// -------------------------
.size(@height, @width) {
  width: @width;
  height: @height;
}
.square(@size) {
  .size(@size, @size);
}

// Placeholder text
// -------------------------
.placeholder(@color: @placeholderText) {
  &:-moz-placeholder {
    color: @color;
  }
  &:-ms-input-placeholder {
    color: @color;
  }
  &::-webkit-input-placeholder {
    color: @color;
  }
}

// Text overflow
// -------------------------
// Requires inline-block or block for proper styling
.text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// CSS image replacement
// -------------------------
// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757
.hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}


// FONTS
// --------------------------------------------------


#font {
  #family {
    .serif() {
      font-family: @serifFontFamily;
    }
    .sans-serif() {
      font-family: @sansFontFamily;
    }
    .monospace() {
      font-family: @monoFontFamily;
    }
    .interstate() {
      font-family: @interstateLight;
    }
    .interstateExtraLight() {
      font-family: @interstateExtraLight;
    }
    .interstateRegular() {
      font-family: @interstateRegular;
    }
    
  }
  .shorthand(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    font-size: @size;
    font-weight: @weight;
    line-height: @lineHeight;
  }
  .serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .serif;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .sans-serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .sans-serif;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .monospace(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .monospace;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .interstate(@size: @baseFontSize, @weight: 200, @lineHeight: @baseLineHeight) {
    #font > #family > .interstate;
    #font > .shorthand(@size, @weight, @lineHeight);    
  }
  .interstateExtraLight(@size: @baseFontSize, @weight: 200, @lineHeight: @baseLineHeight) {
    #font > #family > .interstateExtraLight;
    #font > .shorthand(@size, @weight, @lineHeight);
  } 
  .interstateRegular(@size: @baseFontSize, @weight: 200, @lineHeight: @baseLineHeight) {
    #font > #family > .interstateRegular;
    #font > .shorthand(@size, @weight, @lineHeight);
  } 
  
}


// FORMS
// --------------------------------------------------

// Block level inputs
.input-block-level {
  display: block;
  width: 100%;
  min-height: @inputHeight; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  .box-sizing(border-box); // Makes inputs behave like true block-level elements
}



// Mixin for form field states
.formFieldState(@textColor: #555, @borderColor: #ccc, @backgroundColor: #f5f5f5) {
  // Set the text color
  .tm-control-label,
  .tm-help-block,
  .tm-help-inline {
    color: @textColor;
  }
  // Style inputs accordingly
  .checkbox,
  .radio,
  input,
  select,
  textarea {
    color: @textColor;
  }
  input,
  select,
  textarea {
    border-color: @borderColor;    
    &:focus {
      border-color: darken(@borderColor, 10%);     
    }
  }
  // Give a small background color for input-prepend/-append
  .input-prepend .add-on,
  .input-append .add-on {
    color: @textColor;
    background-color: @backgroundColor;
    border-color: @textColor;
  }
}

//Set form elements' margin-top 
.setFormMarginTop() {
  .tm-help-block {  
    + label,
    + input, 
    + select, 
    + textarea,
    + .tm-uneditable-input,
    + .tm-uneditable-textarea {
      margin-top: 12px;
    }    
    + .tm-help-block {
      margin-top: 6px;
    }    
    + button, 
    + .tm-btn {
      display: block;      
      margin-top: 12px;
    }
    + a.tm-btn {
      *display: table;
    }
    + ul,
    + ol {
        margin-top: 0;
    }
  }
  button, .tm-btn {
    + label,
    + input,
    + select,
    + textarea,
    + .tm-uneditable-input,
    + .tm-uneditable-textarea {
      margin-top: 12px;
    }
    + .tm-help-block {
      margin-top: 6px;
    }    
    + button, 
    + .tm-btn,
    + a.tm-btn {
      display: inline;
    }     
  }
  
  label.tm-radio,
  label.tm-checkbox {
    + label.tm-radio,
    + label.tm-checkbox {
      margin-top: 8px;
    }
    + input,
    + select,
    + textarea,    
    + .tm-uneditable-input,
    + .tm-uneditable-textarea {
      margin-top: 12px;
    }
  }
  
  label.tm-radio.inline,
  label.tm-checkbox.inline {
    + label.tm-radio.inline,
    + label.tm-checkbox.inline {
      margin-top: 0;
    }
  }
  
  input,
  select,
  textarea,
  .tm-help-inline,
  .tm-help-error,
  .tm-uneditable-input,
  .tm-uneditable-textarea {
    + label {
      margin-top: 12px;
    }
    + label.tm-control-label {
      margin-top: 0;     
    }
    + .tm-help-block {
      margin-top: 6px;
    }
    + button, 
    + .tm-btn {
      margin-top: 12px;
      display: block;
    }
    + a.tm-btn {
      *display: table;
    }
  }
  label {    
    + input,
    + select,
    + textarea,
    + .tm-help-block,
    + .tm-uneditable-input,
    + .tm-uneditable-textarea {
      margin-top: 8px;
      ~ input,
      ~ select,
      ~ textarea,      
      ~ .tm-help-inline,
      ~ .tm-help-error,
      ~ .tm-uneditable-input,
      ~ .tm-uneditable-textarea {
        margin-top: 8px;
      }
      ~ .tm-help-block {
        margin-top: 6px;
      }
      ~ button, 
      ~ .tm-btn {
        margin-top: 12px;
        display: block;        
      }
      ~ a.tm-btn {
        *display: table;
      }
    }
    + .tm-help-block {
      margin-top: 6px;
    }
    
    + label {
      margin-top: 12px;
    }
    + button, 
    + .tm-btn {
      margin-top: 12px;
      display: block;
    }
    + a.tm-btn {
      *display: table;
    }
  }
}
//Reset element's margin-top
.resetFormMarginTop () {
  .tm-help-block {  
    + label,
    + input, 
    + select, 
    + textarea,
    + .tm-help-block,
    + .tm-uneditable-input,
    + .tm-uneditable-textarea {
      margin-top: 0;
    } 
    + button, 
    + .tm-btn,
    + a.tm-btn {
      margin-top: 0;
      display: inline-block;
      .ie7-inline-block();
    }
  }
  button, .tm-btn {
    + label,
    + input,
    + select,
    + textarea,
    + button, 
    + .tm-btn,
    + a.tm-btn,
    + .tm-help-block,
    + .tm-uneditable-input,
    + .tm-uneditable-textarea {
      margin-top: 0;
    }
    + button, 
    + .tm-btn,
    + a.tm-btn {
      display: inline-block;
      .ie7-inline-block();
    }    
  }
  label.tm-radio,
  label.tm-checkbox {
    + input,
    + select,
    + textarea,    
    + .tm-uneditable-input,
    + .tm-uneditable-textarea {
      margin-top: 0;
    }
  }
  input,
  select,
  textarea,
  .tm-help-inline,
  .tm-help-error,
  .tm-uneditable-input,
  .tm-uneditable-textarea {
    + label,
    + input, 
    + select,
    + textarea,
    + button, 
    + .tm-btn,
    + a.tm-btn,
    + .tm-help-block,
    + .tm-uneditable-input,
    + .tm-uneditable-textarea {
      margin-top: 0;
    }
    + button, 
    + .tm-btn,
    + a.tm-btn {
      display: inline-block;
      .ie7-inline-block();
    }
  }
  label {
    + label,
    + input,
    + select,
    + textarea,
    + button, 
    + .tm-btn,
    + a.tm-btn,
    + .tm-help-block,
    + .tm-uneditable-input,
    + .tm-uneditable-textarea {
      margin-top: 0;
      ~ input,
      ~ select,
      ~ textarea,
      ~ .tm-help-block,
      ~ .tm-help-inline,
      ~ .tm-help-error,
      ~ .tm-uneditable-input,
      ~ .tm-uneditable-textarea {
        margin-top: 0;
      }
      ~ button, 
      ~ .tm-btn,
      ~ a.tm-btn {
        margin-top: 0;
        display: inline-block;
        .ie7-inline-block();
      }
    }    
    + button, 
    + .tm-btn,
    + a.tm-btn {
      display: inline-block;
      .ie7-inline-block();
    }
  }
}

// CSS3 PROPERTIES
// --------------------------------------------------

// Border Radius
.border-radius(@radius) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}

// Single Corner Border Radius
.border-top-left-radius(@radius) {
  -webkit-border-top-left-radius: @radius;
      -moz-border-radius-topleft: @radius;
          border-top-left-radius: @radius;
}
.border-top-right-radius(@radius) {
  -webkit-border-top-right-radius: @radius;
      -moz-border-radius-topright: @radius;
          border-top-right-radius: @radius;
}
.border-bottom-right-radius(@radius) {
  -webkit-border-bottom-right-radius: @radius;
      -moz-border-radius-bottomright: @radius;
          border-bottom-right-radius: @radius;
}
.border-bottom-left-radius(@radius) {
  -webkit-border-bottom-left-radius: @radius;
      -moz-border-radius-bottomleft: @radius;
          border-bottom-left-radius: @radius;
}

// Single Side Border Radius
.border-top-radius(@radius) {
  .border-top-right-radius(@radius);
  .border-top-left-radius(@radius);
}
.border-right-radius(@radius) {
  .border-top-right-radius(@radius);
  .border-bottom-right-radius(@radius);
}
.border-bottom-radius(@radius) {
  .border-bottom-right-radius(@radius);
  .border-bottom-left-radius(@radius);
}
.border-left-radius(@radius) {
  .border-top-left-radius(@radius);
  .border-bottom-left-radius(@radius);
}

// Drop shadows
.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow;
     -moz-box-shadow: @shadow;
          box-shadow: @shadow;
}

// Transitions
.transition(@transition) {
  -webkit-transition: @transition;
     -moz-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}
.transition-delay(@transition-delay) {
  -webkit-transition-delay: @transition-delay;
     -moz-transition-delay: @transition-delay;
       -o-transition-delay: @transition-delay;
          transition-delay: @transition-delay;
}
.transition-duration(@transition-duration) {
  -webkit-transition-duration: @transition-duration;
     -moz-transition-duration: @transition-duration;
       -o-transition-duration: @transition-duration;
          transition-duration: @transition-duration;
}

// Transformations
.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
     -moz-transform: rotate(@degrees);
      -ms-transform: rotate(@degrees);
       -o-transform: rotate(@degrees);
          transform: rotate(@degrees);
}
.scale(@ratio) {
  -webkit-transform: scale(@ratio);
     -moz-transform: scale(@ratio);
      -ms-transform: scale(@ratio);
       -o-transform: scale(@ratio);
          transform: scale(@ratio);
}
.translate(@x, @y) {
  -webkit-transform: translate(@x, @y);
     -moz-transform: translate(@x, @y);
      -ms-transform: translate(@x, @y);
       -o-transform: translate(@x, @y);
          transform: translate(@x, @y);
}
.skew(@x, @y) {
  -webkit-transform: skew(@x, @y);
     -moz-transform: skew(@x, @y);
      -ms-transform: skewX(@x) skewY(@y); // See https://github.com/twitter/bootstrap/issues/4885
       -o-transform: skew(@x, @y);
          transform: skew(@x, @y);
  -webkit-backface-visibility: hidden; // See https://github.com/twitter/bootstrap/issues/5319
}
.translate3d(@x, @y, @z) {
  -webkit-transform: translate3d(@x, @y, @z);
     -moz-transform: translate3d(@x, @y, @z);
       -o-transform: translate3d(@x, @y, @z);
          transform: translate3d(@x, @y, @z);
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
.backface-visibility(@visibility){
	-webkit-backface-visibility: @visibility;
	   -moz-backface-visibility: @visibility;
	        backface-visibility: @visibility;
}

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
.background-clip(@clip) {
  -webkit-background-clip: @clip;
     -moz-background-clip: @clip;
          background-clip: @clip;
}

// Background sizing
.background-size(@size) {
  -webkit-background-size: @size;
     -moz-background-size: @size;
       -o-background-size: @size;
          background-size: @size;
}


// Box sizing
.box-sizing(@boxmodel) {
  -webkit-box-sizing: @boxmodel;
     -moz-box-sizing: @boxmodel;
          box-sizing: @boxmodel;
}

// User select
// For selecting text on the page
.user-select(@select) {
  -webkit-user-select: @select;
     -moz-user-select: @select;
      -ms-user-select: @select;
       -o-user-select: @select;
          user-select: @select;
}

// Resize anything
.resizable(@direction) {
  resize: @direction; // Options: horizontal, vertical, both
  overflow: auto; // Safari fix
}

// CSS3 Content Columns
.content-columns(@columnCount, @columnGap: @gridGutterWidth) {
  -webkit-column-count: @columnCount;
     -moz-column-count: @columnCount;
          column-count: @columnCount;
  -webkit-column-gap: @columnGap;
     -moz-column-gap: @columnGap;
          column-gap: @columnGap;
}

// Optional hyphenation
.hyphens(@mode: auto) {
  word-wrap: break-word;
  -webkit-hyphens: @mode;
     -moz-hyphens: @mode;
      -ms-hyphens: @mode;
       -o-hyphens: @mode;
          hyphens: @mode;
}

// Opacity
.opacity(@opacity) {
  opacity: @opacity / 100;
  filter: ~"alpha(opacity=@{opacity})";
}



// BACKGROUNDS
// --------------------------------------------------

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
#translucent {
  .background(@color: @white, @alpha: 1) {
    background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
  }
  .border(@color: @white, @alpha: 1) {
    border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
    .background-clip(padding-box);
  }
}

// Gradient Bar Colors for buttons and alerts
.gradientBar(@primaryColor, @secondaryColor, @btnBorderColor: #bbb, @textColor: #fff, @textShadow: 0 -1px 0 rgba(0,0,0,.25)) {
  color: @textColor;
  //text-shadow: @textShadow;
  #gradient > .vertical(@primaryColor, @secondaryColor);
  border-color: @btnBorderColor;
  //border-color: @btnBorderColor @btnBorderColor darken(@btnBorderColor, 15%);
  //border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);
}

// Gradients
#gradient {
  .horizontal(@startColor: #555, @endColor: #333) {
    background-color: @endColor;
    background-image: -moz-linear-gradient(left, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, 0 0, 100% 0, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(left, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(left, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(to right, @startColor, @endColor); // Standard, IE10
    background-repeat: repeat-x;
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb(@startColor),argb(@endColor))); // IE9 and down
  }
  .vertical(@startColor: #555, @endColor: #333) {
    background-color: mix(@startColor, @endColor, 60%);
    background-image: -moz-linear-gradient(top, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(top, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(top, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(to bottom, @startColor, @endColor); // Standard, IE10
    background-repeat: repeat-x;
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor))); // IE9 and down
  }
  .directional(@startColor: #555, @endColor: #333, @deg: 45deg) {
    background-color: @endColor;
    background-repeat: repeat-x;
    background-image: -moz-linear-gradient(@deg, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-linear-gradient(@deg, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(@deg, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(@deg, @startColor, @endColor); // Standard, IE10
  }
  .horizontal-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
    background-color: mix(@midColor, @endColor, 80%);
    background-image: -webkit-gradient(left, linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
    background-image: -webkit-linear-gradient(left, @startColor, @midColor @colorStop, @endColor);
    background-image: -moz-linear-gradient(left, @startColor, @midColor @colorStop, @endColor);
    background-image: -o-linear-gradient(left, @startColor, @midColor @colorStop, @endColor);
    background-image: linear-gradient(to right, @startColor, @midColor @colorStop, @endColor);
    background-repeat: no-repeat;
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor))); // IE9 and down, gets no color-stop at all for proper fallback
  }

  .vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
    background-color: mix(@midColor, @endColor, 80%);
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
    background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);
    background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-repeat: no-repeat;
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor))); // IE9 and down, gets no color-stop at all for proper fallback
  }  
  .radial(@innerColor: #555, @outerColor: #333) {
    background-color: @outerColor;
    background-image: -webkit-gradient(radial, center center, 0, center center, 460, from(@innerColor), to(@outerColor));
    background-image: -webkit-radial-gradient(circle, @innerColor, @outerColor);
    background-image: -moz-radial-gradient(circle, @innerColor, @outerColor);
    background-image: -o-radial-gradient(circle, @innerColor, @outerColor);
    background-repeat: no-repeat;
  }
  .striped(@startColor: @progressBarBarBackgroundTop, @endColor: @progressBarBarBackgroundBottom, @angle: 45deg) {
    //background-color: darken(@color, 10%);   
    background-image: -ms-linear-gradient(@angle, rgba(255,255,255,.25) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.25) 50%, rgba(255,255,255,.25) 75%, transparent 75%, transparent);
    background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.25)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.25)), color-stop(.75, rgba(255,255,255,.25)), color-stop(.75, transparent), to(transparent)), -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), to(@endColor));
    background-image: -webkit-linear-gradient(@angle, rgba(255,255,255,.25) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.25) 50%, rgba(255,255,255,.25) 75%, transparent 75%, transparent), -webkit-linear-gradient(top, @startColor, @endColor);
    background-image: -moz-linear-gradient(@angle, rgba(255,255,255,.25) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.25) 50%, rgba(255,255,255,.25) 75%, transparent 75%, transparent), -moz-linear-gradient(top, @startColor, @endColor);
    background-image: -o-linear-gradient(@angle, rgba(255,255,255,.25) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.25) 50%, rgba(255,255,255,.25) 75%, transparent 75%, transparent), -o-linear-gradient(top, @startColor, @endColor);
    background-image: linear-gradient(@angle, rgba(255,255,255,.25) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.25) 50%, rgba(255,255,255,.25) 75%, transparent 75%, transparent), linear-gradient(to bottom, @startColor, @endColor);
  }
}
// Reset filters for IE
.reset-filter() {
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
}



// COMPONENT MIXINS
// --------------------------------------------------

// Horizontal dividers
// -------------------------
// Dividers (basically an hr) within dropdowns and nav lists
.tm-nav-divider(@top: #e5e5e5, @bottom: @white) {
  // IE7 needs a set width since we gave a height. Restricting just
  // to IE7 to keep the 1px left/right space in other browsers.
  // It is unclear where IE is getting the extra space that we need
  // to negative-margin away, but so it goes.
  *width: 100%;
  height: 1px;
  margin: ((@baseLineHeight / 2) - 1) 1px; // 8px 1px
  *margin: -5px 0 5px;
  overflow: hidden;
  background-color: @top;
  border-bottom: 1px solid @bottom;
}

// Button backgrounds
// ------------------
.buttonBackground(@startColor, @endColor, @btnBorderColor: #bbb, @textColor: #fff, @textShadow: 0 -1px 0 rgba(0,0,0,.25)) {
  // gradientBar will set the background to a pleasing blend of these, to support IE<=9
  .gradientBar(@startColor, @endColor, @btnBorderColor, @textColor, @textShadow);
  //.reset-filter();
  //*filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
  
  //background-color: @endColor; Darken IE7 buttons by default so they stand out more given they won't have borders
  
  // in these cases the gradient won't cover the background, so we override
  &:hover, &:focus, &:active, &.active, &.disabled, &[disabled] {
    text-decoration: none;
    //background-image: none;
    //color: @textColor;
    //background-color: @endColor;
    //background-color: darken(@endColor, 5%);
  }

  // IE 7 + 8 can't handle box-shadow to show active, so we darken a bit ourselves
  &:active,
  &.active {
    //background-color: darken(@endColor, 10%) e("\9");
  }
}

// Navbar vertical align
// -------------------------
// Vertically center elements in the navbar.
// Example: an element has a height of 30px, so write out `.navbarVerticalAlign(30px);` to calculate the appropriate top margin.
.navbarVerticalAlign(@elementHeight) {
  margin-top: ((@navbarHeight - @elementHeight) / 2);
}

.navbarFormVerticalAlign(@elementHeight) {
  margin-top: ((@navbarHeight - @elementHeight) / 2);
  margin-bottom: ((@navbarHeight - @elementHeight) / 2);
}

// Grid System
// -----------

// Centered container element
.container-fixed() {
  margin-right: auto;
  margin-left: auto;
  .clearfix();
}

// Table columns
.tableColumns(@columnSpan: 1) {
  float: none; // undo default grid column styles
  width: ((@gridColumnWidth) * @columnSpan) + (@gridGutterWidth * (@columnSpan - 1)) - 16; // 16 is total padding on left and right of table cells
  margin-left: 0; // undo default grid column styles
}

// Make a Grid
// Use .makeRow and .makeColumn to assign semantic layouts grid system behavior
.makeRow() {
  margin-left: @gridGutterWidth * -1;
  .clearfix();
}
.makeColumn(@columns: 1, @offset: 0) {
  float: left;
  margin-left: (@gridColumnWidth * @offset) + (@gridGutterWidth * (@offset - 1)) + (@gridGutterWidth * 2);
  width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
}

// The Grid
#grid {

  .core (@gridColumnWidth, @gridGutterWidth) {

    .spanX (@index) when (@index > 0) {
      .span@{index} { .span(@index); }
      .spanX(@index - 1);
    }
    .spanX (0) {}

    .offsetX (@index) when (@index > 0) {
      .offset@{index} { .offset(@index); }
      .offsetX(@index - 1);
    }
    .offsetX (0) {}

    .offset (@columns) {
      margin-left: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns + 1));
    }

    .span (@columns) {
      width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
    }

    .row {
      margin-left: @gridGutterWidth * -1;
      .clearfix();
    }

    [class*="span"] {
      float: left;
      min-height: 1px; // prevent collapsing columns
      margin-left: @gridGutterWidth;
    }

    // Set the container width, and override it for fixed navbars in media queries
    .tm-container,
    .tm-navbar-static-top .tm-container,
    .tm-navbar-fixed-top .tm-container,
    .tm-navbar-fixed-bottom .tm-container { .span(@gridColumns); }

    // generate .spanX and .offsetX
    .spanX (@gridColumns);
    .offsetX (@gridColumns);

  }

  .fluid (@fluidGridColumnWidth, @fluidGridGutterWidth) {

    .spanX (@index) when (@index > 0) {
      .span@{index} { .span(@index); }
      .spanX(@index - 1);
    }
    .spanX (0) {}

    .offsetX (@index) when (@index > 0) {
      .offset@{index} { .offset(@index); }
      .offset@{index}:first-child { .offsetFirstChild(@index); }
      .offsetX(@index - 1);
    }
    .offsetX (0) {}

    .offset (@columns) {
      margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) + (@fluidGridGutterWidth*2);
  	  *margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%) + (@fluidGridGutterWidth*2) - (.5 / @gridRowWidth * 100 * 1%);
    }

    .offsetFirstChild (@columns) {
      margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) + (@fluidGridGutterWidth);
      *margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%) + @fluidGridGutterWidth - (.5 / @gridRowWidth * 100 * 1%);
    }

    .span (@columns) {
      width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1));
      *width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%);
    }

    .row-fluid {
      width: 100%;
      .clearfix();
      [class*="span"] {
        .input-block-level();
        float: left;
        margin-left: @fluidGridGutterWidth;
        *margin-left: @fluidGridGutterWidth - (.5 / @gridRowWidth * 100 * 1%);
      }
      [class*="span"]:first-child {
        margin-left: 0;
      }

      // Space grid-sized controls properly if multiple per line
      .controls-row [class*="span"] + [class*="span"] {
        margin-left: @fluidGridGutterWidth;
      }

      // generate .spanX and .offsetX
      .spanX (@gridColumns);
      .offsetX (@gridColumns);
    }

  }

  .input(@gridColumnWidth, @gridGutterWidth) {

    .spanX (@index) when (@index > 0) {
      input.span@{index}, textarea.span@{index}, .tm-uneditable-input.span@{index} { .span(@index); }
      .spanX(@index - 1);
    }
    .spanX (0) {}

    .span(@columns) {
      width: ((@gridColumnWidth) * @columns) + (@gridGutterWidth * (@columns - 1)) - 14;
    }

    input,
    textarea,
    .tm-uneditable-input {
      margin-left: 0; // override margin-left from core grid system
    }

    // Space grid-sized controls properly if multiple per line
    .controls-row [class*="span"] + [class*="span"] {
      margin-left: @gridGutterWidth;
    }

    // generate .spanX
    .spanX (@gridColumns);

  }
}

// CSS Reset
//
// Reset CSS
// Adapted from http://github.com/necolas/normalize.css
// --------------------------------------------------


// Display in IE6-9 and FF3
// -------------------------

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section {
  display: block;
}

// Display block in IE6-9 and FF3
// -------------------------

audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}

// Prevents modern browsers from displaying 'audio' without controls
// -------------------------

audio:not([controls]) {
    display: none;
}

// Base settings
// -------------------------

html {
  font-size: 100%;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
}
// Focus, Hover, & Active states
a:focus,
a:hover,
a:active {
  .non-focus();
}

// Prevents sub and sup affecting line-height in all browsers
// -------------------------

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}

// Img border in a's and image quality
// -------------------------

img {
  /* Responsive images (ensure images don't scale beyond their parents) */
  max-width: 100%; /* Part 1: Set a maxium relative to the parent */
  width: auto\9; /* IE7-8 need help adjusting responsive images */
  height: auto; /* Part 2: Scale the height according to the width, otherwise you get stretching */

  vertical-align: middle;
  border: 0;
  -ms-interpolation-mode: bicubic;
}

// Prevent max-width from affecting Google Maps
#map_canvas img,
.google-maps img {
  max-width: none;
}

// Forms
// -------------------------

// Font size in all browsers, margin changes, misc consistency
button,
input,
select,
textarea {
  margin: 0;
  font-size: 100%;
  vertical-align: middle;
}
button,
input {
  *overflow: visible; // Inner spacing ie IE6/7
  line-height: normal; // FF3/4 have !important on line-height in UA stylesheet
}
button::-moz-focus-inner,
input::-moz-focus-inner { // Inner padding and border oddities in FF3/4
  padding: 0;
  border: 0;
}
button,
html input[type="button"], // Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls.
input[type="reset"],
input[type="submit"] {
    -webkit-appearance: button; // Corrects inability to style clickable `input` types in iOS.
    cursor: pointer; // Improves usability and consistency of cursor style between image-type `input` and others.
}
label,
select,
button,
input[type="button"],
input[type="reset"],
input[type="submit"],
input[type="radio"],
input[type="checkbox"] {
    cursor: pointer; // Improves usability and consistency of cursor style between image-type `input` and others.
}
input[type="search"] { // Appearance in Safari/Chrome
  .box-sizing(content-box);
  -webkit-appearance: textfield;
}
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none; // Inner-padding issues in Chrome OSX, Safari 5
}
textarea {
  overflow: auto; // Remove vertical scrollbar in IE6-9
  vertical-align: top; // Readability and alignment cross-browser
}


// Printing
// -------------------------
// Source: https://github.com/h5bp/html5-boilerplate/blob/master/css/main.css

@media print {

  * {
    text-shadow: none !important;
    color: #000 !important; // Black prints faster: h5bp.com/s
    background: transparent !important;
    box-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]:after {
    content: " (" attr(href) ")";
  }

  abbr[title]:after {
    content: " (" attr(title) ")";
  }

  // Don't show links for images, or javascript/internal links
  .ir a:after,
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: "";
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  thead {
    display: table-header-group; // h5bp.com/t
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  img {
    max-width: 100% !important;
  }

  @page {
    margin: 0.5cm;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}


// Grid system and page structure
//
// Scaffolding
// --------------------------------------------------


// Body reset
// -------------------------
body {
  margin: 0;
  font-family: @baseFontFamily;
  font-size: @baseFontSize;
  line-height: @baseLineHeight;
  color: @textColor;
  background-color: @bodyBackground;  
  text-align: left;  
}

// Links
// -------------------------

a {
  color: @linkColor;
  text-decoration: none;
}
a:hover,
a:focus {
  color: @linkColorHover;
  text-decoration: underline;
}


// Images
// -------------------------

// Rounded corners
.img-rounded {
  .border-radius(6px);
}

// Add polaroid-esque trim
.img-polaroid {
  padding: 4px;
  background-color: #fff;
  border: 1px solid #ccc;
  border: 1px solid rgba(0,0,0,.2);
  .box-shadow(0 1px 3px rgba(0,0,0,.1));
}

// Perfect circle
.img-circle {
  .border-radius(500px); // crank the border-radius so it works with most reasonably sized images
}

.tm-wrap {
  min-height: 100%;
  position: relative;
  > .tm-container,
  > .tm-container-fluid {
    padding-bottom: 40px;
  }
}

//
// Grid system
// --------------------------------------------------


// Fixed (940px)
#grid > .core(@gridColumnWidth, @gridGutterWidth);

// Fluid (940px)
#grid > .fluid(@fluidGridColumnWidth, @fluidGridGutterWidth);

// Reset utility classes due to specificity
[class*="span"].hide,
.row-fluid [class*="span"].hide {
  display: none;
}

[class*="span"].pull-right,
.row-fluid [class*="span"].pull-right {
  float: right;
}

//
// Layouts
// --------------------------------------------------

// Container (centered, fixed-width layouts)
.tm-container {
  .container-fixed(); 
  padding-right: @gridGutterWidth;
  padding-left: @gridGutterWidth;
}

// Fluid layouts (left aligned, with sidebar, min- & max-width content)
.tm-container-fluid {  
  padding-right: @gridGutterWidth;
  padding-left: @gridGutterWidth;
  .clearfix();
}

// Base CSS
//
// Typography
// --------------------------------------------------


// Body text
// -------------------------

p {
  margin: 0 0 @baseLineHeight / 2;
}
.lead {
  margin-bottom: @baseLineHeight;
  font-size: 150%;
  font-weight: 200;
  line-height: @baseLineHeight * 1.5;
}
.label {
  font-size: 13px;
  font-weight: bold;
  display: block;
}


// Emphasis & misc
// -------------------------

// Ex: 14px base font * 85% = about 12px
small   { font-size: 85%; }

strong  { font-weight: bold; }
em      { font-style: italic; }
cite    { font-style: normal; }

// Utility classes
.muted               { color: #888; } //@org: @grayLight;
a.muted:hover,
a.muted:focus        { color: darken(@grayLight, 10%); }

.text-warning        { color: @warningText; }
a.text-warning:hover,
a.text-warning:focus { color: darken(@warningText, 10%); }

.text-error          { color: @errorText; }
a.text-error:hover,
a.text-error:focus   { color: darken(@errorText, 10%); }

.text-info           { color: @infoText; }
a.text-info:hover,
a.text-info:focus    { color: darken(@infoText, 10%); }

.text-success        { color: @successText; }
a.text-success:hover,
a.text-success:focus { color: darken(@successText, 10%); }

.text-left           { text-align: left; }
.text-right          { text-align: right; }
.text-center         { text-align: center; }

// @add
// Font size
// -------------------------
.font-size-18 { #font > .shorthand(@fontSize18, normal, 22px); }
.font-size-16 { #font > .shorthand(@fontSize16, normal, 22px); }
.font-size-15 { #font > .shorthand(@fontSize15, normal, 22px); }
.font-size-14 { #font > .shorthand(@fontSize14, normal, @baseLineHeight); }
.font-size-13 { #font > .shorthand(@fontSize13, normal, @baseLineHeight); }

// Headings
// -------------------------

h1, h2, h3, h4, h5, h6 {
  margin: 0 0 (@baseLineHeight / 2);
  font-family: @headingsFontFamily;
  font-weight: @headingsFontWeight;
  line-height: @baseLineHeight;
  /*white-space: nowrap;*/
  color: @headingsColor;
  text-rendering: optimizelegibility; // Fix the character spacing for headings
  small {
    font-weight: normal;
    line-height: 1;
    color: @headingsColor;    
  }
}

h1 {
  #font > .interstateExtraLight(@h1FontSize, 200, @h1LightHeight);  
  letter-spacing : -0.03em;
  *letter-spacing : -0.1em; 
} 
h2 {
  #font > .interstateExtraLight(@h2FontSize, 200, @h2LightHeight);  
  letter-spacing : -0.03em;  
} 
h3 {
  #font > .interstate(@h3FontSize, 200, @h3LightHeight);
  letter-spacing : -0.03em;
  
} 
h4 {
  #font > .interstate(@h4FontSize, 200, @h4LightHeight); 
  letter-spacing : -0.03em;
} 
h5 {
  #font > .interstate(@h5FontSize, 200, @h5LightHeight); 
  letter-spacing : -0.03em;
  //#font > .shorthand(@h5FontSize, @headingsFontWeight, @h5LightHeight);
} 
h6 {
  #font > .interstate(@h6FontSize, 200, @h6LightHeight); 
  letter-spacing : -0.03em;
  //font-size: @baseFontSize;
}

h1 small { 
  #font > .interstateExtraLight(@h1FontSize, 200, @h1LightHeight);
  letter-spacing: normal;
  font-size: 80%;
  margin-left: 10px;
}
h2 small {
  #font > .interstateExtraLight(@h2FontSize, 200, @h2LightHeight);
  letter-spacing: normal;
  font-size: 80%;  
  margin-left: 9px;
}
h3 small { 
  #font > .interstateExtraLight(@h3FontSize, 200, @h3LightHeight);
  letter-spacing : -0.03em;
  font-size: 80%;
  margin-left: 9px;
}
h4 small { 
  #font > .interstateExtraLight(@h4FontSize, 200, @h4LightHeight);
  letter-spacing : -0.03em;
  font-size: 80%;
  margin-left: 8px;
}
// Page header
// -------------------------

.page-header {
  padding-bottom: (@baseLineHeight / 2) - 1;
  margin: @baseLineHeight 0 (@baseLineHeight * 1.5);
  border-bottom: 1px solid @grayLighter;
}

// Lists
// --------------------------------------------------

// Unordered and Ordered lists
ul, ol {
  padding: 0;
  margin: (@baseLineHeight / 2) 0 0 25px;
	&:first-child {
		margin-top: 0px;
	}
}
ul ul,
ul ol,
ol ol,
ol ul {
  margin-bottom: 0;
}
li {
  line-height: @baseLineHeight;
  list-style: inherit;
}

// Remove default list styles
ul.unstyled,
ol.unstyled {
  margin-left: 0;
  list-style: none;
}
ul.unstyled li > ul.unstyled,
ol.unstyled li > ol.unstyled {
	margin-left: 15px;
}

// Single-line list items
ul.inline,
ol.inline {
  margin-left: 0;
  list-style: none;
  > li {
    display: inline-block;
    .ie7-inline-block();
    padding-left: 5px;
    padding-right: 5px;
  }
}

// Description Lists
dl {
  margin-bottom: @baseLineHeight;
}
dt,
dd {
  line-height: @baseLineHeight;
}
dt {
  font-weight: bold;
  font-size: @fontSize13;
  margin-top: 10px;
}
dd {
  margin-left: @baseLineHeight / 2;
}
// Horizontal layout (like forms)
.dl-horizontal {
  .clearfix(); // Ensure dl clears floats if empty dd elements present
  dt {
    font-size: @baseFontSize;
    float: left;
    width: @horizontalComponentOffset - 20;
    clear: left;
    text-align: right;
    .text-overflow();
    margin-top: 0;    
  }
  dd {
    margin-left: @horizontalComponentOffset;
  }
}

// MISC
// ----

// Horizontal rules
hr {
  margin: @baseLineHeight 0;
  border: 0;
  border-top: 1px solid @hrBorder;
  border-bottom: 1px solid @white;
}

// Abbreviations and acronyms
abbr[title],
// Added data-* attribute to help out our tooltip plugin, per https://github.com/twitter/bootstrap/issues/5257
abbr[data-original-title] {
  cursor: help;
  border-bottom: 1px dotted @linkColor;
}
abbr.initialism {
  font-size: 90%;
  text-transform: uppercase;
}

// Blockquotes
blockquote {
  padding: 0 0 0 15px;
  margin: 0 0 @baseLineHeight;
  border-left: 5px solid @grayLighter;
  p {
    margin-bottom: 0;
    font-size: 125%;
    font-weight: 300;
    line-height: 1.25;
  }
  small {
    display: block;
    line-height: @baseLineHeight;
    color: @grayLight;
    &:before {
      content: '\2014 \00A0';
    }
  }

  // Float right with text-align: right
  &.pull-right {
    float: right;
    padding-right: 15px;
    padding-left: 0;
    border-right: 5px solid @grayLighter;
    border-left: 0;
    p,
    small {
      text-align: right;
    }
    small {
      &:before {
        content: '';
      }
      &:after {
        content: '\00A0 \2014';
      }
    }
  }
}

// Quotes
q:before,
q:after,
blockquote:before,
blockquote:after {
  content: "";
}

// Addresses
address {
  display: block;
  margin-bottom: @baseLineHeight;
  font-style: normal;
  line-height: @baseLineHeight;
}
//
// Code (inline and blocK)
// --------------------------------------------------


// Inline and block code styles
code,
pre {
  padding: 0 3px 2px;
  #font > #family > .monospace;
  font-size: @baseFontSize;
  color: @grayDark;
  .border-radius(3px);
}

// Inline code
code {
  padding: 2px 4px;
  color: #d14;
  background-color: #f7f7f9;
  border: 1px solid #e1e1e8;
  white-space: nowrap;
}

// Blocks of code
pre {
  display: block;
  padding: (@baseLineHeight - 1) / 2;
  margin: 0 0 @baseLineHeight / 2;
  font-size: @baseFontSize - 1; // 14px to 13px
  line-height: @baseLineHeight;
  word-break: break-all;
  word-wrap: break-word;
  white-space: pre;
  white-space: pre-wrap;
  background-color: #f5f5f5;
  border: 1px solid #ccc; // fallback for IE7-8
  border: 1px solid rgba(0,0,0,.15);
  .border-radius(@borderRadius);

  // Make prettyprint styles more spaced out for readability
  &.prettyprint {
    margin-bottom: @baseLineHeight;
  }

  // Account for some code outputs that place code tags in pre tags
  code {
    padding: 0;
    color: inherit;
    white-space: pre;
    white-space: pre-wrap;
    background-color: transparent;
    border: 0;
  }
}

// Enable scrollable blocks of code
.pre-scrollable {
  max-height: 340px;
  overflow-y: scroll;
}
//
// Forms
// --------------------------------------------------------

// GENERAL STYLES
// ------------------------------------
form {
	margin: 0;
  .setFormMarginTop();  
}

fieldset {
	padding: 0;
	margin: 0;
	border: 0;
}

// Set font for forms
// ------------------------------------
label,
input,
button,
select,
textarea,
.tm-uneditable-input,
.tm-uneditable-textarea {
	#font > .shorthand(@baseFontSize, normal, @baseLineHeight);	// Set size, weight, line-height here
  vertical-align: middle;
  &+ .tm-help-inline {
    margin-left: 5px;
  }
}

input,
button,
select,
textarea,
.tm-uneditable-input,
.tm-uneditable-textarea {
	font-family: @baseFontFamily;	// And only set font-family here for those that need it (note the missing label element)
}

// Identify controls by their labels
// ------------------------------------
label {
  display: table;
  *display: block;
	font-weight: bold;
  &.tm-control-label {
    display: inline-block;
    .ie7-inline-block();
    margin-left: 5px;
    font-weight: normal;
  }
}

// Shared size and type resets
// ------------------------------------
select,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.tm-uneditable-input,
.tm-uneditable-textarea {
	display: inline-block;
  .ie7-inline-block();  
	.border-radius(@inputBorderRadius);
	padding: @inputVerticalPadding @inputHorizontalPadding;
	height: @baseLineHeight;
	line-height: @baseLineHeight;
	vertical-align: middle;
	font-size: @baseFontSize;
	color: @textColor;
}

// Reset appearance properties for textual inputs and textarea
// Declare width for legacy (can't be on input[type=*] selectors or it's too specific)
input,
textarea,
.tm-uneditable-input,
.tm-uneditable-textarea {
	width: @inputWidth; // plus 12px padding and 2px border
}
// Reset width of input images, buttons, radios, checkboxes
input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="radio"],
input[type="checkbox"] {
	width: auto;	// Override of generic input selector
}

// Reset height since textareas have rows
textarea {
	height: auto;
}

// Everything else
select,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.tm-uneditable-input,
.tm-uneditable-textarea {
	background-color: @inputBackgroundColor; //inputBackgroundColor Mobile Safari need background-color
	border: 1px solid @inputBorderColor;
  .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.07)");
	.transition(~"border linear .2s");  
  // Hover state
	
	// Focus state
	&:focus {		
		outline: 0;
		border-color: @btnBorderColorFocused;		
	}	
}

// Placeholder
// --------------------------
// Placeholder text gets special styles because when browsers invalidate entire lines if it doesn't understand a selector
input,
textarea {
  .placeholder();
}

// FILE
// ------------------------------------
input[type="file"] { 
  height: @inputHeight;
  line-height: normal;
  line-height: (@inputHeight - 6) e("\9");
}

@-moz-document url-prefix() { 
  input[type="file"] {
     height: auto;  
  }
}

@media screen and (-webkit-min-device-pixel-ratio:0) {  
  input[type="file"] {
     height: auto;
  }
}

// CHECKBOXES & RADIOS
// ------------------------------------
input[type="radio"],
input[type="checkbox"] {
	line-height: normal;
  &:focus {		
    .non-focus();    
  }
}

// SELECT
// ------------------------------------
// Make select elements obey height by applying a border
select {  
  height: @inputHeight;
  *height: auto;
  width: @inputSelctWidth; // default input width + 10px of padding that doesn't get applied
  line-height: normal;
}

@media screen and (-webkit-min-device-pixel-ratio:0) {  
  select {
    line-height: (@inputHeight - (2 * 2) - 2);
  }
}
// Make multiple select elements height not fixed
select[multiple],
select[size] { 
  height: auto;
  line-height: @baseLineHeight;
  padding: 0;
}

// FOCUSED STATE
// ------------------------------------
// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  .non-focus();
}

// DISABLED STATE
// ------------------------------------
// Disabled and read-only inputs
input[disabled],
select[disabled],
textarea[disabled],
input[readonly],
select[readonly],
textarea[readonly],
.tm-uneditable-input,
.tm-uneditable-textarea {
  cursor: default;
  background-color: @inputBackgroundColorDisabled;
  color: @inputColorDisabled;
  -webkit-text-fill-color: @inputColorDisabled;
}

// Explicitly reset the colors here
input[type="radio"][disabled],
input[type="checkbox"][disabled],
input[type="radio"][readonly],
input[type="checkbox"][readonly] {
  background-color: transparent;
}

// INPUT SIZES
// ------------------------------------
// General classes for quick sizes
.input-mini       { width: @inputMiniWidth; }
.input-small      { width: @inputSmallWidth; }
.input-medium     { width: @inputMediumWidth; }
.input-large      { width: @inputLargeWidth; }
.input-xlarge     { width: @inputXlargeWidth; }
.input-xxlarge    { width: @inputXXlargeWidth; }

// Grid style input sizes
input[class*="span"],
select[class*="span"],
textarea[class*="span"],
.tm-uneditable-input[class*="span"],
.tm-uneditable-textarea[class*="span"],
// Redeclare since the fluid row class is more specific
.row-fluid input[class*="span"],
.row-fluid select[class*="span"],
.row-fluid textarea[class*="span"],
.row-fluid .tm-uneditable-input[class*="span"],
.row-fluid .tm-uneditable-textarea[class*="span"] {
  float: none;
  margin-left: 0;
}

// GRID SIZING FOR INPUTS
// ------------------------------------
// Grid sizes
#grid > .input(@gridColumnWidth, @gridGutterWidth);

// Uneditable inputs
// --------------------------
// Make uneditable inputs look inactive
.tm-uneditable-input,
.tm-uneditable-textarea {
  display: inline-block;
  .ie7-inline-block();
  &:focus {
    border-color: @inputBorderColor;
  }
}
// For text that needs to appear as an input but should not be an input
.tm-uneditable-input {
  .text-overflow();
}
// Make uneditable textareas behave like a textarea
.tm-uneditable-textarea {  
  height: auto;
  vertical-align: top;
}

// CHECKBOXES & RADIOS
// ------------------------------------
// Indent the labels to position radios/checkboxes as hanging
.tm-radio,
.tm-checkbox {
	min-height: @baseLineHeight;	// clear the floating input if there is no label text
	font-weight: normal;
  // Position radios and checkboxes better
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: -3px;
    *margin-top: -1px;
    margin-left: -3px;
    *margin-left: -4px;
  }
}

:root .tm-radio input[type="radio"] {
  margin-top: 0\9;
}
:root .tm-checkbox input[type="checkbox"] {
  margin-top: 0\9;
}

@media all and (min-width:0px) {
  .tm-radio input[type="radio"],
  .tm-checkbox input[type="checkbox"] {    
    margin-left: 0;
    margin-top: -2px;
  }
}

@media screen and (-webkit-min-device-pixel-ratio:0) {  
  .tm-radio input[type="radio"],
  .tm-checkbox input[type="checkbox"] {    
    margin-left: 0;
    margin-top: -3px;
  }
}

// Radios and checkboxes on same line
// TODO v3: Convert .inline to .control-inline
.tm-radio.inline,
.tm-checkbox.inline {
	display: inline-block;
  .ie7-inline-block();
  margin-left: 5px;
  &:first-child {
    margin-left: 0;
  }
}

.tm-radio.inline + .tm-radio.inline,
.tm-checkbox.inline + .tm-checkbox.inline {
	margin-left: 10px; // space out consecutive inline controls
}

// Ensure input-prepend/append never wraps
.input-append input[class*="span"],
.input-append .tm-uneditable-input[class*="span"],
.input-prepend input[class*="span"],
.input-prepend .tm-uneditable-input[class*="span"],
.row-fluid input[class*="span"],
.row-fluid select[class*="span"],
.row-fluid textarea[class*="span"],
.row-fluid .tm-uneditable-input[class*="span"],
.row-fluid .input-prepend [class*="span"],
.row-fluid .input-append [class*="span"] {
  display: inline-block;  
  .ie7-inline-block();
}

// HELP TEXT
// ------------------------------------
.tm-help-block {
	display: block;	// account for any element using help-block	
}
.tm-help-error {
	background: transparent url(@errorHelpTextIconPath) no-repeat left center;
	padding-left: 20px;
	color: @errorText;
}
.tm-help-inline {
	display: inline-block;
	.ie7-inline-block();	
	vertical-align: middle;	
}



// INPUT GROUPS
// ------------------------------------
// Allow us to put symbols and text within the input field for a cleaner look
.input-append,
.input-prepend {
  .resetFormMarginTop();
  vertical-align: middle;
  font-size: 0; // white space collapse hack
  white-space: nowrap; // Prevent span and input from separating
  
  // Reset the white space collapse hack
  input,
  select,
  .tm-uneditable-input,
  .tm-dropdown-menu,
  .tm-popover {
    border-color: @inputAppendPrependBorderColor;
    font-size: @baseFontSize;
  }

  input,
  select,
  .tm-uneditable-input {    
    position: relative;// e("\9"); // placed here by default so that on :focus we can place the input above the .add-on for full border and box-shadow goodness    
    margin-left: -1px;
    margin-right: 0;
    .border-radius(0);
    vertical-align: top;
    // Make input on top when focused so blue border and shadow always show
    &:focus {
      z-index: 2;
    }
  }
  
  .add-on {
    display: inline-block;
    .ie7-inline-block();
    width: auto;
    height: @baseLineHeight;
    min-width: 16px;
    padding: @inputVerticalPadding 5px;
    font-size: @baseFontSize;
    font-weight: normal;
    line-height: @baseLineHeight;
    text-align: center;    
    background-color: @grayLighter;
    border: 1px solid @inputAppendPrependBorderColor;
  }
 
  .add-on,  
  .tm-btn,
  .tm-btn-group > .tm-btn,
  .tm-btn-group > .tm-btn:first-child,
  .tm-btn-group > .tm-dropdown-toggle {    
    position: relative;
    *position: static;
    vertical-align: top;
    .border-radius(0);
    margin-left: -1px;
    margin-right: 0;
    border-color: @inputAppendPrependBorderColor;
    &:focus {
      z-index: 2;
    }
    &:hover {
      border-color: @inputAppendPrependBorderColor;
    }
    + .add-on,  
    + .tm-btn,
    + .tm-btn-group > .tm-btn,
    + .tm-btn-group > .tm-btn:first-child,
    + .tm-btn-group > .tm-dropdown-toggle {
      margin-left: -1px;
      margin-right: 0;
    }    
  }  
}

.input-append {
  input:first-child,
  select:first-child,
  .tm-uneditable-input:first-child {
    margin-left: 0;
    .border-radius(@inputBorderRadius 0 0 @inputBorderRadius);    
  }  
  .add-on:last-child,
  .tm-btn:last-child,
  .tm-btn-group:last-child > .tm-dropdown-toggle {
    .border-radius(0 @inputBorderRadius @inputBorderRadius 0);
  }
}

.input-prepend {
  input:last-child,
  select:last-child,
  .tm-uneditable-input:last-child {
    .border-radius(0 @inputBorderRadius @inputBorderRadius 0);    
  }
  .add-on:first-child,
  .tm-btn:first-child,
  .tm-btn-group:first-child  > .tm-btn:first-child {
    // FYI, `.tm-btn:first-child` accounts for a button group that's prepended
    margin-left: 0;
    .border-radius(@inputBorderRadius 0 0 @inputBorderRadius);
  }
}

// Control row for multiple inputs per line
.controls-row {
  .clearfix(); // Clear the float from controls
  .resetFormMarginTop ();
}

// Float to collapse white-space for proper grid alignment
.controls-row [class*="span"],
// Redeclare the fluid grid collapse since we undo the float for inputs
.row-fluid .controls-row [class*="span"] {
  float: left;
}


// Form controls
// --------------------------
// Margin to space out fieldsets
.tm-control-group {
	margin-top: 12px;	//@org: @baseLineHeight / 2;
	// Remove margin for on .tm-control-group
	&:first-child {
		margin-top: 0;
	}
	.tm-control-group {
		margin-top: 12px;
	}
  
}

.tm-control-block {
  display: block;
  margin-top: 8px;
	// Space out consecutive block controls
	&:first-child {
		margin-top: 0;
	}
}

.tm-control-inline {
	display: inline-block;	
  .ie7-inline-block();
  margin-left: 8px;
	// Space out consecutive block controls
	&:first-child {
		margin-left: 0;
	}
}



// HORIZONTAL FORM
// ------------------------------------

// Common properties
// --------------------------

.tm-form-search,
.tm-form-inline,
.tm-form-horizontal {
  .resetFormMarginTop ();   
	// Re-hide hidden elements due to specifity
	.hide {
		display: none;
	}
}

.tm-form-search,
.tm-form-inline {
  .tm-btn-group {
    display: inline-block;    
  }  
}

// Horizontal-specific styles
// --------------------------

.tm-form-horizontal {
	// Increase spacing between groups
	.tm-control-group {
		.clearfix();
	}
  // Float the labels left
	.tm-control-label {
		float: left;
		width: @horizontalComponentOffset - 8;
		padding-top: ((@inputHeight - @baseLineHeight) / 2);
    margin-left: 0;
    margin-top: 0;
    margin-bottom: 0;
		text-align: right;
	}  
  // Move over all input controls and content
	.tm-controls {
		// Super jank IE7 fix to ensure the inputs in .input-append and input-prepend
		// don't inherit the margin of the parent, in this case .tm-controls
		*display: inline-block;
		margin-left: @horizontalComponentOffset;
		*margin-left: 0;
		*padding-left: 8px;
		
		&:first-child {
			*padding-left: @horizontalComponentOffset;
		}
	}
  // And apply it only to .tm-help-block instances that follow a form control
	input,
	select,
	textarea,
  button,
  .tm-btn,
	.tm-uneditable-input,
  .tm-uneditable-textarea,
	.input-prepend,
	.input-append {
		+ .tm-help-block {
			margin-top: 6px;
		}
	}  
  // Move over buttons in .form-actions to align with .tm-controls
	.tm-form-actions {
		padding-left: @horizontalComponentOffset;
	}
}

// SEARCH FORM
// ------------------------------------
.tm-form-search input.tm-search-query {	
  float: left;
}
.tm-form-search .tm-search-query + .tm-btn {
	margin-left: 5px;
}

/* Allow for input prepend/append in search forms */

.tm-form-search .input-append .tm-search-query,
.tm-form-search .input-prepend .tm-search-query {	
  float: none;
  + .tm-btn {
    margin-left: -1px;
  }
}

// FORM ACTIONS
// ------------------------------------
.tm-form-actions {
  .resetFormMarginTop ();
  padding: 7px 15px;  
  background-color: @formActionsBackgroundColor;
  border-top: 1px solid @formActionsBorderTopColor;
  .clearfix(); // Adding clearfix to allow for .pull-right button containers  
}

// FORM FIELD FEEDBACK STATES
// ------------------------------------
// Warning
.tm-control-group.warning {
  .formFieldState(@warningText, @warningText, @warningBackground);
}
// Error
.tm-control-group.error {
  .formFieldState(@errorText, @errorText, @errorBackground);
}
// Success
.tm-control-group.success {
  .formFieldState(@successText, @successText, @successBackground);
}
// Success
.tm-control-group.info {
  .formFieldState(@infoText, @infoText, @infoBackground);
}

// HTML5 invalid states
// Shares styles with the .tm-control-group.error above
input:invalid,
input:focus:invalid,
textarea:invalid,
textarea:focus:invalid,
select:invalid,
select:focus:invalid {
  color: @textColor;
  .placeholder(@textColor);
  border-color: @errorText;
  .box-shadow(none);
  &:focus {
    border-color: darken(@errorText, 10%);
    .box-shadow(none);   
  }
}

hr.tm-divider{
  border-style: dashed;
  margin: 12px 0;
}
//
// Tables
// --------------------------------------------------


// BASE TABLES
// -----------------

table {
  max-width: 100%;
  background-color: @tableBackground;
  border-collapse: collapse;
  border-spacing: 0;
}

// BASELINE STYLES
// ---------------

.table {
  width: 100%;
  margin-bottom: @baseLineHeight;
  // Cells
  th,
  td {
    padding: 8px;
    line-height: @baseLineHeight;
    text-align: left;
    vertical-align: top;
    border-top: 1px solid @tableBorder;
  }
  th {
    font-weight: bold;
  }
  // Bottom align for column headings
  thead th {
    vertical-align: bottom;
  }
  // Remove top border from thead by default
  caption + thead tr:first-child th,
  caption + thead tr:first-child td,
  colgroup + thead tr:first-child th,
  colgroup + thead tr:first-child td,
  thead:first-child tr:first-child th,
  thead:first-child tr:first-child td {
    border-top: 0;
  }
  // Account for multiple tbody instances
  tbody + tbody {
    border-top: 2px solid @tableBorder;
  }

  // Nesting
  .table {
    background-color: @bodyBackground;
  }
}



// CONDENSED TABLE W/ HALF PADDING
// -------------------------------

.table-condensed {
  th,
  td {
    padding: 4px 5px;
  }
}


// BORDERED VERSION
// ----------------

.table-bordered {
  border: 1px solid @tableBorder;
  border-collapse: separate; // Done so we can round those corners!
  *border-collapse: collapse; // IE7 can't round corners anyway
  border-left: 0;
  //.border-radius(@borderRadius);
  th,
  td {
    border-left: 1px solid @tableBorder;
  }
  // Prevent a double border
  caption + thead tr:first-child th,
  caption + tbody tr:first-child th,
  caption + tbody tr:first-child td,
  colgroup + thead tr:first-child th,
  colgroup + tbody tr:first-child th,
  colgroup + tbody tr:first-child td,
  thead:first-child tr:first-child th,
  tbody:first-child tr:first-child th,
  tbody:first-child tr:first-child td {
    border-top: 0;
  }
  // For first th/td in the first row in the first thead or tbody
  /*thead:first-child tr:first-child > th:first-child,
  tbody:first-child tr:first-child > td:first-child,
  tbody:first-child tr:first-child > th:first-child {
    .border-top-left-radius(@borderRadius);
  }
  // For last th/td in the first row in the first thead or tbody
  thead:first-child tr:first-child > th:last-child,
  tbody:first-child tr:first-child > td:last-child,
  tbody:first-child tr:first-child > th:last-child {
    .border-top-right-radius(@borderRadius);
  }
  // For first th/td (can be either) in the last row in the last thead, tbody, and tfoot
  thead:last-child tr:last-child > th:first-child,
  tbody:last-child tr:last-child > td:first-child,
  tbody:last-child tr:last-child > th:first-child,
  tfoot:last-child tr:last-child > td:first-child,
  tfoot:last-child tr:last-child > th:first-child {
    .border-bottom-left-radius(@borderRadius);
  }
  // For last th/td (can be either) in the last row in the last thead, tbody, and tfoot
  thead:last-child tr:last-child > th:last-child,
  tbody:last-child tr:last-child > td:last-child,
  tbody:last-child tr:last-child > th:last-child,
  tfoot:last-child tr:last-child > td:last-child,
  tfoot:last-child tr:last-child > th:last-child {
    .border-bottom-right-radius(@borderRadius);
  }

  // Clear border-radius for first and last td in the last row in the last tbody for table with tfoot
  tfoot + tbody:last-child tr:last-child td:first-child {
    .border-bottom-left-radius(0);
  }
  tfoot + tbody:last-child tr:last-child td:last-child {
    .border-bottom-right-radius(0);
  }

  // Special fixes to round the left border on the first td/th
  caption + thead tr:first-child th:first-child,
  caption + tbody tr:first-child td:first-child,
  colgroup + thead tr:first-child th:first-child,
  colgroup + tbody tr:first-child td:first-child {
    .border-top-left-radius(@borderRadius);
  }
  caption + thead tr:first-child th:last-child,
  caption + tbody tr:first-child td:last-child,
  colgroup + thead tr:first-child th:last-child,
  colgroup + tbody tr:first-child td:last-child {
    .border-top-right-radius(@borderRadius);
  }*/

}




// ZEBRA-STRIPING
// --------------

// Default zebra-stripe styles (alternating gray and transparent backgrounds)
.table-striped {
  tbody {
    > tr:nth-child(odd) > td,
    > tr:nth-child(odd) > th {
      background-color: @tableBackgroundAccent;
    }
  }
}


// HOVER EFFECT
// ------------
// Placed here since it has to come after the potential zebra striping
.table-hover {
  tbody {
    tr:hover > td,
    tr:hover > th {
      background-color: @tableBackgroundHover;
    }
  }
}


// TABLE CELL SIZING
// -----------------

// Reset default grid behavior
table td[class*="span"],
table th[class*="span"],
.row-fluid table td[class*="span"],
.row-fluid table th[class*="span"] {
  display: table-cell;
  float: none; // undo default grid column styles
  margin-left: 0; // undo default grid column styles
}

// Change the column widths to account for td/th padding
.table td,
.table th {
  &.span1     { .tableColumns(1); }
  &.span2     { .tableColumns(2); }
  &.span3     { .tableColumns(3); }
  &.span4     { .tableColumns(4); }
  &.span5     { .tableColumns(5); }
  &.span6     { .tableColumns(6); }
  &.span7     { .tableColumns(7); }
  &.span8     { .tableColumns(8); }
  &.span9     { .tableColumns(9); }
  &.span10    { .tableColumns(10); }
  &.span11    { .tableColumns(11); }
  &.span12    { .tableColumns(12); }
}



// TABLE BACKGROUNDS
// -----------------
// Exact selectors below required to override .table-striped

.table tbody tr {
  &.success > td {
    background-color: @successBackground;
  }
  &.error > td {
    background-color: @errorBackground;
  }
  &.warning > td {
    background-color: @warningBackground;
  }
  &.info > td {
    background-color: @infoBackground;
  }
}

// Hover states for .table-hover
.table-hover tbody tr {
  &.success:hover > td {
    background-color: darken(@successBackground, 5%);
  }
  &.error:hover > td {
    background-color: darken(@errorBackground, 5%);
  }
  &.warning:hover > td {
    background-color: darken(@warningBackground, 5%);
  }
  &.info:hover > td {
    background-color: darken(@infoBackground, 5%);
  }
}


// Utility classes
//
// Utility classes
// --------------------------------------------------


// Quick floats
.pull-right {
  float: right;
}
.pull-left {
  float: left;
}

// Toggling content
.hide {
  display: none;
}
.show {
  display: block;
}

// Visibility
.invisible {
  visibility: hidden;
}

// For Affix plugin
.affix {
  position: fixed;
}


// Components:

//
// Sprites
// --------------------------------------------------


// ICONS
// -----

// All icons receive the styles of the <i> tag with a base class
// of .i and are then given a unique class to add width, height,
// and background-position. Your resulting HTML will look like
// <i class="icon-inbox"></i>.

// For the white version of the icons, just add the .icon-white class:
// <i class="icon-inbox icon-white"></i>

[class^="icon-"],
[class*=" icon-"] {
  display: inline-block;
  width: 14px;
  height: 14px;
  .ie7-restore-right-whitespace();
  line-height: 14px;
  vertical-align: text-top;
  background-image: url("@{iconSpritePath}");
  background-position: 14px 14px;
  background-repeat: no-repeat;
  margin-top: 1px;
}

/* White icons with optional class, or on hover/focus/active states of certain elements */
.icon-white,
.tm-nav-pills > .active > a > [class^="icon-"],
.tm-nav-pills > .active > a > [class*=" icon-"],
.tm-navbar-inverse .tm-nav > .active > a > [class^="icon-"],
.tm-navbar-inverse .tm-nav > .active > a > [class*=" icon-"] {
  background-image: url("@{iconWhiteSpritePath}");
}

/*.tm-dropdown-menu > li > a:hover > [class^="icon-"],
.tm-dropdown-menu > li > a:focus > [class^="icon-"],
.tm-dropdown-menu > li > a:hover > [class*=" icon-"],
.tm-dropdown-menu > li > a:focus > [class*=" icon-"],
.tm-dropdown-menu > .active > a > [class^="icon-"],
.tm-dropdown-menu > .active > a > [class*=" icon-"],
.tm-dropdown-submenu:hover > a > [class^="icon-"],
.tm-dropdown-submenu:focus > a > [class^="icon-"],
.tm-dropdown-submenu:hover > a > [class*=" icon-"],
.tm-dropdown-submenu:focus > a > [class*=" icon-"] {  
}*/


.icon-glass              { background-position: 0      0; }
.icon-music              { background-position: -24px  0; }
.icon-search             { background-position: -48px  0; }
.icon-envelope           { background-position: -72px  0; }
.icon-heart              { background-position: -96px  0; }
.icon-star               { background-position: -120px 0; }
.icon-star-empty         { background-position: -144px 0; }
.icon-user               { background-position: -168px 0; }
.icon-film               { background-position: -192px 0; }
.icon-th-large           { background-position: -216px 0; }
.icon-th                 { background-position: -240px 0; }
.icon-th-list            { background-position: -264px 0; }
.icon-ok                 { background-position: -288px 0; }
.icon-remove             { background-position: -312px 0; }
.icon-zoom-in            { background-position: -336px 0; }
.icon-zoom-out           { background-position: -360px 0; }
.icon-off                { background-position: -384px 0; }
.icon-signal             { background-position: -408px 0; }
.icon-cog                { background-position: -432px 0; }
.icon-trash              { background-position: -456px 0; }

.icon-home               { background-position: 0      -24px; }
.icon-file               { background-position: -24px  -24px; }
.icon-time               { background-position: -48px  -24px; }
.icon-road               { background-position: -72px  -24px; }
.icon-download-alt       { background-position: -96px  -24px; }
.icon-download           { background-position: -120px -24px; }
.icon-upload             { background-position: -144px -24px; }
.icon-inbox              { background-position: -168px -24px; }
.icon-play-circle        { background-position: -192px -24px; }
.icon-repeat             { background-position: -216px -24px; }
.icon-refresh            { background-position: -240px -24px; }
.icon-list-alt           { background-position: -264px -24px; }
.icon-lock               { background-position: -287px -24px; } // 1px off
.icon-flag               { background-position: -312px -24px; }
.icon-headphones         { background-position: -336px -24px; }
.icon-volume-off         { background-position: -360px -24px; }
.icon-volume-down        { background-position: -384px -24px; }
.icon-volume-up          { background-position: -408px -24px; }
.icon-qrcode             { background-position: -432px -24px; }
.icon-barcode            { background-position: -456px -24px; }

.icon-tag                { background-position: 0      -48px; }
.icon-tags               { background-position: -25px  -48px; } // 1px off
.icon-book               { background-position: -48px  -48px; }
.icon-bookmark           { background-position: -72px  -48px; }
.icon-print              { background-position: -96px  -48px; }
.icon-camera             { background-position: -120px -48px; }
.icon-font               { background-position: -144px -48px; }
.icon-bold               { background-position: -167px -48px; } // 1px off
.icon-italic             { background-position: -192px -48px; }
.icon-text-height        { background-position: -216px -48px; }
.icon-text-width         { background-position: -240px -48px; }
.icon-align-left         { background-position: -264px -48px; }
.icon-align-center       { background-position: -288px -48px; }
.icon-align-right        { background-position: -312px -48px; }
.icon-align-justify      { background-position: -336px -48px; }
.icon-list               { background-position: -360px -48px; }
.icon-indent-left        { background-position: -384px -48px; }
.icon-indent-right       { background-position: -408px -48px; }
.icon-facetime-video     { background-position: -432px -48px; }
.icon-picture            { background-position: -456px -48px; }

.icon-pencil             { background-position: 0      -72px; }
.icon-map-marker         { background-position: -24px  -72px; }
.icon-adjust             { background-position: -48px  -72px; }
.icon-tint               { background-position: -72px  -72px; }
.icon-edit               { background-position: -96px  -72px; }
.icon-share              { background-position: -120px -72px; }
.icon-check              { background-position: -144px -72px; }
.icon-move               { background-position: -168px -72px; }
.icon-step-backward      { background-position: -192px -72px; }
.icon-fast-backward      { background-position: -216px -72px; }
.icon-backward           { background-position: -240px -72px; }
.icon-play               { background-position: -264px -72px; }
.icon-pause              { background-position: -288px -72px; }
.icon-stop               { background-position: -312px -72px; }
.icon-forward            { background-position: -336px -72px; }
.icon-fast-forward       { background-position: -360px -72px; }
.icon-step-forward       { background-position: -384px -72px; }
.icon-eject              { background-position: -408px -72px; }
.icon-chevron-left       { background-position: -432px -72px; }
.icon-chevron-right      { background-position: -456px -72px; }

.icon-plus-sign          { background-position: 0      -96px; }
.icon-minus-sign         { background-position: -24px  -96px; }
.icon-remove-sign        { background-position: -48px  -96px; }
.icon-ok-sign            { background-position: -72px  -96px; }
.icon-question-sign      { background-position: -96px  -96px; }
.icon-info-sign          { background-position: -120px -96px; }
.icon-screenshot         { background-position: -144px -96px; }
.icon-remove-circle      { background-position: -168px -96px; }
.icon-ok-circle          { background-position: -192px -96px; }
.icon-ban-circle         { background-position: -216px -96px; }
.icon-arrow-left         { background-position: -240px -96px; }
.icon-arrow-right        { background-position: -264px -96px; }
.icon-arrow-up           { background-position: -289px -96px; } // 1px off
.icon-arrow-down         { background-position: -312px -96px; }
.icon-share-alt          { background-position: -336px -96px; }
.icon-resize-full        { background-position: -360px -96px; }
.icon-resize-small       { background-position: -384px -96px; }
.icon-plus               { background-position: -408px -96px; }
.icon-minus              { background-position: -433px -96px; }
.icon-asterisk           { background-position: -456px -96px; }

.icon-exclamation-sign   { background-position: 0      -120px; }
.icon-gift               { background-position: -24px  -120px; }
.icon-leaf               { background-position: -48px  -120px; }
.icon-fire               { background-position: -72px  -120px; }
.icon-eye-open           { background-position: -96px  -120px; }
.icon-eye-close          { background-position: -120px -120px; }
.icon-warning-sign       { background-position: -144px -120px; }
.icon-plane              { background-position: -168px -120px; }
.icon-calendar           { background-position: -192px -120px; }
.icon-random             { background-position: -216px -120px; width: 16px; }
.icon-comment            { background-position: -240px -120px; }
.icon-magnet             { background-position: -264px -120px; }
.icon-chevron-up         { background-position: -288px -120px; }
.icon-chevron-down       { background-position: -313px -119px; } // 1px, 1px off
.icon-retweet            { background-position: -336px -120px; }
.icon-shopping-cart      { background-position: -360px -120px; }
.icon-folder-close       { background-position: -384px -120px; width: 16px; }
.icon-folder-open        { background-position: -408px -120px; width: 16px; }
.icon-resize-vertical    { background-position: -432px -119px; } // 1px, 1px off
.icon-resize-horizontal  { background-position: -456px -118px; } // 1px, 2px off

.icon-hdd                     { background-position: 0      -144px; }
.icon-bullhorn                { background-position: -24px  -144px; }
.icon-bell                    { background-position: -48px  -144px; }
.icon-certificate             { background-position: -72px  -144px; }
.icon-thumbs-up               { background-position: -96px  -144px; }
.icon-thumbs-down             { background-position: -120px -144px; }
.icon-hand-right              { background-position: -144px -144px; }
.icon-hand-left               { background-position: -168px -144px; }
.icon-hand-up                 { background-position: -192px -144px; }
.icon-hand-down               { background-position: -216px -144px; }
.icon-circle-arrow-right      { background-position: -240px -144px; }
.icon-circle-arrow-left       { background-position: -264px -144px; }
.icon-circle-arrow-up         { background-position: -288px -144px; }
.icon-circle-arrow-down       { background-position: -312px -144px; }
.icon-globe                   { background-position: -336px -144px; }
.icon-wrench                  { background-position: -360px -144px; }
.icon-tasks                   { background-position: -384px -144px; }
.icon-filter                  { background-position: -408px -144px; }
.icon-briefcase               { background-position: -432px -144px; }
.icon-fullscreen              { background-position: -456px -144px; }

//
// Dropdown menus
// --------------------------------------------------


// Use the .menu class on any <li> element within the topbar or ul.tabs and you'll get some superfancy dropdowns
.dropup,
.dropdown {
  position: relative;
}

.tm-dropdown-toggle:active,
.open .tm-dropdown-toggle {

}

// The dropdown menu (ul)
// ----------------------
.tm-dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: @zindexDropdown;
  display: none; // none by default, but block on "open" of the menu
  float: left;
  min-width: @dropdownMinWidth;
  *vertical-align: baseline;
  // override default ul
  list-style: none;
  margin: 0; 
  padding: @dropdownPaddingTop @dropdownPaddingRight @dropdownPaddingBottom @dropdownPaddingLeft;  
  background: @dropdownBackgroundColor;  
  border: 1px solid @dropdownBorderColor;
  .border-radius(@dropdownRadius);
  
  .box-shadow(0px 2px 6px rgba(60,60,60,.3));
  
  -webkit-background-clip: padding-box;
     -moz-background-clip: padding;
          background-clip: padding-box;

  // Aligns the dropdown menu to right
  &.pull-right {
    right: 0;
    left: auto;
  }

  // Dividers (basically an hr) within the dropdown
  .tm-divider {
    .tm-nav-divider(@dropdownDividerColorTop, @dropdownDividerColorBottom);
    margin: (@baseLineHeight / 4) 0;
    *margin: -9px 0 1px;
		border-bottom: none;
  }
  
  // Links within the dropdown menu
  > li > a {
    display: block;
    padding: @dropdownLinkPaddingTop @dropdownLinkPaddingRight @dropdownLinkPaddingBottom @dropdownLinkPaddingLeft;
    clear: both;
    font-weight: @dropdownLinkFontWeight;
    font-size: @dropdownLinkFontSize;
    line-height: @dropdownLinkLineHeight;
    color: @dropdownLinkColor;
    white-space: nowrap;
  }
}

// Hover/Focus state
// -----------
.tm-dropdown-menu > li > a:hover,
.tm-dropdown-menu > li > a:focus,
.tm-dropdown-submenu:hover > a,
.tm-dropdown-submenu:focus > a {
  text-decoration: none;  
  color: @dropdownLinkColorHover;  
  background-color: @dropdownLinkBackgroundHover; 
}

// Active state
// ------------
.tm-dropdown-menu > .active > a,
.tm-dropdown-menu > .active > a:hover,
.tm-dropdown-menu > .active > a:focus {
  text-decoration: none;
  color: @dropdownLinkColorActive;
  background-color: @dropdownLinkBackgroundActive;
}

// Disabled state
// --------------
// Gray out text and ensure the hover/focus state remains gray
// Nuke hover/focus effects
.tm-dropdown-menu > .disabled > a,
.tm-dropdown-menu > .disabled > a:hover,
.tm-dropdown-menu > .disabled > a:focus {
  text-decoration: none;
  color: @dropdownLinkColorDisabled;  
  background-color: transparent;
  cursor: default; 
}

// Open state for the dropdown
// ---------------------------
.open {
  // IE7's z-index only goes to the nearest positioned ancestor, which would
  // make the menu appear below buttons that appeared later on the page
  *z-index: @zindexDropdown;
  
  > .tm-dropdown-menu {
    display: block;
  }
}

// Right aligned dropdowns
// ---------------------------
.pull-right > .tm-dropdown-menu {
  right: 0;
  left: auto;
}



// Sub menus
// ---------------------------

.tm-dropdown-submenu {
  position: relative;
}

// Caret to indicate there is a submenu
.tm-nav li.dropdown.open .tm-dropdown-submenu > a,
.tm-nav li.dropdown.open .tm-dropdown-submenu > a:hover,
.tm-dropdown-submenu > a {
    *position: relative;
    .caret{
        border: 5px solid transparent;
        border-left-color: @grayLight;
        border-right-width: 0;
        margin: 0;
        right: ((@dropdownLinkPaddingRight - 5) / 2);
        top: ((@dropdownLinkLineHeight + @dropdownLinkPaddingTop + @dropdownLinkPaddingBottom - 10) / 2);
        *top: ((@dropdownLinkLineHeight - 10) / 2);
        position: absolute;
    }
}
.tm-nav li.dropdown.open .tm-dropdown-submenu > a:hover {
    .caret{
        border-left-color: @textColor;
        border-right-color: @textColor;
    }
}

.tm-dropdown-submenu:hover > a {
    .caret{
        border-left-color: @dropdownLinkColorHover;
    }
}
// Default dropdowns
.tm-dropdown-submenu > .tm-dropdown-menu {
  top: 0;
  left: 100%;
  margin-top: 0;
  margin-left: 0;
  .border-radius(0 @borderRadius @borderRadius @borderRadius);
}

.tm-dropdown-submenu:hover > .tm-dropdown-menu {
  display: block;
}

// Dropups
.dropup {
  .tm-dropdown-menu,
  .tm-dropdown-submenu > .tm-dropdown-menu {
    top: auto;
    bottom: 100%;
    margin-top: 0;
    margin-bottom: -1px;
    .border-radius(@borderRadius @borderRadius @borderRadius 0);
  }
  .tm-dropdown-submenu > .tm-dropdown-menu {    
    bottom: 0;   
    margin-bottom: 0;    
  }
}

// Tweak nav headers
// -----------------
// Increase padding from 15px to 20px on sides
.dropdown {
  .tm-dropdown-menu .tm-nav-header {
    padding-left: @dropdownLinkPaddingLeft;
    padding-right: @dropdownLinkPaddingRight;
  }
}

// Left aligned submenus
.tm-dropdown-submenu.pull-left {
  // Undo the float
  // Yes, this is awkward since .pull-left adds a float, but it sticks to our conventions elsewhere.
  float: none;

  // Positioning the submenu
  > .tm-dropdown-menu {
    left: -100%;
    .border-radius(@borderRadius 0 @borderRadius @borderRadius);
    margin-left: -2px;
    *margin-left: 1px;
  }
  // Caret to indicate there is a submenu
  > a .caret{
    right: auto;
    left: ((@dropdownLinkPaddingRight - 5) / 2);
    border-right-width: 5px;
    border-left-width: 0;
    border-left-color: transparent;
    border-right-color: @grayLight;
  }
}

.tm-dropdown-submenu.pull-left:hover {
  > a .caret{
    border-left-color: transparent;
    border-right-color: @dropdownLinkColorHover;
  }
}

//Dropups Left aligned submenus
 .dropup .tm-dropdown-submenu.pull-left {//@add
   > .tm-dropdown-menu {
    .border-radius(@borderRadius @borderRadius 0 @borderRadius);
   }
}
//
// Wells
// --------------------------------------------------


// Base class
.well {
  min-height: 20px;
  padding: 19px;
  margin-bottom: 20px;
  background-color: @wellBackground;
  border: 1px solid darken(@wellBackground, 7%);
  .border-radius(@borderRadius);
  //.box-shadow(inset 0 1px 1px rgba(0,0,0,.05));
  blockquote {
    border-color: #ddd;
    border-color: rgba(0,0,0,.15);
  }
}

// Sizes
.well-large {
  padding: 24px;
  .border-radius(@borderRadiusLarge);
}
.well-small {
  padding: 9px;
  .border-radius(@borderRadiusSmall);
}

//
// Component animations
// --------------------------------------------------


.fade {
  opacity: 0;
  .transition(opacity .5s linear);
  &.in {
    opacity: 1;
  }
}

.collapse {
  position: relative;
  height: 0;
  overflow: hidden;
  .transition(height .30s ease);
  &.in {
    height: auto;
  }
}

//
// Close icons
// --------------------------------------------------


.close {
  float: right;
  font-size: 20px;
  font-weight: bold;
  line-height: @baseLineHeight;
  color: @black;
  text-shadow: 0 1px 0 rgba(255,255,255,1);
  .opacity(20);
  &:hover,
  &:focus {
    color: @black;
    text-decoration: none;
    cursor: pointer;
    .opacity(40);
    outline: 0;
  }
}

// Additional properties for button version
// iOS requires the button element instead of an anchor tag.
// If you want the anchor version, it requires `href="#"`.
button.close {
  padding: 0;
  cursor: pointer;
  background: transparent;
  border: 0;
  -webkit-appearance: none;
}
//
// Buttons
// --------------------------------------------------


// Base styles
// --------------------------------------------------

// Core
// ----------------------------
.tm-btn {
  display: inline-block;
  .ie7-inline-block(); 
  
  min-width: @btnMinWidth;
  *min-width: @btnMinWidth;
  min-width: (@btnMinWidth - (@btnHerizontalPadding * 2) - 2) e("\9");
  
  padding: (((@btnBaseHeight - @baseLineHeight) / 2) - 1) @btnHerizontalPadding; //need to exclude border top/bottom
  *padding: (((@btnBaseHeight - @baseLineHeight) / 2) - 2) (@btnHerizontalPadding + 1) (((@btnBaseHeight - @baseLineHeight) / 2) - 1);
  
  margin: 0; // For input.tm-btn
  .ie7-restore-left-whitespace(); // Give IE7 some love
  
  
  font-size: @baseFontSize;
  line-height: @baseLineHeight;  
  text-align: center;
  vertical-align: middle;
  cursor: pointer; 
  
  border: 1px solid @btnBorderColor;
  *border: 0; // Remove the border to prevent IE7's black border on input:focus
  .border-radius(@borderRadius);
  
  .buttonBackground(@btnBackgroundTop, @btnBackgroundBottom, @btnBorderColor, @textColor, 0 1px 1px rgba(255,255,255,.75));
  *filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(darken(@btnBackgroundBottom, 5%)),argb(darken(@btnBackgroundBottom, 9%))));
  background-position: 0 top;
  background-size: 1px (@btnBaseHeight - 2);
  .transition(~"all linear .15s");
  -o-transition-duration: 0s;
  
  // Hover state  
  //&.hover,
  &:hover {    
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@btnBackgroundHover),argb(@btnBackgroundHoverBottom))); // IE9 and down
    *filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(darken(@btnBackgroundHover, 4%)),argb(darken(@btnBackgroundHoverBottom, 1%))));
    
    background-position: 0 -(@btnBaseHeight - 2);
    background-size: 1px ((@btnBaseHeight - 2) * 2);
    border-color: @btnBorderColorHover;
  }
  
  // Focus state for keyboard and accessibility
  //&.focus,
  &:focus {
    color: @textColor;
    text-decoration: none;
    .tab-focus();
  }
  
  // Active/Press state
  &.active,
  &:active {
    .buttonBackground(@btnBackgroundPressTop, @btnBackgroundPressBottom, @btnBorderColorHover, @textColor, 0 1px 1px rgba(255,255,255,.75));    
    .tab-focus();
    
    background-position: 0 top;
    background-size: 1px (@btnBaseHeight - 2);    
  }

  // Disabled state
  &.disabled,
  &.disabled:hover,
  &.disabled:focus,
  &[disabled],
  &[disabled]:hover,
  &[disabled]:focus {
    cursor: default;
    .buttonBackground(@btnBackgroundTop, @btnBackgroundBottom, @btnBorderColor, @textColor, 0 1px 1px rgba(255,255,255,.75));
    *filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@btnBackgroundBottom),argb(@btnBackgroundBottom)));
    .opacity(@btnOpacityDisabled);    
    *color: lighten(@textColor, @btnLightenDisabledIE7);
    color: darken(@textColor, 30%) e("\9");
    background-position: 0 top;
    background-size: 1px (@btnBaseHeight - 2);
    .non-focus();
  }
  
  // Gutter
  + .tm-btn {
    margin-left: @btnHorizontalGutter;
  }
  
  + button.tm-btn {
    *margin-left: @btnHorizontalGutterButtonIE7;
  }
}

:root .tm-btn {  
  min-width: @btnMinWidth e("\9");  
}

a.tm-btn {
  min-width: @btnMinWidth - (@btnHerizontalPadding * 2) - 2;
  *min-width: @btnMinWidth - (@btnHerizontalPadding * 2);
  *padding: ((@btnBaseHeight - @baseLineHeight) / 2) @btnHerizontalPadding ((@btnBaseHeight - @baseLineHeight) / 2);
  color: @textColor;
}

:root a.tm-btn {
  min-width: @btnMinWidth - (@btnHerizontalPadding * 2) - 2 e("\9");
}

input[type="submit"].tm-btn,
input[type="button"].tm-btn {
  height: @btnBaseHeight;
  line-height: @btnBaseHeight;
  height: auto e("\9");
  line-height: @baseLineHeight e("\9");
}

button.tm-btn,
input[type="submit"].tm-btn {
  // Firefox 3.6 only I believe
  &::-moz-focus-inner {
    padding: 0;
    border: 0;
  }
}

@media screen and (-webkit-min-device-pixel-ratio:0){
  input[type="submit"].tm-btn,
  input[type="button"].tm-btn {
    height: auto;
    line-height: @baseLineHeight;
  } 
}

// Button Sizes
// --------------------------------------------------
.tm-btn.inline {
  vertical-align: top;
  padding-top: 0;
  padding-bottom: 0;
  line-height: @baseLineHeight - 2;
  margin-left: @btnInlineHorizontalGutter;
}

// Large
// ----------------------------
.tm-btn-large {
  padding: @paddingLarge @btnHerizontalPadding;  
  background-size: 1px (@lineHeightLarge +  (@paddingLarge * 2));
  font-size: @fontSizeLarge;
  line-height: @lineHeightLarge;
  .border-radius(@borderRadiusLarge);
  &.tm-btn,
  &.tm-btn-primary,
  &.tm-btn-danger,
  &.tm-btn-inverse {
    &:hover {
      background-position: 0 -(@lineHeightLarge + (@paddingLarge * 2));      
      background-size: 1px (@lineHeightLarge +  (@paddingLarge * 2)) * 2;
    }
    &.active,
    &:active {
      background-position: 1px top;
      background-size: 1px (@lineHeightLarge +  (@paddingLarge * 2));
    }
    &.disabled,
    &.disabled:hover,
    &.disabled:focus,
    &[disabled],
    &[disabled]:hover,
    &[disabled]:focus {
      background-position: 0 top;
      background-size: 1px (@lineHeightLarge +  (@paddingLarge * 2));
    }
  }
}
.tm-btn-large [class^="icon-"],
.tm-btn-large [class*=" icon-"] {
  margin-top: 4px;
}

// Small
// ----------------------------
.tm-btn-small {
  padding: @paddingSmall @btnHerizontalPadding;
  background-size: 1px (@lineHeightSmall +  (@paddingSmall * 2));
  font-size: @fontSizeSmall;
  line-height: @lineHeightSmall;
  .border-radius(@borderRadiusSmall);
  &.tm-btn,
  &.tm-btn-primary,
  &.tm-btn-danger,
  &.tm-btn-inverse {
    &:hover {
      background-position: 0 -14px;
      background-size: 1px ((@lineHeightSmall +  (@paddingSmall * 2)) + 14);
    }
    &.active,
    &:active {
      background-position: 1px top;
      background-size: 1px (@lineHeightSmall +  (@paddingSmall * 2));
    }
    &.disabled,
    &.disabled:hover,
    &.disabled:focus,
    &[disabled],
    &[disabled]:hover,
    &[disabled]:focus {
      background-position: 0 top;
      background-size: 1px (@lineHeightSmall + (@paddingSmall * 2));
    }
  }
}
.tm-btn-small [class^="icon-"],
.tm-btn-small [class*=" icon-"] {
  margin-top: 0;
}


// Block button
// ----------------------------
.tm-btn-block {
  display: block;
  width: 100%;
  padding-left: 0;
  padding-right: 0;
  margin-left: 0 !important;
  .box-sizing(border-box);
}

// Vertically space out multiple block buttons
// ----------------------------
.tm-btn-block + .tm-btn-block {
  margin-top: @btnBlockVerticalGutter;
}

// Specificity overrides
// ----------------------------
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.tm-btn-block {
    width: 100%;
  }
}

// Alternate buttons
// --------------------------------------------------
// Provide *some* extra contrast for those who can get it
.tm-btn-primary,
.tm-btn-danger,
.tm-btn-inverse {
  // Focus state for keyboard and accessibility
  // Active/Press state  
  &:focus,  
  &.active,
  &:active {
    color: @btnAlternateTextColor;    
  }
  
  // Disabled state
  &.disabled,  
  &.disabled:hover,
  &.disabled:focus,
  &[disabled],
  &[disabled]:hover,
  &[disabled]:focus {   
    .opacity(@btnOpacityDisabled);
  }
}
a {
  &.tm-btn-primary, 
  &.tm-btn-danger, 
  &.tm-btn-inverse {
    color: @btnAlternateTextColor;
  }
}
// Set the backgrounds
// -------------------------
.tm-btn-primary {  
  .buttonBackground(@btnPrimaryBackgroundTop, @btnPrimaryBackgroundBottom, @btnPrimaryBorderColor, @btnAlternateTextColor);
  border-bottom-color: @btnPrimaryBorderColorBottom;
  
  // Hover state
  //&.hover,
  &:hover {    
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@btnPrimaryBackgroundHover),argb(@btnPrimaryBackgroundHover))); // IE9 and down
    *filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(darken(@btnPrimaryBackgroundHover, 0%)),argb(darken(@btnPrimaryBackgroundHover, 0%))));
    border-color: @btnPrimaryBorderColorBottom;    
  }
  
  // Focus state for keyboard and accessibility
  //&.focus,
  &:focus {
    .tab-focus(@btnPrimaryBorderColorFocused, @white);    
  } 
  
  // Active/Press state
  &.active,
  &:active {
    .buttonBackground(@btnPrimaryBackgroundActiveTop, @btnPrimaryBackgroundActiveBottom, @btnPrimaryBorderColorHover, @btnAlternateTextColor);
    .tab-focus(@btnPrimaryBorderColorFocused, @white);
    background-position: 0 top;
    background-size: 1px (@btnBaseHeight - 2);
  }
    
  // Disabled state
  &.disabled,  
  &.disabled:hover,
  &.disabled:focus,
  &[disabled],
  &[disabled]:hover,
  &[disabled]:focus {    
    .buttonBackground(@btnPrimaryBackgroundTop, @btnPrimaryBackgroundBottom, @btnPrimaryBorderColor, @btnAlternateTextColorDisabled, 0 1px 1px rgba(255,255,255,.75));
    .opacity(@btnOpacityDisabled);
  }
}

// Danger and error appear as red
.tm-btn-danger {

  .buttonBackground(@btnDangerBackgroundTop, @btnDangerBackgroundBottom, @btnDangerBorderColor, @btnAlternateTextColor);
  border-bottom-color: @btnDangerBorderColorBottom;
  
  // Hover state
  //&.hover,
  &:hover {   
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@btnDangerBackgroundHover),argb(@btnDangerBackgroundHover))); // IE9 and down
    *filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(darken(@btnDangerBackgroundHover, 0%)),argb(darken(@btnDangerBackgroundHover, 2%))));
    
    border-color: @btnDangerBorderColorBottom;    
  }
  
  // Focus state for keyboard and accessibility
  //&.focus,
  &:focus {
    .tab-focus(@btnDangerBorderColorFocused, @white);    
  }
  
  // Active/Press state
  &.active,
  &:active {
    .buttonBackground(@btnDangerBackgroundActiveTop, @btnDangerBackgroundActiveBottom, @btnDangerBorderColorHover, @btnAlternateTextColor);
    .tab-focus(@btnDangerBorderColorFocused, @white);
    background-position: 0 top;
    background-size: 1px (@btnBaseHeight - 2);
  }  
  
  // Disabled state
  &.disabled, 
  &.disabled:hover,
  &.disabled:focus,
  &[disabled],
  &[disabled]:hover,
  &[disabled]:focus {
    .buttonBackground(@btnDangerBackgroundTop, @btnDangerBackgroundBottom, @btnDangerBorderColor, @btnAlternateTextColorDisabled, 0 1px 1px rgba(255,255,255,.75)); 
    .opacity(@btnOpacityDisabled);
  }
}

// Inverse appears as dark gray
.tm-btn-inverse {
  .buttonBackground(@btnInverseBackgroundTop, @btnInverseBackgroundBottom, @btnInverseBorderColor, @btnAlternateTextColor);
  border-bottom-color: @btnInverseBorderColorBottom;
  
  // Hover state
  //&.hover,
  &:hover {    
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@btnInverseBackgroundHover),argb(@btnInverseBackgroundHover))); // IE9 and down
    *filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(darken(@btnInverseBackgroundHover, 0%)),argb(darken(@btnInverseBackgroundHover, 2%))));
    
    border-color: @btnInverseBorderColorHover;   
  }
  
  // Focus state for keyboard and accessibility
  //&.focus,
  &:focus {
    .tab-focus(@btnInverseBorderColorFocused, @white);   
  }
  
  // Active/Press state
  &.active,
  &:active {
    .buttonBackground(@btnInverseBackgroundActiveTop, @btnInverseBackgroundActiveBottom, @btnInverseBorderColorHover, @btnAlternateTextColor);
    .tab-focus(@btnInverseBorderColorFocused, @white);
    background-position: 0 top;
    background-size: 1px (@btnBaseHeight - 2);
  } 
  
  // Disabled state
  &.disabled,
  &.disabled:hover,
  &.disabled:focus,  
  &[disabled],
  &[disabled]:hover,
  &[disabled]:focus {
    .buttonBackground(@btnInverseBackgroundTop, @btnInverseBackgroundBottom, @btnInverseBorderColor, @btnAlternateTextColorDisabled, 0 1px 1px rgba(255,255,255,.75)); 
    .opacity(@btnOpacityDisabled);
  }
}
//
// Button groups
// --------------------------------------------------

// Make the div behave like a button
.tm-btn-group {
  position: relative;
  display: inline-block;
  .ie7-inline-block();
  font-size: 0; // remove as part 1 of font-size inline-block hack
  vertical-align: middle; // match .tm-btn alignment given font-size hack above
  white-space: nowrap; // prevent buttons from wrapping when in tight spaces (e.g., the table on the tests page)
  .ie7-restore-left-whitespace();  
}

// Space out series of button groups
.tm-btn-group + .tm-btn-group {
  margin-left: @btnHorizontalGutter;
}
// Optional: Group multiple button groups together for a toolbar
.tm-btn-toolbar {
  font-size: 0; // Hack to remove whitespace that results from using inline-block
  margin-top: @baseLineHeight / 2;
  margin-bottom: @baseLineHeight / 2;
  > .tm-btn + .tm-btn,
  > .tm-btn-group + .tm-btn,
  > .tm-btn + .tm-btn-group {
    margin-left: @btnHorizontalGutter;
  }
}

// Float them, remove border radius, then re-add to first and last elements
.tm-btn-group {
  > .tm-btn {    
    position: relative;
    *position: static;
    .border-radius(0);
    + .tm-btn {
      margin-left: -1px;
      *margin-left: 1px;     
    }         
    &:hover {
      + .tm-btn {
        border-left-color: @btnBorderColorHover;        
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-primary {
        border-left-color: @btnPrimaryBorderColor;
        &:hover,
        &.active,
        &:active {
          border-left-color: @btnPrimaryBorderColorHover;
        }
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnPrimaryBorderColorFocused e("\9");
        }      
      }
      + .tm-btn.tm-btn-danger {
        border-left-color: @btnDangerBorderColor;
        &:hover,
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorHover;
        }
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-inverse {
        border-left-color: @btnInverseBorderColor;
        &:hover,
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorHover;
        }
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
      }
    }
    &:focus {
      + .tm-btn {
        border-left-color: @btnBorderColorFocused e("\9");
      }
      + .tm-btn.tm-btn-primary,
      + .tm-btn.tm-btn-danger,
      + .tm-btn.tm-btn-inverse {
        border-left-color: @btnBorderColorFocused e("\9");
        &:hover {
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-danger {
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-inverse {
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
    }   
    &.active,
    &:active {
      + .tm-btn {
        border-left-color: @btnBorderColorHover;
        border-left-color: @btnBorderColorFocused e("\9");
      }
      + .tm-btn.tm-btn-primary {
        border-left-color: @btnPrimaryBorderColor;
        border-left-color: @btnBorderColorFocused e("\9");
        &:hover,
        &.active,
        &:active {
          border-left-color: @btnPrimaryBorderColorHover;
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-danger {
        border-left-color: @btnDangerBorderColor;
        border-left-color: @btnBorderColorFocused e("\9");
        &:hover,
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorHover;
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-inverse {
        border-left-color: @btnInverseBorderColor;
        border-left-color: @btnBorderColorFocused e("\9");
        &:hover,
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorHover;
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
    }    
  }
  > .tm-btn.tm-btn-primary {
    + .tm-btn {
      border-left-color: @btnPrimaryBorderColor;
      &:focus,
      &.active,
      &:active {
        border-left-color: @btnBorderColorFocused e("\9");
      }
    }
    + .tm-btn.tm-btn-primary {
      &:hover,
      &.active,
      &:active {
        border-left-color: @btnPrimaryBorderColorHover;        
      }
      &:focus,
      &.active,
      &:active {
        border-left-color: @btnPrimaryBorderColorFocused e("\9");
      }
    }
    + .tm-btn.tm-btn-danger {
      border-left-color: @btnDangerBorderColor;      
      &:hover,
      &.active,
      &:active {
        border-left-color: @btnDangerBorderColorHover;        
      }      
      &:focus,
      &.active,
      &:active {
        border-left-color: @btnDangerBorderColorFocused e("\9");
      }
    }
    + .tm-btn.tm-btn-inverse {
      border-left-color: @btnInverseBorderColor;
      &:focus,
      &.active,
      &:active {
        border-left-color: @btnInverseBorderColorFocused e("\9");
      }
    }
    &:hover {
      + .tm-btn {
        border-left-color: @btnPrimaryBorderColorHover;
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-danger {
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-inverse {
        border-left-color: @btnInverseBorderColor;
        &:hover,
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorHover;
        }
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
      }
    }
    &:focus {
      + .tm-btn,
      + .tm-btn.tm-btn-primary,
      + .tm-btn.tm-btn-danger,
      + .tm-btn.tm-btn-inverse {
        border-left-color: @btnPrimaryBorderColorFocused e("\9");
      }
      + .tm-btn.tm-btn-danger {
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-inverse {
        &:hover {
          border-left-color: @btnInverseBorderColorHover;
          border-left-color: @btnPrimaryBorderColorFocused e("\9");
        }
        &:focus {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorHover;
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
      }
    }
    &.active,
    &:active {
      + .tm-btn {
        border-left-color: @btnPrimaryBorderColorHover;
        border-left-color: @btnPrimaryBorderColorFocused e("\9");
      }
      + .tm-btn.tm-btn-primary {
        border-left-color: @btnPrimaryBorderColorFocused e("\9");
      }
      + .tm-btn.tm-btn-danger {
        border-left-color: @btnPrimaryBorderColorFocused e("\9");
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }       
      }
      + .tm-btn.tm-btn-inverse {
        border-left-color: @btnInverseBorderColor;
        border-left-color: @btnPrimaryBorderColorFocused e("\9");
        
        &:hover {
          border-left-color: @btnInverseBorderColorHover;
          border-left-color: @btnPrimaryBorderColorFocused e("\9");
        }       
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorHover;
        }
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }        
      }
    }
  }
  > .tm-btn.tm-btn-danger {
    + .tm-btn {
      border-left-color: @btnDangerBorderColor;
      &:focus,
      &.active,
      &:active {
        border-left-color: @btnBorderColorFocused e("\9");
      }      
    }
    + .tm-btn.tm-btn-primary {
      &:hover,
      &.active,
      &:active {
        border-left-color: @btnPrimaryBorderColorHover;
      }
      &:focus,
      &.active,
      &:active {
        border-left-color: @btnPrimaryBorderColorFocused e("\9");
      }
    }
    + .tm-btn.tm-btn-danger {
      &:hover,
      &.active,
      &:active {
        border-left-color: @btnDangerBorderColorHover;
      }
      &:focus,
      &.active,
      &:active {
        border-left-color: @btnDangerBorderColorFocused e("\9");
      }
    }
    + .tm-btn.tm-btn-inverse {
      border-left-color: @btnInverseBorderColor;
      &:focus,
      &.active,
      &:active {
        border-left-color: @btnInverseBorderColorFocused e("\9");
      }
    }
    &:hover {
      + .tm-btn {
        border-left-color: @btnDangerBorderColorHover;
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-primary {
        &:hover,
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorHover;
        }        
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnPrimaryBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-danger {
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-inverse {
        border-left-color: @btnInverseBorderColor;
        &:hover,
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorHover;
        }
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
      }
    }
    &:focus {
      + .tm-btn {
        border-left-color: @btnDangerBorderColorFocused e("\9");
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-primary {
        border-left-color: @btnDangerBorderColorFocused e("\9");        
        &:hover,
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-danger {
        &:hover {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-inverse {
        border-left-color: @btnDangerBorderColorFocused e("\9");
        &:hover {
          border-left-color: @btnInverseBorderColorHover;
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorHover;
        }
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
      }
    }   
    &.active,
    &:active {
      + .tm-btn {
        border-left-color: @btnDangerBorderColorHover; 
        border-left-color: @btnDangerBorderColorFocused e("\9");
        &:focus,    
        &.active,
        &:active {
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-primary {        
        &:hover,  
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorHover;
        }
        &:hover,
        &:focus,  
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-danger {
        &:hover {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
        &:focus, 
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-inverse {
        border-left-color: @btnInverseBorderColor;
        border-left-color: @btnDangerBorderColorFocused e("\9");
        &:hover, 
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorHover;
        }
        &:hover {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
        &:focus, 
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
      }
    }
  }
  > .tm-btn.tm-btn-inverse {
    + .tm-btn {
      border-left-color: @btnInverseBorderColor;     
      &:focus,  
      &.active,
      &:active {
        border-left-color: @btnBorderColorFocused e("\9");
      }
    }
    + .tm-btn.tm-btn-danger {
      &:focus,    
      &.active,
      &:active {
        border-left-color: @btnDangerBorderColorFocused e("\9");
      }
    }
    + .tm-btn.tm-btn-inverse {
      &:hover {
        border-left-color: @btnInverseBorderColorHover;
      }
      &:focus {
        border-left-color: @btnInverseBorderColorFocused e("\9");
      }      
      &.active,
      &:active {
        border-left-color: @btnInverseBorderColorHover;
        border-left-color: @btnInverseBorderColorFocused e("\9");
      }
    }
    &:hover {
      + .tm-btn {
        border-left-color: @btnInverseBorderColorHover;
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-primary {
        &:hover,  
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorHover;
        }
        &:focus {
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-danger {
        &:hover,  
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorHover;
        }
        &:focus, 
        &.active,
        &:active {
          border-left-color: @btnDangerBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-inverse {
        &:focus {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }        
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
      }
    }
    &:focus {
      + .tm-btn {
        border-left-color: @btnInverseBorderColorFocused e("\9");
        &:focus,  
        &.active,
        &:active {
          border-left-color: @btnBorderColorFocused e("\9");
        }        
      }
      + .tm-btn.tm-btn-primary {
        &:hover,
        &:focus, 
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-danger {
        &:hover {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
        &:focus,       
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-inverse {
        &:hover {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
        &:focus {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }       
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
      }
    }    
    &.active,
    &:active {
      + .tm-btn {
        border-left-color: @btnInverseBorderColorHover; 
        border-left-color: @btnInverseBorderColorFocused e("\9");
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-primary {
        border-left-color: @btnInverseBorderColorHover; 
        border-left-color: @btnInverseBorderColorFocused e("\9");
      }
      + .tm-btn.tm-btn-danger {
        &:hover {
          border-left-color: @btnInverseBorderColorHover;
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }       
        &:focus {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }  
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorHover;
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
      }
      + .tm-btn.tm-btn-inverse {
        &:hover {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
        &:focus,
        &.active,
        &:active {
          border-left-color: @btnInverseBorderColorFocused e("\9");
        }
      }
    }
  }
  > .tm-btn.tm-dropdown-toggle {
    min-width: ((@btnMinWidth - (@btnHerizontalPadding * 2) - 2) - @btnHerizontalPadding) e("\9");    
    *min-width: @btnMinWidth;
    text-align: left;
    padding-right: @btnHerizontalPadding + @btnHerizontalPadding;
    .caret {
      position: absolute;
      right: @btnHerizontalPadding;
      margin-left: auto;
    }
    &.tm-btn-large {
      padding-right: @btnHerizontalPadding + @btnHerizontalPadding + @btnDropdownCaretMarginLeft;
    }
  }
  
  > .tm-btn,
  > .tm-dropdown-menu,
  > .tm-popover {
    font-size: @baseFontSize; // redeclare as part 2 of font-size inline-block hack
  }
  
  // Reset fonts for other sizes
  > .tm-btn-small {
    font-size: @fontSizeSmall;
  }
  > .tm-btn-large {
    font-size: @fontSizeLarge;
  }
  
  
  // Set corners individual because sometimes a single button can be in a .tm-btn-group and we need :first-child and :last-child to both match
  > .tm-btn:first-child {
    margin-left: 0;
    .border-top-left-radius(@borderRadius);
    .border-bottom-left-radius(@borderRadius);
  } 
  // Need .tm-dropdown-toggle since :last-child doesn't apply given a .tm-dropdown-menu immediately after it
  > .tm-btn:last-child,
  .tm-dropdown-toggle {
    .border-top-right-radius(@borderRadius);
    .border-bottom-right-radius(@borderRadius);
  }
 
  // Reset corners for large buttons
  > .tm-btn.large:first-child {
    .border-top-left-radius(@borderRadiusLarge);
    .border-bottom-left-radius(@borderRadiusLarge);
  }
  
  > .tm-btn.large:last-child, > .large.tm-dropdown-toggle {
    .border-top-right-radius(@borderRadiusLarge);
    .border-bottom-right-radius(@borderRadiusLarge);
  }
  
  // Split button dropdowns
  // ----------------------
  // Give the line between buttons some depth
  > .tm-btn + .tm-dropdown-toggle {    
    min-width: 0;
    padding-left: @btnDropdownTogglePaddingLeft;
    padding-right: @btnDropdownTogglePaddingRight;
    .box-shadow(~"inset 1px 0 0 rgba(255,255,255,.3), inset 0 1px 0 rgba(255,255,255,.3), 0 1px 2px rgba(0,0,0,.05)");
    *padding-top: @btnDropdownTogglePaddingVerticalIE7;
    *padding-bottom: @btnDropdownTogglePaddingVerticalIE7;
    *background-color: darken(@btnBackgroundBottom, 3%);   
    .caret {
      position: static;
      right: auto;
    }
    &.tm-btn-primary {
      background-color: darken(@btnPrimaryBackgroundBottom, 3%);
    } 
    &.tm-btn-danger {
      background-color: darken(@btnDangerBackgroundBottom, 3%);
    }
    &.tm-btn-inverse {
      background-color: darken(@btnInverseBackgroundBottom, 3%);
    }
  }
  
  > .tm-btn-small.tm-btn + .tm-dropdown-toggle {
    *padding-top: 2px;
    *padding-bottom: 1px;
  }
  
  > .tm-btn-large.tm-btn + .tm-dropdown-toggle {
    padding-left: 12px;
    padding-right: 12px;
    *padding-top: 13px;
    *padding-bottom: 13px;
  }  
  
  .tm-btn.tm-dropdown-toggle:focus {
    .box-shadow(none);
    border-color: @btnBorderColor e("\9");
  }
  .tm-btn.tm-dropdown-toggle.tm-btn-primary:focus {
    .buttonBackground(@btnPrimaryBackgroundTop, @btnPrimaryBackgroundBottom, @btnPrimaryBorderColor, @btnAlternateTextColor);
    border-bottom-color: @btnPrimaryBorderColorBottom;
  }
  .tm-btn.tm-dropdown-toggle.tm-btn-danger:focus {
    .buttonBackground(@btnDangerBackgroundTop, @btnDangerBackgroundBottom, @btnDangerBorderColor, @btnAlternateTextColor);
    border-bottom-color: @btnDangerBorderColorBottom;
  }
  .tm-btn.tm-dropdown-toggle.tm-btn-inverse:focus {
    .buttonBackground(@btnInverseBackgroundTop, @btnInverseBackgroundBottom, @btnInverseBorderColor, @btnAlternateTextColor);
    border-bottom-color: @btnInverseBorderColorBottom;
  }
  &.open {
    // The clickable button for toggling the menu
    // Remove the gradient and set the same inset shadow as the :active state
    .tm-dropdown-toggle {
      background-image: none;
      .box-shadow(~"inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05)");      
    }
    .tm-dropdown-toggle + .tm-dropdown-menu {
      margin-top: -1px;
      .border-top-left-radius(0);
    }
    .tm-dropdown-toggle + .tm-dropdown-menu.pull-right {
      .border-radius(@borderRadius);  
      .border-top-right-radius(0);
    }
    // Keep the hover's background when dropdown is open
    .tm-btn.tm-dropdown-toggle {
      border-color: @btnBorderColorHover;
      background-color: @btnBackgroundTop;
      *background-color: darken(@btnBackgroundBottom, 4%);
      &:focus {
        background-image: none;
        .box-shadow(~"inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05)"); 
      }
    }  
    .tm-btn.tm-btn-primary.tm-dropdown-toggle {
      background-color: @btnPrimaryBackgroundTop;  
      border-color: @btnPrimaryBorderColor;
      &:focus {
        background-image: none;
        .box-shadow(~"inset 0 2px 4px rgba(0,0,0,.2), 0 1px 2px rgba(0,0,0,.05)"); 
      }
    } 
    .tm-btn.tm-btn-danger.tm-dropdown-toggle {
      background-color: @btnDangerBackgroundTop;
      border-color: @btnDangerBorderColor;
      &:focus {
        background-image: none;
        .box-shadow(~"inset 0 2px 4px rgba(0,0,0,.2), 0 1px 2px rgba(0,0,0,.05)"); 
      }
    }
    .tm-btn.tm-btn-inverse.tm-dropdown-toggle {
      background-color: @btnInverseBackgroundTop;
      border-color: @btnInverseBorderColor;
      &:focus {
        background-image: none;
        .box-shadow(~"inset 0 2px 4px rgba(0,0,0,.25), 0 1px 2px rgba(0,0,0,.05)"); 
      }
    }    
  }
  &.open.dropup {
    .tm-dropdown-toggle + .tm-dropdown-menu {
      .border-radius(@borderRadius);  
      .border-bottom-left-radius(0);
    }
    .tm-dropdown-toggle + .tm-dropdown-menu.pull-right {
      .border-radius(@borderRadius);  
      .border-bottom-right-radius(0);
    }
  }
}

// On active and open, don't show outline
.tm-btn-group .tm-dropdown-toggle:active,
.tm-btn-group.open .tm-dropdown-toggle {
  //outline: 0;
}

// Reposition the caret
.tm-btn {
  .caret {
    margin-top: ((@baseLineHeight - @btnDropdownCaretBorderWidth) / 2);
    *margin-top: (((@baseLineHeight - @btnDropdownCaretBorderWidth) / 2) - 2);
    margin-left: @btnDropdownCaretMarginLeft;    
  }
  // Carets in other button sizes
  &.tm-btn-large .caret {
    margin-top: ((@lineHeightLarge - @btnLargeDropdownCaretBorderWidth) / 2);
    *margin-top: (((@lineHeightLarge - @btnLargeDropdownCaretBorderWidth) / 2) - 1);
    margin-left: @btnLargeDropdownCaretMarginLeft;
    border-left-width:  @btnLargeDropdownCaretBorderWidth;
    border-right-width: @btnLargeDropdownCaretBorderWidth;
    border-top-width:   @btnLargeDropdownCaretBorderWidth;
  }
  &.tm-btn-small .caret {
    margin-top: ((@lineHeightSmall - @btnDropdownCaretBorderWidth) / 2);
    *margin-top: (((@lineHeightSmall - @btnDropdownCaretBorderWidth) / 2) - 1);
  }  
}

.tm-btn + .tm-dropdown-toggle {
  .caret {
    margin-left: auto;
  }
}

.dropup .tm-dropdown-toggle .caret {
  border-top:   0;
  border-right: 4px solid transparent;
  border-left:  4px solid transparent;
  border-bottom:   4px solid @dropdownLinkColorHover;
}
// Upside down carets for .dropup
.dropup .tm-btn-large .caret {
  border-bottom-width: @btnLargeDropdownCaretBorderWidth;
}

// Account for other colors
.tm-btn-primary,
.tm-btn-warning,
.tm-btn-danger,
.tm-btn-info,
.tm-btn-success,
.tm-btn-inverse {
  .caret {
    border-top-color: @white;
    border-bottom-color: @white;
  }
}

// Vertical button groups
// ----------------------

.tm-btn-group-vertical {
  display: inline-block; // makes buttons only take up the width they need
  .ie7-inline-block();
}
.tm-btn-group-vertical > .tm-btn {
  display: block;
  float: none;
  max-width: 100%;
  .border-radius(0);
}
.tm-btn-group-vertical > .tm-btn + .tm-btn {
  margin-left: 0;
  margin-top: -1px;
}
.tm-btn-group-vertical > .tm-btn:first-child {
  .border-radius(@borderRadius @borderRadius 0 0);
}
.tm-btn-group-vertical > .tm-btn:last-child {
  .border-radius(0 0 @borderRadius @borderRadius);
}
.tm-btn-group-vertical > .tm-btn-large:first-child {
  .border-radius(@borderRadiusLarge @borderRadiusLarge 0 0);
}
.tm-btn-group-vertical > .tm-btn-large:last-child {
  .border-radius(0 0 @borderRadiusLarge @borderRadiusLarge);
}
.tm-btn-group-vertical > .tm-btn:focus + .tm-btn {
  border-color: @btnBorderColor e("\9");
  border-top-color: @btnBorderColorFocused e("\9");
}
.tm-btn-group-vertical > .tm-btn.tm-btn-primary:focus + .tm-btn { 
  border-color: @btnBorderColor e("\9");
  border-top-color: @btnPrimaryBorderColorFocused e("\9");
}
.tm-btn-group-vertical > .tm-btn.tm-btn-danger:focus + .tm-btn { 
  border-color: @btnBorderColor e("\9");
  border-top-color: @btnDangerBorderColorFocused e("\9");
}
.tm-btn-group-vertical > .tm-btn.tm-btn-inverse:focus + .tm-btn { 
  border-color: @btnBorderColor e("\9");
  border-top-color: @btnInverseBorderColorFocused e("\9");
}

.tm-btn-group-vertical > .tm-btn:focus + .tm-btn.tm-btn-primary {
  border-left-color: @btnPrimaryBorderColor e("\9");
  border-right-color: @btnPrimaryBorderColor e("\9");
  border-bottom-color: @btnPrimaryBorderColorBottom e("\9");
}
.tm-btn-group-vertical > .tm-btn:focus + .tm-btn.tm-btn-danger { 
  border-left-color: @btnDangerBorderColor e("\9");
  border-right-color: @btnDangerBorderColor e("\9");
  border-bottom-color: @btnDangerBorderColorBottom e("\9");
}
.tm-btn-group-vertical > .tm-btn:focus + .tm-btn.tm-btn-inverse { 
  border-left-color: @btnInverseBorderColor e("\9");
  border-right-color: @btnInverseBorderColor e("\9");
  border-bottom-color: @btnInverseBorderColorBottom e("\9");
}
//
// Alerts
// --------------------------------------------------


// Base styles
// -------------------------

.tm-alert {
  padding: @AlertPaddingTop (@baseLineHeight + @AlertPaddingLeft + @AlertPaddingRight) @AlertPaddingBottom (@baseLineHeight + @AlertPaddingLeft + @AlertPaddingRight);
  margin-bottom: @AlertMarginBottom;
  background-color: @warningBackground;
  background-image: url("@{warningIconPath}");
  background-position: (((@baseLineHeight - @AlertIconSize) / 2) + @AlertPaddingLeft) (((@baseLineHeight - @AlertIconSize) / 2) + @AlertPaddingTop);
  background-repeat: no-repeat;
  border: @AlertBorderWidth @AlertBorderStyle @warningBorder;
  .border-radius(@AlertRadiusTopLeft @AlertRadiusTopRight @AlertRadiusBottomLeft @AlertRadiusBottomRight);
  min-height: @AlertMinHeight;
  *position: relative;
}
.tm-alert {
//.tm-alert h5 {
  // Specified for the h5 to prevent conflicts of changing @headingsColor
  color: @textColor;
}

// Adjust close link position
.tm-alert .close {
  position: relative;
  *position: absolute;
  *font-weight: normal;
  font-weight: normal \9;
  top: 0;  
  right: -(@baseLineHeight + @AlertPaddingLeft + @AlertPaddingRight) + (((@baseLineHeight + @AlertPaddingLeft + @AlertPaddingRight) - @AlertCloseBtnWidth) / 2);
  *right: (((@baseLineHeight + @AlertPaddingLeft + @AlertPaddingRight) - @AlertCloseBtnWidth) / 2);
  *height: (@baseLineHeight + @AlertPaddingTop + @AlertPaddingBottom);
  line-height: @baseLineHeight;
  *line-height: (@baseLineHeight + @AlertPaddingTop + @AlertPaddingBottom);
}

// Alternate styles
// -------------------------

.tm-alert-success {
  background-color: @successBackground;
  background-image: url("@{successIconPath}");
  border-color: @successBorder;
  color: @textColor;
}

.tm-alert-danger,
.tm-alert-error {
  background-color: @errorBackground;
  background-image: url("@{errorIconPath}");
  border-color: @errorBorder;
  color: @textColor;
}

.tm-alert-info {
  background-color: @infoBackground;
  background-image: url("@{infoIconPath}"); 
  border-color: @infoBorder;
  color: @textColor;
}



// Block tm-alerts
// -------------------------

.tm-alert-block {
  padding-top: @AlertBlockTop;
  padding-bottom: @AlertBlockBottom;
  background-position: (((@baseLineHeight - @AlertIconSize) / 2) + @AlertPaddingLeft) (((@baseLineHeight - @AlertIconSize) / 2) + @AlertBlockTop); //@add;
}
.tm-alert-block .close {
  top: -(@AlertBlockTop - @AlertPaddingTop);
  *top: 0;
}
.tm-alert-block > p,
.tm-alert-block > ul {
  margin-bottom: 0;
}
.tm-alert-block p + p {
  margin-top: @AlertBlockParagraphGutter;
}

//
// Navs
// --------------------------------------------------


// BASE CLASS
// ----------
.tm-nav {
  margin-left: 0;
  margin-bottom: @baseLineHeight;
  list-style: none;
}

// Make links block level
.tm-nav > li > a {
  display: block;
}

.tm-nav > li > a:hover,
.tm-nav > li > a:focus {
  text-decoration: none;
  background-color: @grayLighter;
}

// Prevent IE8 from misplacing imgs
// See https://github.com/h5bp/html5-boilerplate/issues/984#issuecomment-3985989
.tm-nav > li > a > img {
  max-width: none;
}

// Redeclare pull classes because of specifity
.tm-nav > .pull-right {
  float: right;
}

// Nav headers (for dropdowns and lists)
.tm-nav-header {
  padding: 3px 15px;  
  color: @grayLight;  
  font-weight: bold;
  font-size: 11px;
  font-weight: bold;
  line-height: @baseLineHeight;  
  text-transform: uppercase; 
}

// Space them out when they follow another list item (link)
.tm-nav li + .tm-nav-header {
  margin-top: 9px;
}

// DISABLED STATES
// Gray out text
.tm-nav > .disabled > a {
  color: @grayLight;
}

// Nuke hover/focus effects
.tm-nav > .disabled > a:hover,
.tm-nav > .disabled > a:focus {
  text-decoration: none;
  background-color: transparent;
  cursor: default;
}

// NAV LIST
.tm-nav-list {
  margin: 0;
  > li {
    border-top: 1px @navListBorderColor solid;    
    > a {
      color: @navListColor;
      padding: 0 @navListPaddingLeft 0 @navListPaddingRight;
      line-height: @navListLineHeight;    
      &:hover {
        background: @navListBackgroundHover;
      }
    }
  }
  > li:first-child {
    border-top: none;
  }
  > .active {
    > a, > a:hover, > a:focus {
      background: @navListBackgroundActived;
      border-left: @navListBorderLeftWidthActived @navListBorderColorActived solid;
      padding-left: @navListPaddingLeft - @navListBorderLeftWidthActived;
      color: @navListColorActived;
      cursor: default;
    }
  }
}
.tm-nav-list [class^="icon-"],
.tm-nav-list [class*=" icon-"] {
  margin-right: 2px;
}
.tm-nav-list.tm-nav-nested-list {
  border: @navListNestedOutterBorderWidth solid @navListNestedOutterBorderColor;
  li {   
    border-top: @navListNestedListBorderWidth @navListNestedListBorderColor solid;
    a {
      padding: 0 (@navListPaddingLeft - @navListNestedOutterBorderWidth) 0 (@navListPaddingRight - @navListNestedOutterBorderWidth);
    }
  }
  > li {
    > a[data-toggle="tm-nav-nested-list"],
    > a[data-toggle="tm-nav-nested-list"]:hover,
    > a[data-toggle="tm-nav-nested-list"]:focus {
      padding: 0 (@navListPaddingLeft - @navListNestedOutterBorderWidth) 0 (@navListPaddingRight - @navListNestedOutterBorderWidth);
      background: @navListNestedListParentBackground;
      font-weight: bold;
      color: @navListColor;
      cursor: pointer;
      .caret {
        float: right;
        margin-top: (@navListLineHeight - @navListNestedListCaretWidth) / 2;
        *margin-top: -(((@navListLineHeight - @navListNestedListCaretWidth) / 2) + @navListNestedListCaretWidth);
        *margin-right: @navListPaddingRight - @navListNestedOutterBorderWidth;        
        border-top: @navListNestedListCaretWidth solid @navListNestedListCaretColor;        
        border-left: @navListNestedListCaretWidth solid transparent;        
        border-right: @navListNestedListCaretWidth solid transparent;
        position: relative;        
        &:after {
          position: absolute;
          content: '';
          width: 0;
          height: 0;
          bottom: @navListNestedListCaretArrowWidth;
          left: -(@navListNestedListCaretWidth);
          border-top: @navListNestedListCaretWidth solid @navListNestedListParentBackground;
          border-left: @navListNestedListCaretWidth solid transparent;
          border-right: @navListNestedListCaretWidth solid transparent;
        }
      }
    }
    > a[data-toggle="tm-nav-nested-list"]:hover {
      background: @navListNestedListParentBackgroundHover;
      .caret:after {
        border-top: @navListNestedListCaretWidth solid @navListNestedListParentBackgroundHover;
      }
    }
    > a[data-toggle="tm-nav-nested-list"].collapsed {
      .caret {
        border-left: @navListNestedListCaretWidth solid @navListNestedListCaretColor;
        border-top: @navListNestedListCaretWidth solid transparent;
        border-bottom: @navListNestedListCaretWidth solid transparent;        
        border-right: none;
        margin-top: ((@navListLineHeight - (@navListNestedListCaretWidth * 2)) / 2);
        
        margin-right: 2px;        
        
        *margin-top: -(((@navListLineHeight - (@navListNestedListCaretWidth * 2)) / 2) + (@navListNestedListCaretWidth * 2));
        
        *margin-right: (@navListPaddingRight - @navListNestedOutterBorderWidth) + 2;
        
        &:after {
          left: -(@navListNestedListCaretWidth + @navListNestedListCaretArrowWidth);
          top: -(@navListNestedListCaretWidth);
          border-left: @navListNestedListCaretWidth solid @navListNestedListParentBackground;
          border-top: @navListNestedListCaretWidth solid transparent;
          border-bottom: @navListNestedListCaretWidth solid transparent;
          border-right: none;
        }
      }
      
      &:hover {
        .caret:after {
          border-left: @navListNestedListCaretWidth solid @navListNestedListParentBackgroundHover;
        }
      }
    }
    .active {
      > a, > a:hover, > a:focus {
        padding-left: @navListPaddingLeft - @navListNestedOutterBorderWidth - @navListBorderLeftWidthActived;
      }
    }
    &:first-child {
      border-top: none;
    }
  }
}
/* IE9 hack*/
:root .tm-nav-list.tm-nav-nested-list {
  > li {
    > a[data-toggle="tm-nav-nested-list"],
    > a[data-toggle="tm-nav-nested-list"]:hover,
    > a[data-toggle="tm-nav-nested-list"]:focus {        
      .caret {
        border-top: @navListNestedListCaretWidth solid @navListNestedListCaretColor;
        border-left: (@navListNestedListCaretWidth - 1) solid transparent;
        border-right: (@navListNestedListCaretWidth - 1) solid transparent;
        &:after {
          left: -(@navListNestedListCaretWidth - 1);
          border-top: @navListNestedListCaretWidth solid @navListNestedListParentBackground;
          border-left: (@navListNestedListCaretWidth - 1) solid transparent;
          border-right: (@navListNestedListCaretWidth - 1) solid transparent;
        }
      }
    }
    > a[data-toggle="tm-nav-nested-list"]:hover {        
      .caret:after {
        border-top: @navListNestedListCaretWidth solid @navListNestedListParentBackgroundHover;
      }
    }
    > a[data-toggle="tm-nav-nested-list"].collapsed {
      .caret {
        border-left: @navListNestedListCaretWidth solid @navListNestedListCaretColor;
        border-top: (@navListNestedListCaretWidth - 1) solid transparent;
        border-bottom: (@navListNestedListCaretWidth - 1) solid transparent;
        border-right: none;
        margin-top: ((@navListLineHeight - ((@navListNestedListCaretWidth - 1) * 2)) / 2);
        &:after {
          left: -(@navListNestedListCaretWidth + @navListNestedListCaretArrowWidth);
          top: -(@navListNestedListCaretWidth - 1);
          border-left: @navListNestedListCaretWidth solid @navListNestedListParentBackground;
          border-top: (@navListNestedListCaretWidth - 1) solid transparent;
          border-bottom: (@navListNestedListCaretWidth - 1) solid transparent;
          border-right: none;
        }
      }
      &:hover {
        .caret:after {
          border-left: @navListNestedListCaretWidth solid @navListNestedListParentBackgroundHover;
        }
      }
    }
  }
}
/*Firefox*/
@-moz-document url-prefix() { 
  .tm-nav-list.tm-nav-nested-list {
    > li {
      > a[data-toggle="tm-nav-nested-list"],
      > a[data-toggle="tm-nav-nested-list"]:hover,
      > a[data-toggle="tm-nav-nested-list"]:focus {        
        .caret {
          border-top: @navListNestedListCaretWidth solid @navListNestedListCaretColor;
          border-left: (@navListNestedListCaretWidth - 1) solid transparent;
          border-right: (@navListNestedListCaretWidth - 1) solid transparent;          
          &:after {
            left: -(@navListNestedListCaretWidth - 1);
            border-top: @navListNestedListCaretWidth solid @navListNestedListParentBackground;
            border-left: (@navListNestedListCaretWidth - 1) solid transparent;
            border-right: (@navListNestedListCaretWidth - 1) solid transparent;
          }
        }
      }
      > a[data-toggle="tm-nav-nested-list"]:hover {        
        .caret:after {
          border-top: @navListNestedListCaretWidth solid @navListNestedListParentBackgroundHover;
        }
      }
      > a[data-toggle="tm-nav-nested-list"].collapsed {
        .caret {
          border-left: @navListNestedListCaretWidth solid @navListNestedListCaretColor;
          border-top: (@navListNestedListCaretWidth - 1) solid transparent;
          border-bottom: (@navListNestedListCaretWidth - 1) solid transparent;
          border-right: none;
          margin-top: ((@navListLineHeight - ((@navListNestedListCaretWidth - 1) * 2)) / 2);
          &:after {
            left: -(@navListNestedListCaretWidth + @navListNestedListCaretArrowWidth);
            top: -(@navListNestedListCaretWidth - 1);
            border-left: @navListNestedListCaretWidth solid @navListNestedListParentBackground;
            border-top: (@navListNestedListCaretWidth - 1) solid transparent;
            border-bottom: (@navListNestedListCaretWidth - 1) solid transparent;
            border-right: none;
          }          
        }
        &:hover {
          .caret:after {
            border-left: @navListNestedListCaretWidth solid @navListNestedListParentBackgroundHover;
          }
        }
      }
    }
  }
}
/*Chrome and Safari*/
@media screen and (-webkit-min-device-pixel-ratio:0) {
  .tm-nav-list.tm-nav-nested-list {
    > li {
      > a[data-toggle="tm-nav-nested-list"],
      > a[data-toggle="tm-nav-nested-list"]:hover,
      > a[data-toggle="tm-nav-nested-list"]:focus {        
        .caret {
          .transition-duration(.3s);
          border-top: @navListNestedListCaretWidth solid @navListNestedListCaretColor !important;
          border-left: (@navListNestedListCaretWidth - 1) solid transparent !important;
          border-right: (@navListNestedListCaretWidth - 1) solid transparent !important;        
          &:after {
            left: -(@navListNestedListCaretWidth - 1) !important;
            border-top: @navListNestedListCaretWidth solid @navListNestedListParentBackground !important;
            border-left: (@navListNestedListCaretWidth - 1) solid transparent !important;
            border-right: (@navListNestedListCaretWidth - 1) solid transparent!important;
          }
        }
      }
      > a[data-toggle="tm-nav-nested-list"]:hover {
        .caret:after {
          border-top: @navListNestedListCaretWidth solid @navListNestedListParentBackgroundHover !important;
        }
      }
      > a[data-toggle="tm-nav-nested-list"].collapsed {
        .caret {
          border-top: @navListNestedListCaretWidth solid @navListNestedListCaretColor !important;
          border-left: (@navListNestedListCaretWidth - 1) solid transparent !important;
          border-right: (@navListNestedListCaretWidth - 1) solid transparent !important;
          border-bottom: none !important;
          margin-top: ((@navListLineHeight - 5) / 2) !important;;
          margin-right: 0 !important;
          .rotate(-90deg);
          &:after {
            left: -(@navListNestedListCaretWidth - 1) !important;
            top: auto !important;
            border-top: @navListNestedListCaretWidth solid @navListNestedListParentBackground !important;
            border-left: (@navListNestedListCaretWidth - 1) solid transparent !important;
            border-right: (@navListNestedListCaretWidth - 1) solid transparent !important;
            border-bottom: none !important;
          }
        }
        &:hover {
          .caret:after {
            border-top: @navListNestedListCaretWidth solid @navListNestedListParentBackgroundHover !important;
            border-left: (@navListNestedListCaretWidth - 1) solid transparent !important;
          }
        }
      }
    }
  }
}


// TABS AND PILLS

// Common styles
.tm-nav-tabs,
.tm-nav-pills {
  .clearfix();
  margin-bottom: 0; //@add  
  *display: inline-block;
}

.tm-nav-tabs > li,
.tm-nav-pills > li {
  float: left;
	margin-right: @navTabsPillsMargin;
}

.tm-nav-tabs > li > a,
.tm-nav-pills > li > a {
  padding-right: @navTabsPillsPaddingRight;
  padding-left: @navTabsPillsPaddingLeft;
}


// TABS
// Give the tabs something to sit on
.tm-nav-tabs {
	margin: 0;
  border-bottom: 1px solid @navTabsBorder; //@org: border-bottom: 1px solid #ddd
  *display: inline-block;
}
// Tabs with cover
.tm-nav-tabs.cover {
  border: 1px solid @navTabsBorder;	
  #gradient > .vertical(@navTabsBackgroundHighlight, @navTabsBackground);
  padding: 0;  
	> li {
		margin-top: -1px;
		&:first-child {
			margin-left: -1px;
		}
	}
}

// Make the list-items overlay the bottom border
.tm-nav-tabs > li {
  margin-bottom: -1px;
}

// Actual tabs (as links)
.tm-nav-tabs > li > a {
  color: @navTabsTextColor; 
  padding-top: @navTabsPaddingTop;
  padding-bottom: @navTabsPaddingBottom;
  line-height: @navTabsLineHeiight;
  border: 1px solid @navTabsBorder;
  #gradient > .vertical(@navTabsBackgroundHighlight, @navTabsBackground);
  .border-radius(@navTabsBorderRadius @navTabsBorderRadius 0 0);
  &:hover,
  &:focus {
    color: @navTabsTextHover; 
		background-image: none;
		.reset-filter();
		background: @navTabsBackgroundHover;
  }
}


// Active state, and it's :hover/:focus to override normal :hover/:focus
.tm-nav-tabs > .active {
	border-top: @navTabsBorderWidthActive solid @navTabsBorderActive;
	position: relative;
}
.tm-nav-tabs > .active > a,
.tm-nav-tabs > .active > a:hover,
.tm-nav-tabs > .active > a:focus {
  color: @navTabsTextActive;
  font-weight: bold;
  background-image: none;
  .reset-filter();
  background-color: @bodyBackground;
	padding-top: @navTabsPaddingTop - 1;
	border-top: 0;
  border-bottom-color: transparent;
  cursor: default;
}

// Disabled state
.tm-nav-tabs > .disabled > a,
.tm-nav-tabs > .disabled > a:hover,
.tm-nav-tabs > .disabled > a:focus {
  color: @navTabsTextDisabled; 
  #gradient > .vertical(@navTabsBackgroundHighlightDisabled, @navTabsBackgroundDisabled); //@add
}

// PILLS
// Links rendered as pills
.tm-nav-pills {
  *display: inline-block;
}
.tm-nav-pills > li > a {
  line-height: @navPillsLineHeiight;
  padding-top: @navPillsPaddingTop;
  padding-bottom: @navPillsPaddingBottom;
  margin-top: @navPillsMarginTop;
  margin-bottom: @navPillsMarginBottom;
  .border-radius(@navPillsBorderRadius);
}

// Active state
.tm-nav-pills > .active > a,
.tm-nav-pills > .active > a:hover,
.tm-nav-pills > .active > a:focus {
  color: @navPillsTextActive;
  background-color: @navPillsBackgroundActive;
  font-weight: bold;
}

// STACKED NAV
// Stacked tabs and pills
.tm-nav-stacked > li {
  float: none;
}

.tm-nav-stacked > li > a {
  margin-left: 0;
}

// Tabs
.tm-nav-tabs.tm-nav-stacked {
  border-bottom: 0;
	> li {
		margin-right: 0;
		> a {
			border-bottom-color: @navTabsBorder;
		}
	}
}

.tm-nav-pills.tm-nav-stacked > li:last-child > a {
  margin-bottom: 1px; // decrease margin to match sizing of stacked tabs
}

// DROPDOWNS

.tm-nav-tabs .tm-dropdown-menu {
  .border-radius(0 0 @dropdownRadiusBottomRight @dropdownRadiusBottomLeft); // remove the top rounded corners here since there is a hard edge above the menu
  margin-top: -1px;
}

.tm-nav-pills .tm-dropdown-menu {
  .border-radius(@dropdownRadius); // make rounded corners match the pills
  margin-top: -1px;
}

// Default dropdown links
// Make carets use linkColor to start
.tm-nav .tm-dropdown-toggle .caret {
  border-width: 5px;
  border-top-color: @navTabsPillsCaretColor; //@org: border-top-color: @linkColor;
  border-bottom-color: @navTabsPillsCaretColor; //@org: border-bottom-color: @linkColor;
}

.tm-nav .tm-dropdown-toggle:hover .caret,
.tm-nav .tm-dropdown-toggle:focus .caret {
  border-top-color: @navTabsPillsCaretColorHover; 
  border-bottom-color: @navTabsPillsCaretColorHover;
}

//Disabled carets
.tm-nav .disabled .tm-dropdown-toggle .caret {
	border-top-color: @navTabsPillsCaretColorDisabled; 
  border-bottom-color: @navTabsPillsCaretColorDisabled;
}

// Active dropdown links
.tm-nav .active .tm-dropdown-toggle .caret {
  border-top-color: @navTabsPillsCaretColorActive;
  border-bottom-color: @navTabsPillsCaretColorActive;
}

//move down carets for tabs
.tm-nav-tabs .tm-dropdown-toggle .caret {
  margin-top: ((@navTabsLineHeiight / 2) - 2); 
}

//move down carets for pills
.tm-nav-pills .tm-dropdown-toggle .caret {
  margin-top: ((@navPillsLineHeiight / 2) - 2);
}

// Active:hover/:focus dropdown links
.tm-nav > .dropdown.active > a:hover,
.tm-nav > .dropdown.active > a:focus {
  cursor: pointer;
}

// Open dropdowns

.tm-nav-tabs .active.open .tm-dropdown-toggle {
  background-image: none;
  .reset-filter();
  background-color: @navTabsBackgroundHover; 
}

.tm-nav li.dropdown.open .caret,
.tm-nav li.dropdown.open.active .caret,
.tm-nav li.dropdown.open a:hover .caret,
.tm-nav li.dropdown.open a:focus .caret {
  border-top-color: @textColor;
  border-bottom-color: @textColor;
  .opacity(100);
}

// TABBABLE
// COMMON STYLES
// Clear any floats
.tm-tabbable {
  .clearfix();
}

// Show/hide tabbable areas
.tm-tab-content > .tm-tab-pane,
.tm-pill-content > .tm-pill-pane {
	margin-top: @navTabsContentMargin;
  display: none;
  &.cover {
    margin: 0;
    border: 1px solid @navTabsBorder;
    border-top: 0;
    padding: @navTabsContentMargin;
  }
	.tm-panel {
		margin-bottom: 0;
		+ .tm-panel {
			margin-top: 12px;
		}
	}
}


.tm-tab-content > .active,
.tm-pill-content > .active {
  display: block;
}
.tm-tabs-below,
.tm-tabs-right,
.tm-tabs-left {
	.tm-tab-pane {
		margin: 0;
    &.cover {
      border: 1px solid @navTabsBorder;
      padding: @navTabsContentMargin;
    }
	}
}

// Remove border on bottom, left, right
.tm-tabs-below > .tm-nav-tabs,
.tm-tabs-right > .tm-nav-tabs,
.tm-tabs-left > .tm-nav-tabs {
	border: 0;
	> .active {
		border: 0;
		> a {
			border: 1px solid @navTabsBorder;
			padding-top: @navTabsPaddingTop;
			padding-bottom: @navTabsPaddingBottom;
		}
	}
	&.cover {
		border: 1px solid @navTabsBorder;
		> li {
			&:first-child {
				margin-top: -1px;
			}
		}
	}
  > li {
    margin: 0;
  }
}

// BOTTOM
.tm-tabs-below > .tm-nav-tabs {
	border-top: 1px solid @navTabsBorder;
	&.cover {
		> li {
			margin-bottom: -1px;
		}
	}
}
.tm-tabs-below > .tm-nav-tabs > li {
	margin-right: @navTabsPillsMargin;
	margin-top: -1px;
}
.tm-tabs-below > .tm-nav-tabs > .active {
	border-bottom: @navTabsBorderWidthActive solid @navTabsBorderActive;
}
.tm-tabs-below > .tm-nav-tabs > .active > a,
.tm-tabs-below > .tm-nav-tabs > .active > a:hover,
.tm-tabs-below > .tm-nav-tabs > .active > a:focus {
	border-top-color: transparent;
	border-bottom: 0;
	padding-bottom: @navTabsPaddingBottom - 1;
}
.tm-tabs-below .tm-tab-pane {
	margin-bottom: @navTabsContentMargin;	
  &.cover {
    margin: 0;
    border-bottom: 0;
  }
}

// LEFT & RIGHT
// Common styles
.tm-tabs-left > .tm-nav-tabs > li,
.tm-tabs-right > .tm-nav-tabs > li {
  float: none;
  margin-bottom: @navTabsPillsMargin; 
  > a {
    *height: @baseLineHeight;
  } 
}

// Tabs on the left
.tm-tabs-left > .tm-nav-tabs {
  float: left;
  border-right: 1px solid @navTabsBorder; 
	&.cover {
		> li {
			margin-left: -1px;
		}
	}
}

.tm-tabs-left > .tm-nav-tabs > li {
  margin-right: -1px;
}

.tm-tabs-left > .tm-nav-tabs > .active {
	border-left: @navTabsBorderWidthActive solid @navTabsBorderActive;  
}

.tm-tabs-left > .tm-nav-tabs > .active > a,
.tm-tabs-left > .tm-nav-tabs > .active > a:hover,
.tm-tabs-left > .tm-nav-tabs > .active > a:focus {
	border-right-color: transparent;
	*border-right-color: #fff;
	border-left: 0;
	padding-left: @navTabsPillsPaddingLeft - 1;
}

.tm-tabs-left > .tm-tab-content {
	float: left;
	.tm-tab-pane {
		margin-left: @navTabsContentMargin;
    &.cover {
      margin: 0;
      border-left: 0;
    }
	}
}

// Tabs on the right
.tm-tabs-right > .tm-nav-tabs {
  float: right;
  border-left: 1px solid @navTabsBorder;	
	&.cover {
		> li {
			margin-right: -1px;
		}
	}
}

.tm-tabs-right > .tm-nav-tabs > li {
  margin-left: -1px;
}

.tm-tabs-right > .tm-nav-tabs .active {
	border-right: @navTabsBorderWidthActive solid @navTabsBorderActive;
}

.tm-tabs-right > .tm-nav-tabs .active > a,
.tm-tabs-right > .tm-nav-tabs .active > a:hover,
.tm-bs-right > .nav-tabs .active > a:focus {
	border-left-color: transparent;
	*border-left-color: #fff;
	border-right: 0;
  padding-right: @navTabsPillsPaddingRight - 1;
}

.tm-tabs-right > .tm-tab-content {
  border-width: 1px 0 1px 1px;
  float: right;
  .tm-tab-pane {
    margin-right: @navTabsContentMargin;
    &.cover {
      margin: 0;
      border-right: 0;
    }
  }
}
//
// Navbars (Redux)
// --------------------------------------------------
// COMMON STYLES
// -------------
// Base class and wrapper
.tm-navbar{
  overflow: visible;
  margin-bottom: @baseLineHeight;
  // Fix for IE7's bad z-indexing so dropdowns don't appear below content that follows the navbar
  position: relative;
  *z-index: 2;  
  
  // Banner bar of navBar
  .tm-nav-banner {    
    background: @white;
    .clearfix();
    min-height: @navbarBannerHeight;
    padding: 0 @navbarPaddingLeft 0 @navbarPaddingRight;
    position: relative;    
    .tm-brand {
      cursor: default;
      > a {
        cursor: pointer;			
      }
      img {
        margin-top: ((@navbarBannerHeight - @navbarBannerLogoHeight) / 2)
      }      
      img + h4 {
        margin-top: ((@navbarBannerHeight - @navbarBannerProductNameLineHeight) / 2);
        margin-bottom: 0;
        margin-left: 10px;
        padding-left: 10px;
        line-height: @navbarBannerProductNameLineHeight;
        border-left: 1px solid #bcbcbc;
        white-space: nowrap;
      }
      img + h4.no-divider{
        margin-left: 6px;
        border-left: 0;
        padding-left: 0;
      }
      img, img + h4 {
        float: left;
        cursor: pointer;        
      }
    }
  }  
    
  // Inner for background effects
  // Gradient is applied to its own element because overflow visible is not honored by IE when filter is present
  .tm-navbar-inner {    
    #gradient > .vertical(@navbarBackgroundHighlight, @navbarBackground);    
    padding: 0 @navbarPaddingLeft 0 @navbarPaddingRight;
    border: 1px solid @navbarBorderTop;
    .border-radius(@borderRadius);
    //.box-shadow(~"0 4px 12px rgba(0,0,0,.3)"); //@org: .box-shadow(0 1px 4px rgba(0,0,0,.065));
    //.box-shadow(~"0 2px 12px rgba(0,0,0,.2)");
    // Prevent floats from breaking the navbar
    .clearfix();
  }
  
  
  .tm-nav-banner + .tm-navbar-inner {
    .border-radius(0);
    border-width: 1px 0 1px;
    border-bottom-color: @navbarBorderBottom;    
  }
  
    
  // Set width to auto for default container
  // We then reset it for fixed navbars in the #gridSystem mixin
  .tm-container {
    width: auto;
    cursor: default;
  }  
  .tm-container-fluid {
    cursor: default;
  }
  
  
  // Brand: website or project name
  // -------------------------
  .tm-brand, .tm-brand a {
    &:hover, &:focus {
      text-decoration: none;
    }    
  }
  
  .tm-navbar-inner  {
    .tm-brand {
      padding: 0;
      float: left;      
      float: none e("\9");
      *float: left;
      &:hover, &:focus {
        text-decoration: none;
      }
      img, H5 {
        margin: ((@navbarHeight - @navbarInnerBrandHeight) / 2) @navbarLinkPadding ((@navbarHeight - @navbarInnerBrandHeight) / 2) 0;       
      }
      img {
        float: left;        
      }
      H5 {
        float: left;
        color: @navbarBrandColor;        
        line-height: @navbarInnerBrandHeight;   
        margin-top: ((@navbarHeight - @navbarInnerBrandHeight) / 2);
        margin-bottom: ((@navbarHeight - @navbarInnerBrandHeight) / 2);
        white-space: nowrap;
      }
      img + H5 {
        margin-left: -10px;
      }
      &.pull-right {
        float: right;
        img {
          margin: ((@navbarHeight - @navbarInnerBrandHeight) / 2) 0 ((@navbarHeight - @navbarInnerBrandHeight) / 2) 15px;
        }
        h5 {
          margin: ((@navbarHeight - @navbarInnerBrandHeight) / 2) 0 ((@navbarHeight - @navbarInnerBrandHeight) / 2) 5px; 
        }
      }
    }
  }  
  
  //Disappear inner brand if there is a upside banner.
  .tm-nav-banner + .tm-navbar-inner .tm-brand {
    display: none;
    H5 {
      display: none;
    }    
  } 
  // Override the default collapsed state
  .tm-nav-collapse.collapse {    
    height: auto;
    overflow: visible;
    //float: left \9;
  }
  
  
  
  // Plain text in topbar
  // -------------------------
  .tm-navbar-text {
    margin-bottom: 0;
    line-height: @navbarHeight;
    color: @navbarText;
  }
  
  
  
  // Janky solution for now to account for links outside the .tm-nav
  // -------------------------
  .tm-navbar-links {
    list-style: none;
    margin: 0;
    margin-top: ((@navbarBannerHeight - @baseLineHeight) / 2);  
    li {
      display: inline;
      margin-left: 20px;      
    }
  }
  
  // Dividers in navbar
  // ------------------------- 
  .tm-divider-vertical {
    height: @navbarHeight;    
    width: 1px;
    background: @navbarDividerVertical;
    .opacity(70);
  }
  
  
  
  // Buttons in navbar
  // -------------------------
  .tm-btn, .tm-btn-group {
    //.navbarVerticalAlign(28px); // Vertically center in navbar
  }
  
  .tm-btn-group .tm-btn,
  .input-prepend .tm-btn,
  .input-append .tm-btn,
  .input-prepend .tm-btn-group,
  .input-append .tm-btn-group {
    margin-top: 0; // then undo the margin here so we don't accidentally double it
  }
  
  
  
  // Navbar forms
  // -------------------------
  .tm-navbar-form {
    margin-bottom: 0; // remove default bottom margin
    .clearfix();
    
    input, select, .radio, .checkbox {
      .navbarFormVerticalAlign((@baseLineHeight + @inputVerticalPadding + @inputVerticalPadding + 2)); // Vertically center in navbar- 4: padding top/bottom, 2: border top/bottom.      
    }
    
    input, select, .tm-btn {
      display: inline-block;
      //margin-bottom: 0;
    }    
    
    .input-append, .input-prepend {
      //margin-top: 5px;
      white-space: nowrap; // preven two  items from separating within a .tm-navbar-form that has .pull-left
      
    }
  }
  
  
  
  // Navbar search
  // -------------------------
  .tm-navbar-search {
    position: relative;
    float: left;    
    .tm-search-query {
      .navbarFormVerticalAlign((@baseLineHeight + @inputVerticalPadding + @inputVerticalPadding + 2)); // Vertically center in navbar- 4: padding top/bottom, 2: border top/bottom. 
      #font > .sans-serif(12px, normal, 1);
      .border-radius(15px); // redeclare because of specificity of the type attribute
    }
  }
  
  
  
  // Navbar Optional display variations   
  &.tm-navbar-static-top, &.tm-navbar-fixed-top, &.tm-navbar-fixed-bottom {
    .tm-nav-banner {
      padding: 0;      
    }
    .tm-navbar-inner {
      padding: 0;
      border-width: 1px 0 1px;
      border-bottom-color: @navbarBorderBottom;
      .border-radius(0);
    }    
  }    
  
  
  // Static navbar
  // -------------------------
  &.tm-navbar-static-top {
    position: static;
    margin-bottom: 0; // remove margin for default navbar
  }
  
  
  // Fixed navbar
  // -------------------------
  // Shared (top/bottom) styles
  &.tm-navbar-fixed-top, &.tm-navbar-fixed-bottom {
    position: fixed;
    right: 0;
    left: 0;
    z-index: @zindexFixedNavbar;
    margin-bottom: 0; // remove margin for default navbar
	.box-shadow(~"0 2px 12px rgba(0,0,0,.2)");
  } 
  
  
  // Fixed to top
  &.tm-navbar-fixed-top {
    top: 0;
  }
  
  
  // Fixed to bottom
  &.tm-navbar-fixed-bottom {
    bottom: 0;
    .tm-navbar-inner {
      .box-shadow(~"0 -4px 12px rgba(0,0,0,.3)"); //@org: .box-shadow(~"0 -1px 10px rgba(0,0,0,.1)");
    }
  }
  
  
  // Static Fixed to top
  &.tm-navbar-fixed-top.static {
    .tm-nav-banner {
      display: none;
    }
    .tm-nav-banner + .tm-navbar-inner .tm-brand {
      display: block;
    }
  }  
  
  
  
  // NAVIGATION
  // ----------
  
  .tm-nav {
    position: relative;
    left: 0;
    display: block;
    float: left;
    margin: 0 10px 0 0;    
    
    &.pull-right {
      float: right; // redeclare due to specificity
      margin-right: 0; // remove margin on float right tm-nav
    }    
    
    > li {
      float: left;
      *min-height: @navbarHeight;
      // Links
      > a {        
        float: none;
        // Vertically center the text given @navbarHeight
        padding: ((@navbarHeight - @baseLineHeight) / 2) @navbarLinkPadding ((@navbarHeight - @baseLineHeight) / 2);
        color: @navbarLinkColor;
        text-decoration: none;
        *min-height: @baseLineHeight;        
        font-weight: bold;
        font-size: @navbarTextSize;
        -webkit-font-smoothing: antialiased;        
        font-smooth:always;
      }
      
      
      // Hover/focus
      > a:focus, > a:hover {
        background-color: @navbarLinkBackgroundHover; // "transparent" is default to differentiate :hover/:focus from .active
        color: @navbarLinkColorHover;
        text-decoration: none;
      }
      
      
      // Active tm-nav items
      &.active > a, &.active > a:hover, &.active > a:focus {
        padding: (((@navbarHeight - @baseLineHeight) / 2) - 1) (@navbarLinkPadding - 1) (((@navbarHeight - @baseLineHeight) / 2) - 1);
        color: @navbarLinkColorActive;
        text-decoration: none;
        border: 1px solid @navbarLinkBorderActive;
        background-color: @navbarLinkBackgroundActive;
        //#gradient > .vertical(@navbarLinkBackgroundActive, @navbarLinkBackgroundActiveHighlight);
      }
      
      
      
      
      // Dropdown menus
      // --------------
      // Menu position and menu carets      
      
      // Caret should match text color on hover/focus
      &.dropup, &.dropdown {
        *position: relative;
      }
      
      &.dropdown > a:hover .caret,
      &.dropdown > a:focus .caret {
        border-top-color: @navbarLinkColorHover;
        border-bottom-color: @navbarLinkColorHover;
      }
      
      &.dropdown > .tm-dropdown-toggle .caret {
        border-top-color: @navbarLinkColor;
        border-bottom-color: @navbarLinkColor;
      }
      
      .tm-dropdown-toggle .caret {
        margin-top: (@baseLineHeight - 5) / 2;
      }
      
      // Remove background color from open dropdown
      &.dropdown.open,
      &.dropdown.active,
      &.dropdown.open.active {
        > .tm-dropdown-toggle {
          #gradient > .vertical(@navbarLinkBackgroundActive, @navbarLinkBackgroundActiveHighlight);
          color: @navbarLinkColorActive;
          .caret {
            border-top-color: @navbarLinkColorActive;
            border-bottom-color: @navbarLinkColorActive;
          }
        }
      }
      &.dropdown.open,
      &.dropdown.open.active {
        > .tm-dropdown-menu {
          //display: block;
          display: block;
          height: auto;
          border-top: 1px solid @navbarBorderTop;
          border-width: 1px;
          padding: 5px 0; 
        }
      }      
      > .tm-dropdown-menu {
        //overflow: hidden;
        padding: 0;
        border-width: 0;
        //display: block;
        //display: none \9;
        border-width: 1 \9;
        padding: 5px 0 \9;
        //overflow: visible \9;
        .border-top-left-radius(0);
        .border-top-right-radius(0);        
      }
     
    }
  }
  
  &.tm-navbar-static-top, &.tm-navbar-fixed-top, &.tm-navbar-fixed-bottom {
    .tm-nav {
      > li {
        &.dropdown.open, 
        &.dropdown.active,
        &.dropdown.open.active {
          > .tm-dropdown-menu {
            border-top: 1px solid @navbarBorderBottom;
          }
        }
      }
    }
  }

  // Navbar button for toggling navbar items in responsive layouts
  // These definitions need to come after '.tm-navbar .tm-btn'  
  .tm-btn-navbar {
    display: none;
    float: right;
    min-width: 0;
    padding: @navbarCollapseBtnPadding;
    margin-left: @navbarCollapseBtnMarginLeft;
    margin-right: @navbarCollapseBtnMarginRight;
    
    //.box-shadow(~"inset 0 1px 0 rgba(255,255,255,.1), 0 1px 0 rgba(255,255,255,.075)");
    .buttonBackground(darken(@navbarBackgroundHighlight, 5%), darken(@navbarBackground, 5%), darken(@navbarBackground, 10%));
    .icon-bar {
      display: block;
      width: 16px;
      height: 2px;
      background-color: #f5f5f5;
      margin-top: 0;
      .border-radius(1px);
      .box-shadow(0 1px 0 rgba(0,0,0,.25));
    }
    .icon-bar + .icon-bar {
      margin-top: 3px;
    }
    &:hover {
      background-color: @navbarLinkBackgroundHover;
      background-image: none;
      .reset-filter();
    }
    &.tm-btn:focus {
      .box-shadow(~"inset 0 1px 0 rgba(255,255,255,.3), 0 1px 2px rgba(0,0,0,.05)");
    }
  }
}

:root .tm-navbar { 
  .tm-nav-banner .tm-brand img + h4{
    letter-spacing: 0\9;
  }
}

@media screen and (-webkit-min-device-pixel-ratio:0){
  .tm-nav-banner .tm-brand img + h4{
    letter-spacing: -0.03em;;
  }
}
// Navigation in banner bar
.tm-nav-banner .tm-nav {
  margin: 0;
  float: right;
  > li {
    padding: 0 5px;
    line-height: 60px;
    > a{
      color: @linkColor;
      font-weight: normal;
      padding: 0;
      text-shadow: none;      
      &:focus {
        background: transparent;
        color: @linkColor;
      }
      &:hover {
        background: transparent;
        color: @linkColorHover;
        text-decoration: underline;
      }
    }
  }
  > .divider {
    padding: 0;
  }
}




// Dropdown arrow/caret  NavBar
// --------------------
.caret {
  display: inline-block;
  width: 0;
  height: 0;
  vertical-align: top;
  border-top:   4px solid @dropdownLinkColorHover;
  border-right: 4px solid transparent;
  border-left:  4px solid transparent;
  content: "";
}

// Place the caret
.dropdown .caret {
  margin-top: 8px;
  margin-left: 2px;
}


// Reset container width
// Required here as we reset the width earlier on and the grid mixins don't override early enough
.tm-navbar-static-top .tm-container,
.tm-navbar-fixed-top .tm-container,
.tm-navbar-fixed-bottom .tm-container {
  #grid > .core > .span(@gridColumns); 
}

//
// Breadcrumbs
// --------------------------------------------------


ul.tm-breadcrumb {
	margin: @breadcrumbMarginTop 0 @breadcrumbMarginBottom 0;
	padding: 0 0 @breadcrumbPaddingBottom 0;
	list-style: none;	
  line-height: normal;
  *height: @breadcrumbLineHeight;
  border-bottom: @breadcrumbBorderBottom;  
  > li {
    margin: 0;
		display: inline-block;
		.ie7-inline-block();    
    font-size: @breadcrumbFontSize;
    color: @breadcrumbLinkColor;
    line-height: @breadcrumbLineHeight;
		> a {
      color: @breadcrumbLinkColor;
			text-decoration: none;			
		}
		> a:hover {
			color: @breadcrumbHoverColor;
		}		
		&.active {
      color: @breadcrumbTargetLinkColor;
      > a {
        color: @breadcrumbTargetLinkColor;
      }
    }
    > .tm-divider {
			font-size: @breadcrumbArrowSize;
			color: @breadcrumbArrowColor;
      line-height: @breadcrumbLineHeight - 2;
			padding: 0 5px 0 8px;
      display: inline-block;
      .ie7-inline-block();    
		}
    &.icon-help {
      float: right;
      cursor: pointer;
      width: @breadcrumbHelpIconWidth;
      height: @breadcrumbHelpIconHeight;
      margin-top: ((@breadcrumbLineHeight - @breadcrumbHelpIconHeight) / 2);      
      *margin-top:  -(@breadcrumbHelpIconHeight + ((@breadcrumbLineHeight - @breadcrumbHelpIconHeight) / 2) + 1);
      *margin-right: 0px;
      background: url(../img/icon-help.png) no-repeat center top;
    }
    &.icon-help:hover {
      background-position: center bottom;
    }		
	}
}

//
// Pagination (multiple pages)
// --------------------------------------------------

// Space out pagination from surrounding content
.tm-pagination {
	margin: @baseLineHeight 0;
}
.tm-pagination ul {
	// Allow for text-based alignment
	display: inline-block;
	.ie7-inline-block();
	
	// Reset default ul styles
	margin-left: 0;
	margin-bottom: 0;
	
	// Visuals
	.border-radius(@paginationBorderRadius);
}

.tm-pagination ul > li {
	display: inline;	// Remove list-style and block-level defaults
}

// Link
.tm-pagination ul > li > a,
.tm-pagination ul > li > span {
	float: left; // Collapse white-space
	border: 1px solid @paginationBorder;
	border-left-width: 0;	
	// Gradient background color
	//#gradient > .vertical(@paginationLinkBackgroundStart, @paginationLinkBackgroundEnd);
  background: @paginationLinkBackgroundStart;
	padding: 2px;
	min-width: 30px;
	line-height: @paginationLineHeight;
	text-align: center;
	text-decoration: none;
}
.tm-pagination ul > li:first-child > a {
	border-left-width: 1px;
	.border-left-radius(@paginationBorderRadius);
}
.tm-pagination ul > li:last-child > a {
	.border-right-radius(@paginationBorderRadius);
}

// Ellipsis (...)
.tm-pagination ul > li.ellipsis > span {
	border: none;	
	//#gradient > .vertical(@paginationEllipsisBackgroundStart, @paginationEllipsisBackgroundEnd);
	color: @paginationEllipsisColor;
}
.tm-pagination ul > li.ellipsis + li.next-page > a{
  border: 1px solid @paginationBorder;
  .border-top-left-radius(0);
  .border-bottom-left-radius(0);
}

// Jump to previous (<) or next (>) page
.tm-pagination ul > li.prev-page > a,
.tm-pagination ul > li.next-page > a {
  font-size: 14px;
  padding-bottom: 4px;
  line-height: 18px;
}
:root .tm-pagination ul {
  > li.prev-page > a,
  > li.next-page > a {
    padding-bottom: 3px\9;
    line-height: 19px\9;
  }
}

// Hover
.tm-pagination ul > li > a:hover {
	#gradient > .vertical(@paginationHoverBackgroundStart, @paginationHoverBackgroundEnd);
	//box-shadow: @paginationHoverBoxShadow;
	color: @paginationHoverColor;
}

// Active
.tm-pagination ul > li.active > a, 
.tm-pagination ul > li.active > span {
	#gradient > .vertical(@paginationActiveBackgroundStart, @paginationActiveBackgroundEnd);
	font-weight: @paginationActiveFontWeight;
	color: @paginationActiveColor;
	cursor: default;
}
.tm-pagination ul > li.active > a:hover {
	#gradient > .vertical(@paginationActiveBackgroundStart, @paginationActiveBackgroundEnd);
	//box-shadow: none;
}

// Disabled
.tm-pagination ul > li.disabled > a,
.tm-pagination ul > li.disabled > span {
	#gradient > .vertical(@paginationDisabledBackgroundStart, @paginationDisabledBackgroundEnd);
	color: @paginationDisabledColor;
	cursor: default;
}
.tm-pagination ul > li.disabled > a:hover {
	#gradient > .vertical(@paginationDisabledBackgroundStart, @paginationDisabledBackgroundEnd);
	//box-shadow: none;
}



// Alignment
// --------------------------------------------------

.tm-pagination.tm-pagination-centered {
	text-align: center;
}
.tm-pagination.tm-pagination-right {
	text-align: right;
}



// Sizing
// --------------------------------------------------

// Large
.tm-pagination-large {
  ul > li > a:hover {
    //box-shadow: @paginationLargeHoverBoxShadow;
  }
  ul > li > a,
  ul > li > span {
    padding: @paddingLarge;
    font-size: @fontSizeLarge;   
  }
  ul > li:first-child > a,
  ul > li:first-child > span {
    .border-left-radius(@borderRadiusLarge);
    
  }
  ul > li:last-child > a,
  ul > li:last-child > span {
    .border-right-radius(@borderRadiusLarge);    
  }
  // Jump to previous (<) or next (>) page
  ul > li.prev-page > a,
  ul > li.next-page > a {
    font-size: 22px;
    padding: @paddingLarge;
    padding-top: @paddingLarge - 1;
    padding-bottom: @paddingLarge + 1;
    line-height: 20px;    
  }
}

:root .tm-pagination-large {
  ul > li.prev-page > a,
  ul > li.next-page > a {
    padding: @paddingLarge;
    padding-top: @paddingLarge - 1;
    padding-bottom: @paddingLarge + 1;
    line-height: 20px\9;
  }
}

// Small
.tm-pagination-small {
  ul > li:first-child > a,
  ul > li:first-child > span {
    .border-left-radius(@borderRadiusSmall);   
  }
  ul > li:last-child > a,
  ul > li:last-child > span {
    .border-right-radius(@borderRadiusSmall);
  }
}

// Small
.tm-pagination-small {
  ul > li > a,
  ul > li > span {
    padding: @paddingSmall;
    font-size: @fontSizeSmall;
    line-height: 16px;
    min-width: 16px;
  }
  // Jump to previous (<) or next (>) page
  ul > li.prev-page > a,
  ul > li.next-page > a {    
    font-size: 14px;
    padding: @paddingSmall;
    padding-bottom: @paddingSmall + 2;
    line-height: 14px;    
  }
}
:root .tm-pagination-small {
  ul > li.prev-page > a,
  ul > li.next-page > a {
    padding: @paddingSmall;
    padding-bottom: @paddingSmall + 1;
    line-height: 15px;    
  }
}



// Pagination within a table
// --------------------------------------------------
.tm-pagination.tm-table-pagination {
	cursor: default;
	margin: 0;
	
	ul {
		.box-shadow(none);
	}
	
	ul > li {
		-webkit-touch-callout: none;
		-webkit-user-select: none;
		 -khtml-user-select: none;
		   -moz-user-select: none;
		    -ms-user-select: none;
		        user-select: none;
		vertical-align: middle;
		vertical-align: baseline\9;
		padding: 0;
		margin: 0 3px;
		*float: left;
		*display: block;	// IE7 doesn't support :before method
		*zoom: 1;
		
		// Link & Text
		> a, 
		> span {
			float: none;
			margin: 0 3px;
			border: 0;
			background-image: none;
			background: transparent;
			padding: 0;
			width: auto;
			color: @textColor;
			cursor: default;
		}
		
		// Input & Selector
		> input, 
		> select {
			height: @baseLineHeight - 2;
			width: auto;
			padding: 0;
			margin: 0 5px;
			vertical-align: top;
			*vertical-align: middle;
			color: @textColor;
		}
		> input {
			width: 25px;
			padding-left: 2px;
			line-height: @baseLineHeight - 1;
		}
		> select {
			height: @baseLineHeight;
			line-height: @baseLineHeight;
			cursor: default;
		}
		
		// Vertical divider
		&.tm-divider-vertical {
			*height: 14px;
			border-left:  1px solid @grayLight;
			border-right: 1px solid @white;
			margin: 0;
			*margin: 3px 4px 0;
		}
		
		// Input & Select page
		&.input-page {
			margin-right: 1px;
			*margin-left: 4px;
			*margin-right: 2px;
		}
		&.select-page {
			margin-left: 4px;
			*margin-left: 0;
      white-space: nowrap;
		}
		
		// To first, previous, next or last page
		&.first-page, 
		&.prev-page, 
		&.next-page, 
		&.last-page {
			cursor: pointer; 
			*height: 9px; 
			*margin: 6px 5px 0;
			> a, 
			> span {
				content: " ";
				padding: 0;
				margin: 0;
				margin-top: -1px;
				display: inline-block;
				*display: block;
				width: 0;
				min-width: 0;
				height: 0;
				border-color: transparent;
				border-style: solid;
				cursor: pointer;
				vertical-align: middle;
				vertical-align: baseline\9;
			}
			&.disabled {
				cursor: default;
				> a, 
				> span {
					cursor: default;
				}
			}
		}
		&.first-page, 
		&.prev-page {
			> a, 
			> span {
				border-width: 5px 5px 5px 0;   
				border-right-color: @paginationBorder;
			}
			&:hover {
				> a, 
				> span {
					border-right-color: @grayDark;
				}
			}
			&.disabled {
				> a, 
				> span {
					border-right-color: @paginationBorderDisabled;
				}
			}
		}
		&.last-page, 
		&.next-page {
			> a, 
			> span {
				border-width: 5px 0 5px 5px;
				border-left-color: @paginationBorder;
			}
			&:hover {
				> a, 
				> span {
					border-left-color: @grayDark;
				}
			}
			&.disabled {
				> a, 
				> span {
					border-left-color: @paginationBorderDisabled;
				}
			}
		}
		&.first-page > a:before, 
		&.first-page > span:before, 
		&.last-page > a:after, 
		&.last-page > span:after {
			content: " ";
			display: block;
			padding: 0;
			margin: 0;
			margin-top: -5px;
			height: 10px;
			height: 11px\9;
			width: 0;
		}
		&.first-page {
			margin-left: 12px;
			*margin-left: 5px;
			*margin-right: 4px;
			*border-left: 2px solid @paginationBorder;	// IE7 doesn't support :before method
			*padding-left: 1px;
			> a:before, 
			> span:before {   
				margin-left: -3px;
				border-left: 2px solid @paginationBorder;
			}
			&:hover {
				*border-left-color: @grayDark;	// IE7 doesn't support :before method
				> a:before, 
				> span:before {
					border-left-color: @grayDark;
				}
			}
			&.disabled {
				*border-left-color: @paginationBorderDisabled;	// IE7 doesn't support :before method
				> a:before, > span:before {
					border-left: 2px solid @paginationBorderDisabled;				
				}
			}
		}
		&.last-page {
			margin-right: 10px;
			*margin-right: 6px;
			*margin-left: 4px;
			*border-right: 2px solid @paginationBorder;
			*padding-right: 1px;
			> a:after, > span:after {
				margin-left: 1px;
				border-right: 2px solid @paginationBorder;
			}
			&:hover {
				*border-right-color: @grayDark;	// IE7 doesn't support :before method
				> a:after, > span:after {
					border-right-color: @grayDark;
				}
			}
			&.disabled {
				*border-right-color: @paginationBorderDisabled;	// IE7 doesn't support :before method
				> a:after, > span:after {
					border-right: 2px solid @paginationBorderDisabled;
				}
			}
		}
	}
	
	// Hover
	ul > li > a:hover {
		background-color: transparent;
	}
}

@media all and (min-width:0) {	// IE9 can ready \9 hack method
	.tm-pagination.tm-table-pagination {
		ul > li {
			&.first-page {
				> a:before, 
				> span:before {
					height: 10px;
				}
			}
			&.last-page {
				> a:after, 
				> span:after {
					height: 10px;
				}
			}
		}
	}
}



// Sizing
// --------------------------------------------------

// Large
.tm-pagination-large {
	&.tm-pagination.tm-table-pagination {
		> ul > li {
			*vertical-align: baseline;
			line-height: @lineHeightLarge;
			margin: 0 4px;
			*margin: 0 5px;
			padding: 0;
			> a, 
			> span {
				margin: 0 4px;    
			}
			&.tm-divider-vertical {
				margin: 0;
				*margin: 5px 2px 0;
			}
			&.input-page, 
			&.select-page {       
				font-size: @fontSizeLarge;
				line-height: @lineHeightLarge - 1;
			}
			&.input-page {
				margin-right: 1px;
				*margin-right: 2px;
				*margin-left: 6px;
			}
			&.select-page {
				margin-left: 6px;
				*margin-left: 5px;
			}
			> input, 
			> select {
				height: @lineHeightLarge - 2;
				*height: @lineHeightLarge - 4;
				font-size: @fontSizeLarge;
				line-height: @lineHeightLarge - 3;
			}
			> select {
				height: @lineHeightLarge;
				line-height: @lineHeightLarge - 3;
				*margin-top: 1px;
			}      
			&.first-page, 
			&.prev-page, 
			&.next-page, 
			&.last-page {
				*height: 11px;    
				*margin: 6px 5px 0;
				> a, > span {      
					margin-top: -3px;
					*margin-top: -1px;
					padding: 0;
					margin: 0;
				}
			}
			&.first-page, 
			&.prev-page {
				> a, 
				> span {
					border-width: 6px 6px 6px 0;
				}
			}
			&.last-page, 
			&.next-page {
				> a, 
				> span {       
					border-width: 6px 0 6px 6px;
				}
			}  
			&.first-page {
				margin-left: 14px;
				*margin-left: 10px;
				*padding-left: 1px;
			}
			&.last-page {
				margin-right: 12px;
				*margin-right: 10px;
			}
		}
	}  
}

@media all and (min-width:0) { // IE9 can ready \9 hack method
	.tm-pagination-large {
		&.tm-pagination.tm-table-pagination {
			> ul > li {
				&.first-page, 
				&.prev-page, 
				&.next-page, 
				&.last-page {
					> a, 
					> span {
						vertical-align: middle\9;
						margin-top: -3px;
					}
				}
				&.first-page {
					margin-right: 2px\9;
				}
			}
		}
	}
}
//
// Pager pagination
// --------------------------------------------------


.pager {
  margin: @baseLineHeight 0;
  list-style: none;
  text-align: center;
  .clearfix();
}
.pager li {
  display: inline;
}
.pager li > a,
.pager li > span {
  display: inline-block;
  padding: 5px 14px;
  background-color: #fff;
  border: 1px solid #ddd;
  .border-radius(15px);
}
.pager li > a:hover,
.pager li > a:focus {
  text-decoration: none;
  background-color: #f5f5f5;
}
.pager .next > a,
.pager .next > span {
  float: right;
}
.pager .previous > a,
.pager .previous > span {
  float: left;
}
.pager .disabled > a,
.pager .disabled > a:hover,
.pager .disabled > a:focus,
.pager .disabled > span {
  color: @grayLight;
  background-color: #fff;
  cursor: default;
}
//
// Modals
// --------------------------------------------------------

// Backdrop (Overlay)
.modal-backdrop {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: @zindexModalBackdrop;
	background-color: @modalBackdropBackground;
	
	// Fade for backdrop
	&.fade {
		opacity: 0;
    .transition(opacity .2s linear);
	}
}
.modal-backdrop,
.modal-backdrop.fade.in {
	.opacity(@modalBackdropOpacity);
}

// Wrapper
.tm-modal {
	position: fixed;
	top: 10%;
	left: 50%;
	z-index: @zindexModal;
	width: @modalWidth;
	margin-left: -(@modalWidth / 2);	
  
	/*border: @modalWrapperBorder;
	*border: 8px solid @modalWrapperBorder;*/
  
	background-color: @modalWrapperBackgroundColor;
	.background-clip(padding-box);
	padding: 0 1px 1px;
  .box-shadow(0 2px 8px rgba(0, 0, 0, 0.3));
	// Remove focus outline from opened modal
	outline: none;

	&.fade {
		.transition(e('opacity .2s linear, top .2s ease-out'));
		top: -25%;
	}
	&.fade.in {
		top: 10%;
	}
}

// Header
.tm-modal-header {
  *height: 22px;
	margin: 0 -1px;
	/*border-top: @modalHeaderBorderTop;*/
	background-color: @modalHeaderBackgroundColor;
	padding: 5px 17px;
	
	// Close icon
	.close {		
    width: 16px;
		height: 16px;
    float: right;
		.opacity(100);
		text-shadow: none;
		color: @grayLight;
		font-size: 30px;
		font-weight: normal;
    *height: 34px;
    height: 22px\9;
    margin-top: 2px;
    *margin-top: -7px;
    *line-height: 34px;
    line-height: 22px\9;
		&:hover, 
		&:focus {
			color: @white;
		}
	}
	
	// Heading
	h6 {
    *float: left;
		margin: 0;		
		color: @modalHeaderTextColor;
	}
}

// Body
.tm-modal-body {
	position: relative;
	background-color: @modalBodyBackgroundColor;
	padding: @modalBodyPadding;
	color:@modalBodyTextColor;
	overflow-y: auto;
  *clear: both;
}
// Remove bottom margin if need be
.tm-modal-form {
	margin-bottom: 0;
}

// Footer
.tm-modal-footer {
	margin-top: 0;
	border-top: @modalFooterBorderTop;
	background-color: @modalFooterBackgroundColor;
	padding: 7px 15px;
	text-align: right;	// right align buttons
	.clearfix();	// clear it in case folks use .pull-* classes on buttons
}



// Loading Message
// --------------------------

.tm-modal.tm-modal-loading {
	padding: 1px;
	width: 210px;
	margin-left: -105px;
	height: 140px;
	.tm-modal-body {
		background: @modalLoadingBackground;
		padding: 0;
		height: 100%;
		p {
			margin-top: 80px;
			text-align: center;
			font-size: @fontSize14;
			color: @modalLoadingTextColor;
		}
	}
}



// Notification Messages
// --------------------------

.tm-modal.tm-notification {
	width: 414px;
	margin-left: -207px;
	.tm-modal-body {
		background-color: @modalNotificationBackgroundColor;
		background-repeat: no-repeat;
		background-position: @modalBodyPadding @modalBodyPadding;
		padding-left: (@modalNotificationIconSize + (@modalBodyPadding * 2));
		color: @modalNotificationTextColor;
		h5 {
			margin: 0 0 4px;
			line-height: 30px;
			font-weight: normal;
		}
		p {
			margin: 0;
			line-height: 16px;
		}
		p + p {
			margin: 8px 0 0;
		}
		
	}
	&.tm-notification-info {
		.tm-modal-body {
			background-image: url(@modalNotificationInfoIconPath);
		}
	}
	&.tm-notification-success {
		.tm-modal-body {
			background-image: url(@modalNotificationSuccessIconPath);
		}
	}
	&.tm-notification-warning {
		.tm-modal-body {
			background-image: url(@modalNotificationWarningIconPath);
		}
	}
	&.tm-notification-error {
		.tm-modal-body {
			background-image: url(@modalNotificationErrorIconPath);
		}
	}
}

//
// Dialog (jQuery UI Dialog)
// --------------------------------------------------------

// To override jQuery UI Dialog's smoothness theme styles

// Overlay
.ui-widget-overlay {
	background: @dialogOverlayBackground;
	background-color: @dialogOverlayBackgroundColor;
    opacity: @dialogOverlayOpacity;
}

// Wrapper
.ui-corner-all {
	.border-radius(@dialogWrapperBorderRadius);
}
.ui-widget-content {
	border: @dialogWrapperBorder;
	background: @dialogWrapperBackground;
	color: @dialogWrapperTextColor;
}
.ui-widget {
	font-family: @dialogWrapperFontFamily;
	font-size: @dialogWrapperFontSize;
}
.ui-dialog {
	padding: 0;
}

// Header
.ui-widget-header {
	border: @dialogHeaderBorder;
	border-top-width: 2px;
	border-top-color: #ed1c24;
	background: @dialogHeaderBackground;
	background-color: @dialogHeaderBackgroundColor;
	line-height: @baseLineHeight;
	font-weight: @dialogHeaderFontWeight; 
	color: @dialogHeaderTextColor;
}
.ui-dialog .ui-dialog-title {
	margin: 0;
	font-size: @dialogHeaderFontSize;
}
.ui-dialog .ui-dialog-titlebar {
    padding: 6px 16px 5px;
}

// Close Icon
.ui-dialog .ui-dialog-titlebar-close {
	right: 16px;
	margin: -8px 0 0;
	border: none;
	background: none;
	width: 16px;
	height: 16px;
}
.ui-state-default .ui-icon {
	background: transparent url("../img/icon-close.png") no-repeat 0 0;
}
.ui-state-hover .ui-icon, 
.ui-state-focus .ui-icon {
	background-position: 0 -16px;
}

// Content
.ui-dialog .ui-dialog-content {
	border: @dialogContentBorder;
	border-top-width: 0;
	border-bottom-width: 0;
	background: @dialogContentBackground;
	background-color: @dialogContentBackgroundColor;
	padding: 16px;
	color: @dialogContentTextColor;
}

// Footer (Button Pane)
.ui-dialog .ui-dialog-buttonpane {
	margin-top: 0;
	border: @dialogFooterBorder;
	border-top-color: #ccc;
	background: @dialogFooterBackground;
	background-color: @dialogFooterBackgroundColor;
	padding: 6px 15px;
}
.ui-dialog .ui-dialog-buttonpane button {
	margin: 0 0 0 8px;
}
.ui-dialog .ui-dialog-buttonpane button:first-child {
	margin-left: 0;
}

//
// Tooltips
// --------------------------------------------------


// Base class
.tooltip {
  position: absolute;
  z-index: @zindexTooltip;
  display: block;
  visibility: visible;
  font-size: @baseFontSize;
  line-height: @baseLineHeight;
  .opacity(0);
  &.in     { .opacity(100); }
  &.top    { margin-top:  -3px; padding: 5px 0 12px; }
  &.right  { margin-left: 10px; padding: 0 5px; }
  &.bottom { margin-top:   9px; padding: 5px 0; }
  &.left   { margin-left: -17px; padding: 0 5px; }
}

// Wrapper for the tooltip content
.tooltip-inner {
  max-width: 300px;
  padding: 5px 10px;
  color: @tooltipColor;
  text-align: left;
  text-decoration: none;
  background-color: @tooltipBackground;
  .box-shadow(0px 1px 3px 1px #bbb);
  .border-radius(@borderRadius);
}

// Arrows
.tooltip-arrow {
  position: absolute;
  width: 0;
  height: 0;
  border-color: transparent;
  border-style: solid;  
}
.tooltip {
  &.top .tooltip-arrow {
    bottom: 7px;
    left: 50%;
    margin-left: -@tooltipArrowWidth;
    border-width: @tooltipArrowWidth @tooltipArrowWidth 0;
    border-top-color: @tooltipArrowColor;
  }
  &.right .tooltip-arrow {
    top: 50%;
    left: 0;
    margin-top: -@tooltipArrowWidth;
    border-width: @tooltipArrowWidth @tooltipArrowWidth @tooltipArrowWidth 0;
    border-right-color: @tooltipArrowColor;
  }
  &.left .tooltip-arrow {
    top: 50%;
    right: 0;
    margin-top: -@tooltipArrowWidth;
    border-width: @tooltipArrowWidth 0 @tooltipArrowWidth @tooltipArrowWidth;
    border-left-color: @tooltipArrowColor;
  }
  &.bottom .tooltip-arrow {
    top: 0;
    left: 50%;
    margin-left: -@tooltipArrowWidth;
    border-width: 0 @tooltipArrowWidth @tooltipArrowWidth;
    border-bottom-color: @tooltipArrowColor;
  }
}

//
// Popovers
// --------------------------------------------------


.tm-popover {
  position: absolute;
  top: 0;
  left: 0;
  z-index: @zindexPopover;
  display: none;
  max-width: 276px;
  //padding: 1px;
  text-align: left; // Reset given new insertion method
  background-color: @popoverBackground;
  -webkit-background-clip: padding-box;
     -moz-background-clip: padding;
          background-clip: padding-box;
  /*border: 1px solid #ccc;
  border: 1px solid rgba(0,0,0,.2);*/
  border: @popoverBorder;
  .border-radius(@popoverRadius);
  .box-shadow(0 2px 6px rgba(60, 60, 60, .3));

  // Overrides for proper insertion
  white-space: normal;

  // Offset the popover to account for the popover arrow
  &.top     { margin-top: -10px; }
  &.right   { margin-left: 10px; }
  &.bottom  { margin-top: 10px; }
  &.left    { margin-left: -10px; }
}

.tm-popover-title {
  margin: 0; // reset heading margin  
  padding: @popoverTitlePaddingVertical @popoverTitlePaddingHorizontal;
  font-size: @popoverTitleFontSize;
  font-weight: normal;
  line-height: @popoverTitleLineHeight;
  background-color: @popoverTitleBackground;
  border-bottom: @popoverTitleBorderBottom;
  .border-radius((@popoverRadius - 1) (@popoverRadius - 1) 0 0);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  *position: absolute;
  *left: 0;
  *right: 0;
  &:empty {
    display: none;
  }
}

.tm-popover-content {
  padding: @popoverContentPaddingVertical @popoverContentPaddingHorizontal;
  *margin-top: @popoverTitleLineHeight + (@popoverTitlePaddingVertical * 2) + 1;
  > p:last-child {
     margin-bottom: 0;
  }
}

// Arrows
//
// .arrow is outer, .arrow:after is inner

.tm-popover .arrow,
.tm-popover .arrow:after {
  position: absolute;
  display: block;
  width: 0;
  height: 0;
  border-color: transparent;
  border-style: solid;
}
.tm-popover .arrow {
  border-width: @popoverArrowOuterWidth;
}
.tm-popover .arrow:after {
  border-width: @popoverArrowWidth;
  content: "";
}

.tm-popover {
  &.top .arrow {
    left: 50%;
    margin-left: -@popoverArrowOuterWidth;
    border-bottom-width: 0;
    //border-top-color: #999; // IE8 fallback
    border-top-color: @popoverArrowOuterColor;
    bottom: -@popoverArrowOuterWidth;
    &:after {
      bottom: 1px;
      margin-left: -@popoverArrowWidth;
      border-bottom-width: 0;
      border-top-color: @popoverArrowColor;
    }
  }
  &.right .arrow {
    top: 50%;
    left: -@popoverArrowOuterWidth;
    margin-top: -@popoverArrowOuterWidth;
    border-left-width: 0;
    border-right-color: #999; // IE8 fallback
    border-right-color: @popoverArrowOuterColor;
    &:after {
      left: 1px;
      bottom: -@popoverArrowWidth;
      border-left-width: 0;
      border-right-color: @popoverArrowColor;
    }
  }
  &.bottom .arrow {
    left: 50%;
    margin-left: -@popoverArrowOuterWidth;
    border-top-width: 0;
    //border-bottom-color: #999; // IE8 fallback
    border-bottom-color: @popoverArrowOuterColor;
    top: -@popoverArrowOuterWidth;
    &:after {
      top: 1px;
      margin-left: -@popoverArrowWidth;
      border-top-width: 0;
      border-bottom-color: @popoverBottomArrowColor;
    }
  }
  &.left .arrow {
    top: 50%;
    right: -@popoverArrowOuterWidth;
    margin-top: -@popoverArrowOuterWidth;
    border-right-width: 0;
    border-left-color: #999; // IE8 fallback
    border-left-color: @popoverArrowOuterColor;
    &:after {
      right: 1px;
      border-right-width: 0;
      border-left-color: @popoverArrowColor;
      bottom: -@popoverArrowWidth;
    }
  }
}

//
// Footer
// --------------------------------------------------

.tm-footer {
  font-size: @footerFontSize;
  position: absolute;
  bottom: 0; 
  left: 0;
  right: 0;
  min-height: @footerHeight;
  background: @footerBackground;
  border-top: 1px solid @footerBorderTopColor;
  text-align: left;  
  .tm-footer-logo {
    float: right;
    margin: ((@footerHeight - @footerLogoHeight) / 2) 0;
  }  
  .copyright,
  .tm-footer-links {
    float: left;
    margin: ((@footerHeight - @baseLineHeight) / 2) 0;
  }
  .copyright {
    color: @footerCopyrightFontColor;
  }  
  .copyright + .tm-footer-links {
    margin-left: @footerLinksGutter;
  }
}

.tm-footer-links {
  list-style: none;
  margin: 0;
  li {
    display: inline;
    margin-left: @footerLinksGutter;
    &:first-child {
      margin-left: 0;
    }
  }
}
//
// Splitter
// --------------------------------------------------


// Base styles
// -------------------------
.tm-splitter {
  border: @SplitterBorderWidth solid @SplitterBorderColor;
  position: relative;  
  min-height: 300px;
  .box-sizing(border-box);
  &.active *{
    .user-select(none);     
  }
  .tm-splitter {
    border: none;
  }  
}
.tm-splitter .tm-splitter {
  min-height: initial;
}
.tm-splitter-panel {
  position: absolute;
  overflow: hidden;  
}
.tm-splitter-content {
  overflow: auto;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;  
  min-width: 60px;
  min-height: 60px;
  padding: 12px;
  &.hasSplitter {
    padding: 0;
  }
}
.tm-splitter.tm-splitter-content {
  overflow: hidden;
}
.tm-splitbar {
  position: absolute;  
  font-size: 0;
  outline: 0;
  .user-select(none);
  border-color: @SplitterBarBorderColor;
  border-style: solid;
  background: @SplitterBarBackgroundColor;
  &:hover,
  &.active {
    background: darken(@SplitterBarBackgroundColor, 5%);
  }
}
.tm-splitbar-zombie {
  z-index: @zindexSplitBar;
}
.tm-splitbar-zombie,
.tm-splitbar-zombie:hover {
  background: @SplitterBarZombieBackgroundColor;
  &.reached-limit {
    background: @SplitterBarZombieReachedBackgroundColor;
    border-color: @SplitterBarZombieBackgroundColor;
  }
}
.tm-splitbar-handler {
  position: absolute;
  display: block;
  border-style: solid;
  border-color: @SplitterBarHandlerBorderColor;
}
.tm-splitter {
  &.tm-splitter-horizontal {
    > .tm-splitter-panel {
      top: 0;
      bottom: 0;
    }
    > .tm-splitbar {
      top: 0;
      bottom: 0;
      width: @SplitterBarWidth;
      height: auto;
      border-width: 0 @SplitterBarBorderWidth;
      &.tm-splitbar-draggable {
        cursor: col-resize;
      }
      &.tm-splitbar-zombie {  
        border-width: 0;
        width: @SplitterBarWidth + (@SplitterBarBorderWidth * 2);
        height: auto;
      }
      &.reached-limit {
        width: @SplitterBarWidth;
        border-width: 0 @SplitterBarBorderWidth;      
      }
      .tm-splitbar-handler {
        top: 50%;
        left: 50%;
        width: 0;
        height: @SplitterBarHandlerWidth;
        border-width: 0 1px;
        margin-left: -1px;
        margin-top: -(@SplitterBarHandlerWidth / 2);
      }  
    }
  }
  &.tm-splitter-vertical {
    > .tm-splitter-panel {
      left: 0;
      right: 0;
    }
    > .tm-splitbar {
      left: 0;
      right: 0;
      height: @SplitterBarWidth;
      width: auto;
      border-width: @SplitterBarBorderWidth 0;
      &.tm-splitbar-draggable {
        cursor: row-resize;
      }
      &.tm-splitbar-zombie {     
        border-width: 0;
        height: @SplitterBarWidth + (@SplitterBarBorderWidth * 2);
        width: auto;
      }
      &.reached-limit {
        height: @SplitterBarWidth;
        border-width: @SplitterBarBorderWidth 0;      
      }
      .tm-splitbar-handler {
        top: 50%;
        left: 50%;
        width: @SplitterBarHandlerWidth;
        height: 0;
        border-width: 1px 0;
        margin-top: -1px;
        margin-left: -(@SplitterBarHandlerWidth / 2);
      } 
    }
  }  
}
//
// Selections
// --------------------------------------------------------


// GENERAL STYLES
// ------------------------------------

// Table
.tm-selection {
	display: table;
}
.tm-selection-row {
	display: table-row;
}
.tm-selection-cell {
	display: table-cell;
}
.tm-selection-actions {
	vertical-align: middle;
}

// Controls
.tm-selection-selector {
	margin-top: 4px;
	padding: 2px;
}
.tm-btn {
	&.tm-btn-rightward, 
	&.tm-btn-leftward {
		display: block;
		margin: 0 8px;
		padding: 0;
		min-width: 24px;
		height: 24px;
		font-size: @breadcrumbArrowSize;
	}
	&.tm-btn-rightward:before {
		content: "\203A";
	}
	&.tm-btn-leftward:before {
		content: "\2039";
	}
}
// Override .tm-btn + .tm-btn style
.tm-btn-rightward + .tm-btn-leftward {
	margin-top: 5px;
}

//
// Thumbnails
// --------------------------------------------------


// Note: `.thumbnails` and `.thumbnails > li` are overriden in responsive files

// Make wrapper ul behave like the grid
.thumbnails {
  margin-left: -@gridGutterWidth;
  list-style: none;
  .clearfix();
}
// Fluid rows have no left margin
.row-fluid .thumbnails {
  margin-left: 0;
}

// Float li to make thumbnails appear in a row
.thumbnails > li {
  float: left; // Explicity set the float since we don't require .span* classes
  margin-bottom: @baseLineHeight;
  margin-left: @gridGutterWidth;
}

// The actual thumbnail (can be `a` or `div`)
.thumbnail {
  display: block;
  padding: 4px;
  line-height: @baseLineHeight;
  border: 1px solid #ddd;
  .border-radius(@borderRadius);
  .box-shadow(0 1px 3px rgba(0,0,0,.055));
  .transition(all .2s ease-in-out);
}
// Add a hover/focus state for linked versions only
a.thumbnail:hover,
a.thumbnail:focus {
  border-color: @linkColor;
  .box-shadow(0 1px 4px rgba(0,105,214,.25));
}

// Images and captions
.thumbnail > img {
  display: block;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}
.thumbnail .caption {
  padding: 9px;
  color: @gray;
}

//
// Labels and badges
// --------------------------------------------------


// Base classes
.tm-label,
.tm-badge {
  display: inline-block;
  #font > #family > .sans-serif;
  font-size: @baseFontSize; //org: font-size: @baseFontSize * .846;
  //font-weight: bold;
  line-height: @LablesLineHeight; // ensure proper line-height if floated
  color: @white;
  vertical-align: baseline;
  white-space: nowrap;
  //text-shadow: 0 -1px 0 rgba(0,0,0,.25);
  background-color: @LablesBackground;
  letter-spacing: normal;
  
}
// Set unique padding and border-radii
.tm-label {
  padding: @LablesPaddingVertical @LablesPaddingHorizontal;
  margin-left: @LablesArrowBorderHorizontalLeft;
  .border-radius(@LablesRadius);
  vertical-align: middle;
  vertical-align: baseline e("\9");  
  &:before {     
    width: 0;
    height: 0;
    border-style: solid;
    border-width: @LablesArrowBorderHorizontalTop @LablesArrowBorderHorizontalLeft @LablesArrowBorderHorizontalTop 0;
    border-color: transparent @LablesBackground transparent transparent;
    content: '';
    float: left;
    margin-left: -(@LablesPaddingHorizontal + @LablesArrowBorderHorizontalLeft - 1);
    margin-top: ((@LablesLineHeight - (@LablesArrowBorderHorizontalTop * 2) ) / 2);      
  }
  &.arrow-right,
  &.arrow-bottom {
    margin-left: auto;
    &:before {
      float: none;
      margin: 0;
      content: none;     
      border: 0;
    }
    &:after {
      float: right;
      content: '';
      width: 0;
      height: 0;
      border-style: solid;
      margin-right: -(@LablesPaddingHorizontal + @LablesArrowBorderHorizontalLeft - 1);
      margin-top: ((@LablesLineHeight - (@LablesArrowBorderHorizontalTop * 2) ) / 2);    
      border-width: @LablesArrowBorderHorizontalTop 0 @LablesArrowBorderHorizontalTop @LablesArrowBorderHorizontalLeft;
      border-color: transparent transparent transparent @LablesBackground;
    }
  }
  &.arrow-top {
    margin-left: auto;
    &:before { 
      position: relative;
      margin-top: -(@LablesArrowBorderVericaltop);
      margin-left: -(@LablesArrowBorderVericalleft);
      margin-right: -(@LablesArrowBorderVericalleft*2);
      left: 50%;
      border-width: 0 @LablesArrowBorderVericalleft @LablesArrowBorderVericaltop @LablesArrowBorderVericalleft;
      border-color: transparent transparent @LablesBackground transparent;        
    }
  }
  &.arrow-bottom {
    &:after {
      position: relative;
      margin-top: (@LablesLineHeight + @LablesPaddingVertical);
      margin-bottom: -(@LablesLineHeight + @LablesPaddingVertical);
      margin-left: -(@LablesArrowBorderVericalleft);
      margin-right: -(@LablesArrowBorderVericalleft);
      left: -50%;
      border-width: @LablesArrowBorderVericaltop @LablesArrowBorderVericalleft 0 @LablesArrowBorderVericalleft;
      border-color: @LablesBackground transparent transparent transparent;        
    }
  }
  &-important,
  &-error {
    &:before {      
      border-right-color: @LablesError;      
    }
    &.arrow-right:after {      
      border-left-color: @LablesError;
    }
    &.arrow-top:before {      
      border-bottom-color: @LablesError;
    }
    &.arrow-bottom:after {      
      border-top-color: @LablesError;
    }
  }
  &-warning {
    &:before {      
      border-right-color: @LablesWarning;      
    }
    &.arrow-right:after {      
      border-left-color: @LablesWarning;   
    }
    &.arrow-top:before {      
      border-bottom-color: @LablesWarning;   
    }
    &.arrow-bottom:after {      
      border-top-color: @LablesWarning;   
    }
  }
  &-success {
    &:before {      
      border-right-color: @LablesSuccess;      
    }
    &.arrow-right:after {      
      border-left-color: @LablesSuccess;   
    }
    &.arrow-top:before {      
      border-bottom-color: @LablesSuccess;   
    }
    &.arrow-bottom:after {      
      border-top-color: @LablesSuccess;   
    }
  }
  &-info {
    &:before {      
      border-right-color: @LablesInfo;      
    }
    &.arrow-right:after {      
      border-left-color: @LablesInfo;   
    }
    &.arrow-top:before {      
      border-bottom-color: @LablesInfo;   
    }
    &.arrow-bottom:after {      
      border-top-color: @LablesInfo;   
    }
  }
  &-inverse {
    &:before {      
      border-right-color: @LablesInverse;      
    }
    &.arrow-right:after {      
      border-left-color: @LablesInverse;   
    }
    &.arrow-top:before {      
      border-bottom-color: @LablesInverse;   
    }
    &.arrow-bottom:after {      
      border-top-color: @LablesInverse;   
    }
  }  
  &.no-arrow {
    margin: initial;
    &:before,
    &:after {
      width: auto;
      height: auto;
      border-style: none;
      border-width: 0;
      border-color: transparent;
      content: none;
      float: none;
      margin: 0;      
    }
  }
}
:root .tm-label {  
  vertical-align: middle e("\9");
}
.tm-badge {
  text-align: center;
  min-width: @BadgesMinSize - (@BadgesPaddingHorizontal * 2);
  min-height: @BadgesMinSize - (@BadgesPaddingVertical * 2);
  padding: @BadgesPaddingVertical @BadgesPaddingHorizontal;
  .border-radius(@BadgesRadius);
}

// Empty labels/badges collapse
.tm-label,
.tm-badge {
  &:empty {
    display: none;
  }
}

// Hover/focus state, but only for links
a {
  &.tm-label:hover,
  &.tm-label:focus,
  &.tm-badge:hover,
  &.tm-badge:focus {
    color: @white;
    text-decoration: none;
    cursor: pointer;
  }
}

// Colors
// Only give background-color difference to links (and to simplify, we don't qualifty with `a` but [href] attribute)
.tm-label,
.tm-badge {  
  &-important,
  &-error { background-color: @LablesError; }
  &-error[href],
  &-important[href]   { background-color: darken(@errorText, 10%); }
  
  &-warning           { background-color: @LablesWarning; }
  &-warning[href]     { background-color: darken(@LablesWarning, 10%); }
  
  &-success           { background-color: @LablesSuccess; }
  &-success[href]     { background-color: darken(@LablesSuccess, 10%); }
  
  &-info              { background-color: @LablesInfo; }
  &-info[href]        { background-color: darken(@LablesInfo, 10%); }
  
  &-inverse           { background-color: @LablesInverse; }
  &-inverse[href]     { background-color: darken(@LablesInverse, 10%); }
}

// Labels with Icon
.tm-label {
  [class^="icon-"],
  [class*=" icon-"] {
    margin: 0;
    vertical-align: text-bottom;
  }
}

// Quick fix for labels/badges in buttons
.tm-btn {
  .tm-label,
  .tm-badge {
    position: relative;
    top: -1px;
  }
}
//
// Progress bars
// --------------------------------------------------


// ANIMATIONS
// ----------

// Webkit
@-webkit-keyframes tm-progress-bar-stripes {
  from  { background-position: @ProgressStripedBarBackgroundSize 0; }
  to    { background-position: 0 0; }
}

// Firefox
@-moz-keyframes tm-progress-bar-stripes {
  from  { background-position: @ProgressStripedBarBackgroundSize 0; }
  to    { background-position: 0 0; }
}

// IE9
@-ms-keyframes tm-progress-bar-stripes {
  from  { background-position: @ProgressStripedBarBackgroundSize 0; }
  to    { background-position: 0 0; }
}

// Opera
@-o-keyframes tm-progress-bar-stripes {
  from  { background-position: 0 0; }
  to    { background-position: @ProgressStripedBarBackgroundSize 0; }
}

// Spec
@keyframes tm-progress-bar-stripes {
  from  { background-position: @ProgressStripedBarBackgroundSize 0; }
  to    { background-position: 0 0; }
}

// THE BARS
// --------

// Outer container
.tm-progress {  
  min-width: @progressBarMinWidth;
  max-width: @progressBarMaxWidth; 
  height: @progressBarHeight;
  overflow: hidden;
  #gradient > .vertical(@progressBackgroundTop, @progressBackgroundBottom);
  .box-shadow(@progressBackgroundShadow);
  .border-radius(@borderRadius); 
}

// Bar of progress
.tm-progress .bar {
  width: 0%;
  height: 100%;
  *height: @progressBarHeight - 2;  
  color: @white;  
  font-size: @progressLabelFontSize;
  text-align: center;  
  border-top: 1px solid @progressBarBarBorderColorTop;
  border-bottom: 1px solid @progressBarBarBorderColorBottom;  
  #gradient > .vertical(@progressBarBarBackgroundTop, @progressBarBarBackgroundBottom);
  background-color: @progressBarBarBackgroundTop;
  .box-sizing(border-box);
  .transition(width .6s ease);
}

// Striped bars

.tm-progress-striped .bar {
  background-color: @progressBarBarBackgroundTop;
  #gradient > .striped(@progressBarBarBackgroundTop, darken(@progressBarBarBackgroundBottom, 23%), 45deg);  
  .background-size(@ProgressStripedBarBackgroundSize @ProgressStripedBarBackgroundSize);
  border-top: 1px solid @progressBarStripedBorderColorTop;
  border-bottom: 1px solid @progressBarStripedBorderColorBottom;  
}

// Call animation for the active one
.tm-progress-striped.active .bar {
  -webkit-animation: tm-progress-bar-stripes @ProgressStripedBarActiveSpeed linear infinite;
     -moz-animation: tm-progress-bar-stripes @ProgressStripedBarActiveSpeed linear infinite;
      -ms-animation: tm-progress-bar-stripes @ProgressStripedBarActiveSpeed linear infinite;
       -o-animation: tm-progress-bar-stripes @ProgressStripedBarActiveSpeed linear infinite;
          animation: tm-progress-bar-stripes @ProgressStripedBarActiveSpeed linear infinite;
}

// tm-progress-bar group
.tm-progress-group {
  display: inline-block;
}

.tm-progress-group .tm-progress {
  float: left;
  width: @progressBarDefaultWidth;
  margin-top: ((@ProgressGroupOutterHeight - @progressBarHeight) / 2);
}
.tm-progress-group .tm-progress + label{
  float: left;
  margin-left: 10px;
  margin-bottom: 0;
  font-size: @progressLabelFontSize;  
  font-weight: normal;
  line-height: @ProgressGroupOutterHeight;
  cursor: default;
}
//
// Accordion
// --------------------------------------------------
.tm-accordion + .tm-accordion {
  margin-top: 20px;
}
.tm-accordion-group-header {
  border: 1px solid #b1b1b1; 
  .tm-accordion-heading {
    background-color: #deeefd;
  }
}
.tm-accordion-group-header + .tm-accordion-group {
  margin-top: -1px;
}
.tm-accordion-group {
  border: 1px solid #b1b1b1;  
}
.tm-accordion-group + .tm-accordion-group {
  margin-top: -1px;
}
.tm-accordion-heading {
  background-color: #f0f0f0;
}
.tm-accordion-toggle {
  color: @textColor;
  font-size: @fontSize13;
  *display: block;
  padding: 0 5px 0 27px;
  line-height: 28px; 
  position: relative;
  &:hover,
  &:focus {
	color: @textColor;
	text-decoration: none;
  }
  span.caret {
    position: absolute;
    border-style: solid;
    border-width: 5px 5px 0 5px;
    border-color: #000 transparent transparent transparent;
    height: 0px;    
    width: 0px;
    left: 9px;
    top: 5px;
  }
  &.collapsed span.caret {
    border-style: solid;
	border-width: 5px 0 5px 5px;
	left: 12px;
    border-color: transparent transparent transparent #000; 
    top: 3px;
	*top: 2px;
  }
}
.tm-accordion-inner {
  padding: 12px;
  border-top: 1px #b1b1b1 solid;
}
//
// Panel
// --------------------------------------------------

.tm-panel{
  border: @PanelBorderStyle @PanelBorderWidth @PanelBorderColor;
  margin-bottom: @PanelMarginBottom;
  h6{   
    #font > .sans-serif(@PanelHeaderFontSize, bold, @baseLineHeight); 
    padding:  @PanelHeaderPadding;
    background-color: @PanelHeaderBackgroundColor;
    margin: 0;
    letter-spacing: normal;
  }

  .tm-panel-content{
		*display: inline-block;
    padding: @PanelContentPadding;    
		ul.unstyled {
			*float: left;
		}
  }
  ~ .tm-btn {
    margin-top: 12px;
  }
}
.tm-toggler{
  background-color: @backgroundColor;
  border-color: @borderColor;
  position: relative;
  cursor: pointer;

  &.tm-toggler-hover, 
  &.tm-toggler-hover .tm-toggler-container {
    background-color: @backgroundColorOnHover;
  }

  &.tm-toggler-drag .tm-toggler-container .tm-toggler-wrapper .tm-toggler-background, 
  &.tm-toggler-hover .tm-toggler-container .tm-toggler-wrapper .tm-toggler-background{
    background-color: @backgroundColorOnStateOnHover;
  }

  input[data-role=toggler] {
    display: none;
  }

  .tm-toggler-container {
    background-color: @backgroundColor;
    .border-radius(999px);
    height: 100%;
    position: relative;

    .tm-toggler-wrapper {
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      width: 100%;
      overflow: hidden;

      .tm-toggler-background{
        height: 100%;
        background-color: @backgroundColorOnState;
        z-index: 0;
        position: absolute;
        width: 100%;
        left: -100%;
        .transition (width 0.24s ease);
        .transition (left 0.24s ease);
      }
    }

    .tm-toggler-handle {
      background-color: @handleColor;
      .border-radius(50%);
      height: 100%;
      position: absolute;
      .box-shadow(0 1px 4px rgba(0,0,0,0.3));
      left: 0;
      top: 0;
      .transition (all 0.24s ease);
    }
  }


}

.tm-toggler-on {
  background-color: @backgroundColorOnState;
  border-color: @borderColorOnState; 

  &.tm-toggler-hover {
    background-color: @backgroundColorOnStateOnHover;
  } 
}



.tm-toggler-disabled {
  .opacity(@disabledOpacity);
}


